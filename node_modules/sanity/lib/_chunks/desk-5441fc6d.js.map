{"version":3,"file":"desk-5441fc6d.js","sources":["../../src/desk/components/Delay.tsx","../../src/desk/components/DocTitle.tsx","../../src/desk/components/TimeAgo.tsx","../../src/desk/components/confirmDeleteDialog/useReferringDocuments.ts","../../src/desk/components/PublishedStatus.tsx","../../src/desk/components/DraftStatus.tsx","../../src/desk/components/paneItem/PaneItemPreview.tsx","../../src/desk/components/paneRouter/PaneRouterContext.tsx","../../src/desk/components/paneRouter/BackLink.tsx","../../src/desk/components/paneRouter/ChildLink.tsx","../../src/desk/components/paneRouter/ReferenceChildLink.tsx","../../src/desk/components/paneRouter/ParameterizedLink.tsx","../../src/desk/components/paneRouter/usePaneRouter.ts","../../src/desk/components/confirmDeleteDialog/ReferencePreviewLink.tsx","../../src/desk/components/confirmDeleteDialog/ConfirmDeleteDialogBody.styles.tsx","../../src/desk/components/confirmDeleteDialog/ConfirmDeleteDialogBody.tsx","../../src/desk/components/confirmDeleteDialog/ConfirmDeleteDialog.tsx","../../src/desk/components/confirmDeleteDialog/index.tsx","../../src/desk/components/pane/PaneMenuButtonItem.tsx","../../src/desk/components/pane/PaneContextMenuButton.tsx","../../src/desk/components/pane/constants.ts","../../src/desk/components/pane/PaneContext.ts","../../src/desk/components/pane/PaneLayoutContext.ts","../../src/desk/components/pane/usePaneLayout.ts","../../src/desk/components/pane/PaneDivider.tsx","../../src/desk/components/pane/Pane.tsx","../../src/desk/components/pane/usePane.ts","../../src/desk/components/pane/PaneContent.styles.tsx","../../src/desk/components/pane/PaneContent.tsx","../../src/desk/components/pane/PaneFooter.styles.tsx","../../src/desk/components/pane/PaneFooter.tsx","../../src/desk/components/pane/PaneHeader.styles.tsx","../../src/desk/components/pane/PaneHeader.tsx","../../src/desk/components/pane/PaneHeaderActionButton.tsx","../../src/desk/components/pane/PaneLayout.styles.tsx","../../src/desk/menuNodes.ts","../../src/desk/components/IntentButton.tsx","../../src/desk/components/paneHeaderActions/InsufficientPermissionsMessageTooltip.tsx","../../src/desk/components/paneHeaderActions/PaneHeaderCreateButton.tsx","../../src/desk/components/paneHeaderActions/PaneHeaderActions.tsx","../../src/desk/documentActions/DeleteAction.tsx","../../src/desk/documentActions/DiscardChangesAction.tsx","../../src/desk/documentActions/DuplicateAction.tsx","../../src/desk/documentActions/HistoryRestoreAction.tsx","../../src/desk/panes/document/DocumentPaneContext.ts","../../src/desk/panes/document/useDocumentPane.tsx","../../src/desk/documentActions/PublishAction.tsx","../../src/desk/documentActions/UnpublishAction.tsx","../../src/desk/documentBadges/LiveEditBadge.ts","../../src/desk/constants.ts","../../src/desk/getIntentState.ts","../../src/desk/router.ts","../../src/desk/panes/document/constants.ts","../../src/desk/panes/document/documentInspector/DocumentInspectorHeader.tsx","../../src/desk/DeskToolContext.ts","../../src/desk/useDeskTool.ts","../../src/desk/panes/document/documentInspector/Resizer.tsx","../../src/desk/panes/document/documentInspector/Resizable.tsx","../../src/desk/panes/document/inspectors/validation/getPathTypes.ts","../../src/desk/panes/document/inspectors/validation/ValidationInspector.tsx","../../src/desk/panes/document/inspectors/validation/index.ts","../../src/desk/panes/document/timeline/constants.ts","../../src/desk/panes/document/timeline/helpers.ts","../../src/desk/panes/document/timeline/userAvatarStack.tsx","../../src/desk/panes/document/timeline/timelineItem.styled.tsx","../../src/desk/panes/document/timeline/timelineItem.tsx","../../src/desk/panes/document/timeline/timeline.styled.tsx","../../src/desk/panes/document/timeline/timeline.tsx","../../src/desk/panes/document/timeline/TimelineError.tsx","../../src/desk/panes/document/timeline/timelineMenu.tsx","../../src/desk/panes/document/inspectors/changes/LoadingContent.tsx","../../src/desk/panes/document/inspectors/changes/helpers.ts","../../src/desk/panes/document/inspectors/changes/ChangesInspector.tsx","../../src/desk/panes/document/inspectors/changes/index.ts","../../src/desk/deskTool.ts","../../src/desk/panes/document/menuItems.ts","../../src/desk/panes/document/usePreviewUrl.ts","../../src/desk/panes/document/getInitialValueTemplateOpts.ts","../../src/desk/panes/document/DocumentInspectorMenuItemsResolver.tsx","../../src/desk/panes/document/DocumentPaneProvider.tsx","../../src/desk/structureBuilder/SerializeError.ts","../../src/desk/structureBuilder/util/getExtendedProjection.ts","../../src/desk/structureBuilder/Sort.ts","../../src/desk/structureBuilder/MenuItem.ts","../../src/desk/structureBuilder/MenuItemGroup.ts","../../src/desk/structureBuilder/util/validateId.ts","../../src/desk/structureBuilder/util/getStructureNodeId.ts","../../src/desk/structureBuilder/Component.ts","../../src/desk/structureBuilder/util/resolveTypeForDocument.ts","../../src/desk/structureBuilder/views/View.ts","../../src/desk/structureBuilder/views/ComponentView.ts","../../src/desk/structureBuilder/views/FormView.ts","../../src/desk/structureBuilder/views/index.ts","../../src/desk/structureBuilder/Document.ts","../../src/desk/structureBuilder/Layout.ts","../../src/desk/structureBuilder/Intent.ts","../../src/desk/structureBuilder/InitialValueTemplateItem.ts","../../src/desk/structureBuilder/GenericList.ts","../../src/desk/structureBuilder/DocumentList.ts","../../src/desk/structureBuilder/List.ts","../../src/desk/structureBuilder/ListItem.ts","../../src/desk/structureBuilder/DocumentListItem.ts","../../src/desk/structureBuilder/DocumentTypeList.ts","../../src/desk/structureBuilder/documentTypeListItems.ts","../../src/desk/structureBuilder/createStructureBuilder.ts","../../src/desk/DeskToolProvider.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react'\n\nexport function Delay({\n  children,\n  ms = 0,\n}: {\n  children?: React.ReactElement | (() => React.ReactElement)\n  ms?: number\n}): React.ReactElement {\n  const [ready, setReady] = useState(ms <= 0)\n\n  useEffect(() => {\n    if (ms <= 0) {\n      return undefined\n    }\n\n    const timeoutId = setTimeout(() => setReady(true), ms)\n\n    return () => {\n      clearTimeout(timeoutId)\n    }\n  }, [ms])\n\n  if (!ready || !children) {\n    return <></>\n  }\n\n  return typeof children === 'function' ? children() : children\n}\n","import {SanityDocumentLike} from '@sanity/types'\nimport React from 'react'\nimport {useSchema, unstable_useValuePreview as useValuePreview} from 'sanity'\n\nexport interface DocTitleProps {\n  document: SanityDocumentLike\n}\n\nexport function DocTitle(props: DocTitleProps) {\n  const {document: documentValue} = props\n  const schema = useSchema()\n  const schemaType = schema.get(documentValue._type)\n\n  const {error, value} = useValuePreview({\n    schemaType: schemaType!,\n    value: documentValue,\n  })\n\n  if (!schemaType) {\n    return <code>Unknown schema type: {documentValue._type}</code>\n  }\n\n  if (error) {\n    return <>Error: {error.message}</>\n  }\n\n  return <>{value?.title || <span style={{color: 'var(--card-muted-fg-color)'}}>Untitled</span>}</>\n}\n","import React from 'react'\nimport {useTimeAgo} from 'sanity'\n\nexport interface TimeAgoProps {\n  time: string | Date\n}\n\nexport function TimeAgo({time}: TimeAgoProps) {\n  const timeAgo = useTimeAgo(time)\n\n  return <span title={timeAgo}>{timeAgo} ago</span>\n}\n","import {useMemo} from 'react'\nimport {ClientError, SanityClient} from '@sanity/client'\nimport {Observable, timer, fromEvent, EMPTY, of} from 'rxjs'\nimport {\n  map,\n  startWith,\n  distinctUntilChanged,\n  switchMap,\n  shareReplay,\n  catchError,\n} from 'rxjs/operators'\nimport {\n  AvailabilityResponse,\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  DocumentStore,\n  useDocumentStore,\n  createHookFromObservableFactory,\n  getDraftId,\n  getPublishedId,\n  useClient,\n} from 'sanity'\n\n// this is used in place of `instanceof` so the matching can be more robust and\n// won't have any issues with dual packages etc\n// https://nodejs.org/api/packages.html#dual-package-hazard\nfunction isClientError(e: unknown): e is ClientError {\n  if (typeof e !== 'object') return false\n  if (!e) return false\n  return 'statusCode' in e && 'response' in e\n}\n\nconst POLL_INTERVAL = 5000\n\n// only fetches when the document is visible\nlet visiblePoll$: Observable<number>\nconst getVisiblePoll$ = () => {\n  if (!visiblePoll$) {\n    visiblePoll$ = fromEvent(document, 'visibilitychange').pipe(\n      // add empty emission to have this fire on creation\n      startWith(null),\n      map(() => document.visibilityState === 'visible'),\n      distinctUntilChanged(),\n      switchMap((visible) =>\n        visible\n          ? // using timer instead of interval since timer will emit on creation\n            timer(0, POLL_INTERVAL)\n          : EMPTY\n      ),\n      shareReplay({refCount: true, bufferSize: 1})\n    )\n  }\n  return visiblePoll$\n}\n\nexport type ReferringDocuments = {\n  isLoading: boolean\n  totalCount: number\n  projectIds: string[]\n  datasetNames: string[]\n  hasUnknownDatasetNames: boolean\n  internalReferences?: {\n    totalCount: number\n    references: Array<{_id: string; _type: string}>\n  }\n  crossDatasetReferences?: {\n    totalCount: number\n    references: Array<{\n      /**\n       * The project ID of the document that is currently referencing the subject\n       * document. Unlike `documentId` and `datasetName`, this should always be\n       * defined.\n       */\n      projectId: string\n      /**\n       * The ID of the document that is currently referencing the subject\n       * document. This will be omitted if there is no access to the current\n       * project and dataset pair (e.g. if no `sanity-project-token` were\n       * configured)\n       */\n      documentId?: string\n      /**\n       * The dataset name that is currently referencing the subject document.\n       * This will be omitted if there is no access to the current project and\n       * dataset pair (e.g. if no `sanity-project-token` were configured)\n       */\n      datasetName?: string\n    }>\n  }\n}\n\nfunction getDocumentExistence(\n  documentId: string,\n  {versionedClient}: {versionedClient: SanityClient}\n): Observable<string | undefined> {\n  const draftId = getDraftId(documentId)\n  const publishedId = getPublishedId(documentId)\n  const requestOptions = {\n    uri: versionedClient.getDataUrl('doc', `${draftId},${publishedId}`),\n    json: true,\n    query: {excludeContent: 'true'},\n    tag: 'use-referring-documents.document-existence',\n  }\n  return versionedClient.observable.request<AvailabilityResponse>(requestOptions).pipe(\n    map(({omitted}) => {\n      const nonExistant = omitted.filter((doc) => doc.reason === 'existence')\n      if (nonExistant.length === 2) {\n        // None of the documents exist\n        return undefined\n      }\n\n      if (nonExistant.length === 0) {\n        // Both exist, so use the published one\n        return publishedId\n      }\n\n      // If the draft does not exist, use the published ID, and vice versa\n      return nonExistant.some((doc) => doc.id === draftId) ? publishedId : draftId\n    })\n  )\n}\n\n/**\n * fetches the cross-dataset references using the client observable.request\n * method (for that requests can be automatically cancelled)\n */\nfunction fetchCrossDatasetReferences(\n  documentId: string,\n  context: {versionedClient: SanityClient}\n): Observable<ReferringDocuments['crossDatasetReferences']> {\n  const {versionedClient} = context\n\n  return getVisiblePoll$().pipe(\n    switchMap(() => getDocumentExistence(documentId, context)),\n    switchMap((checkDocumentId) => {\n      if (!checkDocumentId) {\n        return of({totalCount: 0, references: []})\n      }\n\n      const currentDataset = versionedClient.config().dataset\n\n      return versionedClient.observable\n        .request({\n          url: `/data/references/${currentDataset}/documents/${checkDocumentId}/to?excludeInternalReferences=true&excludePaths=true`,\n          tag: 'use-referring-documents.external',\n        })\n        .pipe(\n          catchError((e) => {\n            // it's possible that referencing document doesn't exist yet so the\n            // API will return a 404. In those cases, we want to catch and return\n            // a response with no references\n            if (isClientError(e) && e.statusCode === 404) {\n              return of({totalCount: 0, references: []})\n            }\n\n            throw e\n          })\n        )\n    })\n  )\n}\n\nconst useInternalReferences = createHookFromObservableFactory(\n  ([documentId, documentStore]: [string, DocumentStore]) => {\n    const referencesClause = '*[references($documentId)][0...100]{_id,_type}'\n    const totalClause = 'count(*[references($documentId)])'\n    const fetchQuery = `{\"references\":${referencesClause},\"totalCount\":${totalClause}}`\n    const listenQuery = '*[references($documentId)]'\n\n    return documentStore.listenQuery(\n      {fetch: fetchQuery, listen: listenQuery},\n      {documentId},\n      {tag: 'use-referring-documents', transitions: ['appear', 'disappear'], throttleTime: 5000}\n    ) as Observable<ReferringDocuments['internalReferences']>\n  }\n)\n\nconst useCrossDatasetReferences = createHookFromObservableFactory(\n  ([documentId, versionedClient]: [string, SanityClient]) => {\n    // (documentId: string, versionedClient: SanityClient) => {\n    return getVisiblePoll$().pipe(\n      switchMap(() =>\n        fetchCrossDatasetReferences(documentId, {\n          versionedClient,\n        })\n      )\n    )\n  }\n)\n\nexport function useReferringDocuments(documentId: string): ReferringDocuments {\n  const versionedClient = useClient(DEFAULT_STUDIO_CLIENT_OPTIONS)\n\n  const documentStore = useDocumentStore()\n  const publishedId = getPublishedId(documentId)\n\n  const [internalReferences, isInternalReferencesLoading] = useInternalReferences(\n    useMemo(() => [publishedId, documentStore], [documentStore, publishedId])\n  )\n\n  const [crossDatasetReferences, isCrossDatasetReferencesLoading] = useCrossDatasetReferences(\n    useMemo(() => [publishedId, versionedClient], [publishedId, versionedClient])\n  )\n\n  const projectIds = useMemo(() => {\n    return Array.from(\n      new Set(\n        crossDatasetReferences?.references\n          .map((crossDatasetReference) => crossDatasetReference.projectId)\n          .filter(Boolean)\n      )\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const datasetNames = useMemo(() => {\n    return Array.from(\n      new Set<string>(\n        crossDatasetReferences?.references\n          // .filter((name) => typeof name === 'string')\n          .map((crossDatasetReference) => crossDatasetReference?.datasetName || '')\n          .filter((datasetName) => Boolean(datasetName) && datasetName !== '')\n      )\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const hasUnknownDatasetNames = useMemo(() => {\n    return Boolean(\n      crossDatasetReferences?.references.some(\n        (crossDatasetReference) => typeof crossDatasetReference.datasetName !== 'string'\n      )\n    )\n  }, [crossDatasetReferences?.references])\n\n  return {\n    totalCount: (internalReferences?.totalCount || 0) + (crossDatasetReferences?.totalCount || 0),\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n    internalReferences,\n    crossDatasetReferences,\n    isLoading: isInternalReferencesLoading || isCrossDatasetReferencesLoading,\n  }\n}\n","import React from 'react'\nimport {PublishIcon} from '@sanity/icons'\nimport {PreviewValue, SanityDocument} from '@sanity/types'\nimport {Box, Text, Tooltip} from '@sanity/ui'\nimport {TimeAgo} from './TimeAgo'\nimport {TextWithTone} from 'sanity'\n\nexport function PublishedStatus(props: {document?: PreviewValue | Partial<SanityDocument> | null}) {\n  const {document} = props\n  const updatedAt = document && '_updatedAt' in document && document._updatedAt\n\n  return (\n    <Tooltip\n      portal\n      content={\n        <Box padding={2}>\n          <Text size={1}>\n            {document ? (\n              <>Published {updatedAt && <TimeAgo time={updatedAt} />}</>\n            ) : (\n              <>Not published</>\n            )}\n          </Text>\n        </Box>\n      }\n    >\n      <TextWithTone tone=\"positive\" dimmed={!document} muted={!document} size={1}>\n        <PublishIcon />\n      </TextWithTone>\n    </Tooltip>\n  )\n}\n","import React from 'react'\nimport {EditIcon} from '@sanity/icons'\nimport {PreviewValue, SanityDocument} from '@sanity/types'\nimport {Box, Text, Tooltip} from '@sanity/ui'\nimport {TimeAgo} from './TimeAgo'\nimport {TextWithTone} from 'sanity'\n\nexport function DraftStatus(props: {document?: PreviewValue | Partial<SanityDocument> | null}) {\n  const {document} = props\n  const updatedAt = document && '_updatedAt' in document && document._updatedAt\n\n  return (\n    <Tooltip\n      portal\n      content={\n        <Box padding={2}>\n          <Text size={1}>\n            {document ? (\n              <>Edited {updatedAt && <TimeAgo time={updatedAt} />}</>\n            ) : (\n              <>No unpublished edits</>\n            )}\n          </Text>\n        </Box>\n      }\n    >\n      <TextWithTone tone=\"caution\" dimmed={!document} muted={!document} size={1}>\n        <EditIcon />\n      </TextWithTone>\n    </Tooltip>\n  )\n}\n","import type {SanityDocument, SchemaType} from '@sanity/types'\nimport React, {isValidElement} from 'react'\nimport {isNumber, isString} from 'lodash'\nimport {Inline} from '@sanity/ui'\nimport {useMemoObservable} from 'react-rx'\nimport {PublishedStatus} from '../PublishedStatus'\nimport {DraftStatus} from '../DraftStatus'\nimport type {PaneItemPreviewState} from './types'\nimport {\n  DocumentPresence,\n  DocumentPreviewPresence,\n  DocumentPreviewStore,\n  GeneralPreviewLayoutKey,\n  getPreviewStateObservable,\n  getPreviewValueWithFallback,\n  SanityDefaultPreview,\n  isRecord,\n} from 'sanity'\n\nexport interface PaneItemPreviewProps {\n  documentPreviewStore: DocumentPreviewStore\n  icon: React.ComponentType | false\n  layout: GeneralPreviewLayoutKey\n  presence?: DocumentPresence[]\n  schemaType: SchemaType\n  value: SanityDocument\n}\n\nexport function PaneItemPreview(props: PaneItemPreviewProps) {\n  const {icon, layout, presence, schemaType, value} = props\n  const title =\n    (isRecord(value.title) && isValidElement(value.title)) ||\n    isString(value.title) ||\n    isNumber(value.title)\n      ? value.title\n      : null\n\n  // NOTE: this emits sync so can never be null\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const {draft, published, isLoading} = useMemoObservable<PaneItemPreviewState>(\n    () => getPreviewStateObservable(props.documentPreviewStore, schemaType, value._id, title),\n    [props.documentPreviewStore, schemaType, value._id, title]\n  )!\n\n  const status = isLoading ? null : (\n    <Inline space={4}>\n      {presence && presence.length > 0 && <DocumentPreviewPresence presence={presence} />}\n      <PublishedStatus document={published} />\n      <DraftStatus document={draft} />\n    </Inline>\n  )\n\n  return (\n    <SanityDefaultPreview\n      {...getPreviewValueWithFallback({value, draft, published})}\n      isPlaceholder={isLoading}\n      icon={icon}\n      layout={layout}\n      status={status}\n    />\n  )\n}\n","import {createContext} from 'react'\nimport {PaneRouterContextValue} from './types'\n\nfunction missingContext<T = unknown>(): T {\n  throw new Error('Pane is missing router context')\n}\n\n/**\n *\n * @hidden\n * @beta\n */\nexport const PaneRouterContext = createContext<PaneRouterContextValue>({\n  index: 0,\n  groupIndex: 0,\n  siblingIndex: 0,\n  payload: undefined,\n  params: {},\n  hasGroupSiblings: false,\n  groupLength: 0,\n  routerPanesState: [],\n  BackLink: () => missingContext(),\n  ChildLink: () => missingContext(),\n  ReferenceChildLink: () => missingContext(),\n  handleEditReference: () => missingContext(),\n  ParameterizedLink: () => missingContext(),\n  replaceCurrent: () => missingContext(),\n  closeCurrent: () => missingContext(),\n  duplicateCurrent: () => missingContext(),\n  setView: () => missingContext(),\n  setParams: () => missingContext(),\n  setPayload: () => missingContext(),\n  navigateIntent: () => missingContext(),\n})\n","import React, {forwardRef, useContext, useMemo} from 'react'\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {BackLinkProps} from './types'\nimport {StateLink} from 'sanity/router'\n\n/**\n * @internal\n */\nexport const BackLink = forwardRef(function BackLink(\n  props: BackLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>\n) {\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n  const panes = useMemo(() => routerPanesState.slice(0, groupIndex), [groupIndex, routerPanesState])\n  const state = useMemo(() => ({panes}), [panes])\n\n  return <StateLink {...props} ref={ref} state={state} />\n}) as React.ComponentType<BackLinkProps>\n","import React, {forwardRef, useContext} from 'react'\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {ChildLinkProps} from './types'\nimport {StateLink} from 'sanity/router'\n\n/**\n * @internal\n */\nexport const ChildLink = forwardRef(function ChildLink(\n  props: ChildLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>\n) {\n  const {childId, childPayload, childParameters, ...rest} = props\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n\n  return (\n    <StateLink\n      {...rest}\n      ref={ref}\n      state={{\n        panes: [\n          ...routerPanesState.slice(0, groupIndex + 1),\n          [{id: childId, params: childParameters, payload: childPayload}],\n        ],\n      }}\n    />\n  )\n})\n","import React, {forwardRef} from 'react'\nimport {toString as pathToString} from '@sanity/util/paths'\nimport {ChildLink} from './ChildLink'\nimport {ReferenceChildLinkProps} from './types'\n\nexport const ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  {documentId, documentType, parentRefPath, children, template, ...rest}: ReferenceChildLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>\n) {\n  return (\n    <ChildLink\n      {...rest}\n      ref={ref}\n      childId={documentId}\n      childPayload={template?.params}\n      childParameters={{\n        type: documentType,\n        parentRefPath: pathToString(parentRefPath),\n        ...(template && {template: template?.id}),\n      }}\n    >\n      {children}\n    </ChildLink>\n  )\n})\n","import React, {forwardRef, useContext, useMemo} from 'react'\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {useUnique} from 'sanity'\nimport {StateLink} from 'sanity/router'\n\ninterface ParameterizedLinkProps {\n  params?: Record<string, string>\n  payload?: unknown\n  children?: React.ReactNode\n}\n\n/**\n * @internal\n */\nexport const ParameterizedLink = forwardRef(function ParameterizedLink(\n  props: ParameterizedLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>\n) {\n  const {routerPanesState: currentPanes, groupIndex, siblingIndex} = useContext(PaneRouterContext)\n  const {params, payload, ...rest} = props\n  const nextParams = useUnique(params)\n  const nextPayload = useUnique(payload)\n\n  const nextState = useMemo(() => {\n    const currentGroup = currentPanes[groupIndex]\n    const currentSibling = currentGroup[siblingIndex]\n\n    const nextSibling = {\n      ...currentSibling,\n      params: nextParams ?? currentSibling.params,\n      payload: nextPayload ?? currentSibling.payload,\n    }\n\n    const nextGroup = [\n      ...currentGroup.slice(0, siblingIndex),\n      nextSibling,\n      ...currentGroup.slice(siblingIndex + 1),\n    ]\n\n    const nextPanes = [\n      ...currentPanes.slice(0, groupIndex),\n      nextGroup,\n      ...currentPanes.slice(groupIndex + 1),\n    ]\n\n    return {panes: nextPanes}\n  }, [currentPanes, groupIndex, nextParams, nextPayload, siblingIndex])\n\n  return <StateLink ref={ref} {...rest} state={nextState} />\n})\n","import {useContext} from 'react'\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {PaneRouterContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta\n */\nexport function usePaneRouter(): PaneRouterContextValue {\n  return useContext(PaneRouterContext)\n}\n","import React, {useCallback} from 'react'\nimport type {SanityDocument, SchemaType} from '@sanity/types'\nimport {PaneItemPreview} from '../paneItem/PaneItemPreview'\nimport {usePaneRouter} from '../paneRouter'\nimport {\n  FIXME,\n  PreviewCard,\n  getPublishedId,\n  useDocumentPresence,\n  useDocumentPreviewStore,\n} from 'sanity'\n\nconst EMPTY_ARRAY: [] = []\n\ninterface ReferencePreviewLinkProps {\n  onClick?: () => void\n  type: SchemaType & {icon?: any}\n  value: SanityDocument\n}\n\nexport function ReferencePreviewLink(props: ReferencePreviewLinkProps) {\n  const {onClick, type, value} = props\n  const publishedId = getPublishedId(value?._id)\n  const documentPresence = useDocumentPresence(publishedId)\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {ReferenceChildLink} = usePaneRouter()\n\n  const Link = useCallback(\n    function LinkComponent(linkProps: {children: React.ReactNode}) {\n      return (\n        <ReferenceChildLink\n          documentId={value?._id}\n          documentType={type?.name}\n          parentRefPath={EMPTY_ARRAY}\n          {...linkProps}\n        />\n      )\n    },\n    [ReferenceChildLink, type?.name, value?._id]\n  )\n\n  return (\n    <PreviewCard\n      __unstable_focusRing\n      as={Link as FIXME}\n      data-as=\"a\"\n      onClick={onClick}\n      padding={2}\n      radius={2}\n    >\n      <PaneItemPreview\n        documentPreviewStore={documentPreviewStore}\n        icon={type?.icon}\n        layout=\"default\"\n        presence={documentPresence?.length > 0 ? documentPresence : EMPTY_ARRAY}\n        schemaType={type}\n        value={value}\n      />\n    </PreviewCard>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport {rem, Flex, Text, Card, Box, Tooltip, Container, Inline} from '@sanity/ui'\nimport {InfoOutlineIcon} from '@sanity/icons'\n\nexport const ChevronWrapper = styled(Box)`\n  margin-left: auto;\n`\n\nexport const CrossDatasetReferencesDetails = styled.details`\n  flex: none;\n\n  &[open] ${ChevronWrapper} {\n    transform: rotate(180deg);\n  }\n`\n\nexport const CrossDatasetReferencesSummary = styled.summary`\n  list-style: none;\n\n  &::-webkit-details-marker {\n    display: none;\n  }\n`\n\nexport const TableContainer = styled(Box).attrs({paddingX: 2, paddingBottom: 2})`\n  overflow: auto;\n  max-height: 150px;\n`\n\nexport const Table = styled.table`\n  width: 100%;\n  text-align: left;\n  padding: 0 ${({theme}) => rem(theme.sanity.space[2])};\n  border-collapse: collapse;\n\n  th {\n    padding: ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  thead > tr {\n    position: sticky;\n    top: 0;\n    background: var(--card-bg-color);\n    z-index: 1;\n  }\n\n  td {\n    padding: 0 ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  tr > *:last-child {\n    text-align: right;\n  }\n`\n\nexport const DocumentIdFlex = styled(Flex)`\n  min-height: 35px;\n`\n\nexport const ReferencesCard = styled(Card).attrs({\n  radius: 2,\n  shadow: 1,\n  marginBottom: 4,\n  flex: 'auto',\n})`\n  overflow: hidden;\n  overflow: clip;\n  min-height: 150px;\n`\n\nexport const OtherReferenceCount = (props: {totalCount: number; references: unknown[]}) => {\n  const difference = props.totalCount - props.references.length\n\n  if (!difference) return null\n\n  return (\n    <Inline space={2}>\n      <Text size={1} muted>\n        {difference} other reference{difference === 1 ? '' : 's'} not shown{' '}\n      </Text>\n\n      <Tooltip\n        portal\n        placement=\"top\"\n        content={\n          <Container width={0}>\n            <Box padding={2}>\n              <Text size={1}>\n                We can't show metadata about these references because no token with access to the\n                datasets they are in was found.\n              </Text>\n            </Box>\n          </Container>\n        }\n      >\n        <Text size={1} muted>\n          <InfoOutlineIcon />\n        </Text>\n      </Tooltip>\n    </Inline>\n  )\n}\n","import React, {useCallback} from 'react'\nimport {\n  WarningOutlineIcon,\n  DocumentsIcon,\n  ClipboardIcon,\n  UnknownIcon,\n  ChevronDownIcon,\n} from '@sanity/icons'\nimport {useToast, Text, Box, Button, Flex, Label, Card, Stack} from '@sanity/ui'\nimport CopyToClipboard from 'react-copy-to-clipboard'\nimport {ReferencePreviewLink} from './ReferencePreviewLink'\nimport {ReferringDocuments} from './useReferringDocuments'\nimport {\n  ReferencesCard,\n  OtherReferenceCount,\n  CrossDatasetReferencesDetails,\n  CrossDatasetReferencesSummary,\n  TableContainer,\n  Table,\n  ChevronWrapper,\n  DocumentIdFlex,\n} from './ConfirmDeleteDialogBody.styles'\nimport {SanityDefaultPreview, useSchema} from 'sanity'\n\ntype DeletionConfirmationDialogBodyProps = Required<ReferringDocuments> & {\n  documentTitle: React.ReactNode\n  action: string\n  onReferenceLinkClick?: () => void\n}\n\n/**\n * The inner part of the `ConfirmDeleteDialog`. This is ran when both the\n * `crossDatasetReferences` and `internalReferences` are loaded.\n */\nexport function ConfirmDeleteDialogBody({\n  crossDatasetReferences,\n  internalReferences,\n  documentTitle,\n  totalCount,\n  action,\n  datasetNames,\n  hasUnknownDatasetNames,\n  onReferenceLinkClick,\n}: DeletionConfirmationDialogBodyProps) {\n  const schema = useSchema()\n  const toast = useToast()\n\n  const renderPreviewItem = useCallback(\n    (item: any) => {\n      const type = schema.get(item._type)\n      if (type) {\n        return <ReferencePreviewLink type={type} value={item} onClick={onReferenceLinkClick} />\n      }\n\n      return (\n        // Padding added to match the ReferencePreviewLink styling\n        <Box padding={2}>\n          <SanityDefaultPreview\n            icon={UnknownIcon}\n            title=\"Preview Unavailable\"\n            subtitle={`ID: ${item._id}`}\n            layout=\"default\"\n          />\n        </Box>\n      )\n    },\n    [schema, onReferenceLinkClick]\n  )\n\n  if (internalReferences?.totalCount === 0 && crossDatasetReferences?.totalCount === 0) {\n    return (\n      <Text as=\"p\">\n        Are you sure you want to {action} <strong>“{documentTitle}”</strong>?\n      </Text>\n    )\n  }\n\n  const documentCount =\n    crossDatasetReferences.totalCount === 1\n      ? '1 document'\n      : `${crossDatasetReferences.totalCount.toLocaleString()} documents`\n\n  // We do some extra checks to handle cases where you have unavailable dataset\n  // name(s) due to permissions, both alone and in combination with known datasets\n\n  // This normalizes one or more undefined dataset names to the catch-all `unavailable`\n  const normalizedDatasetNames = [\n    ...datasetNames,\n    ...(hasUnknownDatasetNames ? ['unavailable'] : []),\n  ]\n  const datasetsCount =\n    normalizedDatasetNames.length === 1\n      ? 'another dataset'\n      : `${normalizedDatasetNames.length} datasets`\n\n  let datasetNameList = `Dataset${\n    normalizedDatasetNames.length === 1 ? '' : 's'\n  }: ${normalizedDatasetNames.join(', ')}`\n\n  // We only have one dataset, and it is unavailable due to permissions\n  if (hasUnknownDatasetNames && normalizedDatasetNames.length === 1) {\n    datasetNameList = 'Unavailable dataset'\n  }\n\n  return (\n    <>\n      <Card padding={3} radius={2} tone=\"caution\" marginBottom={4} flex=\"none\">\n        <Flex>\n          <Text aria-hidden=\"true\" size={1}>\n            <WarningOutlineIcon />\n          </Text>\n          <Box flex={1} marginLeft={3}>\n            <Text size={1}>\n              {totalCount === 1 ? (\n                <>1 document refers to “{documentTitle}”</>\n              ) : (\n                <>\n                  {totalCount.toLocaleString()} documents refer to “{documentTitle}”\n                </>\n              )}\n            </Text>\n          </Box>\n        </Flex>\n      </Card>\n\n      <Box flex=\"none\" marginBottom={4}>\n        <Text>\n          You may not be able to {action} “{documentTitle}” because the following documents refer to\n          it:\n        </Text>\n      </Box>\n\n      <ReferencesCard>\n        <Flex direction=\"column\" height=\"fill\">\n          {internalReferences.totalCount > 0 && (\n            <Stack as=\"ul\" padding={3} space={3} overflow=\"auto\" data-testid=\"internal-references\">\n              {internalReferences?.references.map((item) => (\n                <Box as=\"li\" key={item._id}>\n                  {renderPreviewItem(item)}\n                </Box>\n              ))}\n\n              {internalReferences.totalCount > internalReferences.references.length && (\n                <Box as=\"li\" padding={3}>\n                  <OtherReferenceCount {...internalReferences} />\n                </Box>\n              )}\n            </Stack>\n          )}\n\n          {crossDatasetReferences.totalCount > 0 && (\n            <CrossDatasetReferencesDetails\n              data-testid=\"cross-dataset-references\"\n              style={{\n                // only add the border if needed\n                borderTop:\n                  internalReferences.totalCount > 0\n                    ? '1px solid var(--card-shadow-outline-color)'\n                    : undefined,\n              }}\n            >\n              <CrossDatasetReferencesSummary>\n                <Flex padding={4} align=\"center\">\n                  <Box marginRight={4}>\n                    <Text size={3}>\n                      <DocumentsIcon />\n                    </Text>\n                  </Box>\n                  <Flex marginRight={4} direction=\"column\">\n                    <Box marginBottom={2}>\n                      <Text>\n                        {documentCount} in {datasetsCount}\n                      </Text>\n                    </Box>\n                    <Box>\n                      <Text title={datasetNameList} textOverflow=\"ellipsis\" size={1} muted>\n                        {datasetNameList}\n                      </Text>\n                    </Box>\n                  </Flex>\n                  <ChevronWrapper>\n                    <Text muted>\n                      <ChevronDownIcon />\n                    </Text>\n                  </ChevronWrapper>\n                </Flex>\n              </CrossDatasetReferencesSummary>\n\n              <TableContainer>\n                <Table>\n                  <thead>\n                    <tr>\n                      <th>\n                        <Label muted size={0}>\n                          Project ID\n                        </Label>\n                      </th>\n                      <th>\n                        <Label muted size={0}>\n                          Dataset\n                        </Label>\n                      </th>\n                      <th>\n                        <Label muted size={0}>\n                          Document ID\n                        </Label>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {crossDatasetReferences.references\n                      .filter((reference): reference is Required<typeof reference> => {\n                        return 'projectId' in reference\n                      })\n                      .map(({projectId, datasetName, documentId}, index) => (\n                        // eslint-disable-next-line react/no-array-index-key\n                        <tr key={`${documentId}-${index}`}>\n                          <td>\n                            <Text size={1}>{projectId}</Text>\n                          </td>\n                          <td>\n                            <Text size={1}>{datasetName || 'unavailable'}</Text>\n                          </td>\n                          <td>\n                            <DocumentIdFlex align=\"center\" gap={2} justify=\"flex-end\">\n                              <Text textOverflow=\"ellipsis\" size={1}>\n                                {documentId || 'unavailable'}\n                              </Text>\n                              {documentId && (\n                                <CopyToClipboard\n                                  text={documentId}\n                                  // eslint-disable-next-line react/jsx-no-bind\n                                  onCopy={() => {\n                                    // TODO: this isn't visible with the dialog open\n                                    toast.push({\n                                      title: 'Copied document ID to clipboard!',\n                                      status: 'success',\n                                    })\n                                  }}\n                                >\n                                  <Button\n                                    title=\"Copy ID to clipboard\"\n                                    mode=\"bleed\"\n                                    icon={ClipboardIcon}\n                                    fontSize={0}\n                                  />\n                                </CopyToClipboard>\n                              )}\n                            </DocumentIdFlex>\n                          </td>\n                        </tr>\n                      ))}\n                  </tbody>\n                </Table>\n                <Box padding={2}>\n                  <OtherReferenceCount {...crossDatasetReferences} />\n                </Box>\n              </TableContainer>\n            </CrossDatasetReferencesDetails>\n          )}\n        </Flex>\n      </ReferencesCard>\n\n      <Box flex=\"none\">\n        <Text>\n          If you {action} this document, documents that refer to it will no longer be able to access\n          it.\n        </Text>\n      </Box>\n    </>\n  )\n}\n","import React, {useMemo, useId} from 'react'\nimport styled from 'styled-components'\nimport {Box, Dialog, Button, Text, Spinner, Grid, Flex} from '@sanity/ui'\nimport {DocTitle} from '../DocTitle'\nimport {useReferringDocuments} from './useReferringDocuments'\nimport {ConfirmDeleteDialogBody} from './ConfirmDeleteDialogBody'\n\n/** @internal */\nexport const DialogBody = styled(Flex).attrs({\n  padding: 4,\n  direction: 'column',\n  height: 'fill',\n})`\n  box-sizing: border-box;\n`\n\n/** @internal */\nexport const LoadingContainer = styled(Flex).attrs({\n  align: 'center',\n  direction: 'column',\n  justify: 'center',\n})`\n  height: 300px;\n`\n\n/** @internal */\nexport interface ConfirmDeleteDialogProps {\n  /**\n   * Incoming document ID used to find other referencing documents. This\n   * field respects draft IDs (e.g. if you pass in a published ID when one\n   * doesn't exist the document title may not show up).\n   */\n  id: string\n  /**\n   * The schema typename of the incoming document\n   */\n  type: string\n  /**\n   * The name of the action being done. (e.g. the `'unpublish'` action requires\n   * the same document deletion confirmation).\n   */\n  action?: string\n  onCancel: () => void\n  onConfirm: () => void\n}\n\n/**\n * A confirmation dialog used to prevent unwanted document deletes. Loads all\n * the referencing internal and cross-data references prior to showing the\n * delete button.\n *\n * @internal\n */\nexport function ConfirmDeleteDialog({\n  id,\n  type,\n  action = 'delete',\n  onCancel,\n  onConfirm,\n}: ConfirmDeleteDialogProps) {\n  const dialogId = `deletion-confirmation-${useId()}`\n  const {\n    internalReferences,\n    crossDatasetReferences,\n    isLoading,\n    totalCount,\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n  } = useReferringDocuments(id)\n  const capitalizedAction = `${action.substring(0, 1).toUpperCase()}${action.substring(1)}`\n\n  const documentTitle = <DocTitle document={useMemo(() => ({_id: id, _type: type}), [id, type])} />\n  const showConfirmButton = !isLoading\n\n  return (\n    <Dialog\n      width={1}\n      id={dialogId}\n      header={`${capitalizedAction} document?`}\n      footer={\n        <Grid columns={showConfirmButton ? 2 : 1} gap={2} paddingX={4} paddingY={3}>\n          <Button mode=\"ghost\" onClick={onCancel} text=\"Cancel\" />\n\n          {showConfirmButton && (\n            <Button\n              data-testid=\"confirm-delete-button\"\n              text={totalCount > 0 ? `${capitalizedAction} anyway` : `${capitalizedAction} now`}\n              tone=\"critical\"\n              onClick={onConfirm}\n            />\n          )}\n        </Grid>\n      }\n      onClose={onCancel}\n      onClickOutside={onCancel}\n    >\n      <DialogBody>\n        {crossDatasetReferences && internalReferences && !isLoading ? (\n          <ConfirmDeleteDialogBody\n            crossDatasetReferences={crossDatasetReferences}\n            internalReferences={internalReferences}\n            documentTitle={documentTitle}\n            isLoading={isLoading}\n            totalCount={totalCount}\n            action={action}\n            projectIds={projectIds}\n            datasetNames={datasetNames}\n            hasUnknownDatasetNames={hasUnknownDatasetNames}\n            onReferenceLinkClick={onCancel}\n          />\n        ) : (\n          <LoadingContainer data-testid=\"loading-container\">\n            <Spinner muted />\n            <Box marginTop={3}>\n              <Text align=\"center\" muted size={1}>\n                Looking for referring documents…\n              </Text>\n            </Box>\n          </LoadingContainer>\n        )}\n      </DialogBody>\n    </Dialog>\n  )\n}\n","import React, {useCallback, useState, useId} from 'react'\nimport {Box, Flex, Button, Dialog, Text, ErrorBoundary} from '@sanity/ui'\nimport {ConfirmDeleteDialog, ConfirmDeleteDialogProps} from './ConfirmDeleteDialog'\n\nexport type {ConfirmDeleteDialogProps}\n\ntype ArgType<T> = T extends (arg: infer U) => unknown ? U : never\ntype ErrorInfo = ArgType<React.ComponentProps<typeof ErrorBoundary>['onCatch']>\n\n/** @internal */\nfunction ConfirmDeleteDialogContainer(props: ConfirmDeleteDialogProps) {\n  const id = useId()\n  const [error, setError] = useState<ErrorInfo | null>(null)\n  const handleRetry = useCallback(() => setError(null), [])\n\n  return error ? (\n    <Dialog\n      id={`dialog-error-${id}`}\n      data-testid=\"confirm-delete-error-dialog\"\n      header=\"Error\"\n      footer={\n        <Flex paddingX={4} paddingY={3} direction=\"column\">\n          <Button mode=\"ghost\" text=\"Retry\" onClick={handleRetry} />\n        </Flex>\n      }\n      onClose={props.onCancel}\n    >\n      <Box padding={4}>\n        <Text>An error occurred while loading referencing documents.</Text>\n      </Box>\n    </Dialog>\n  ) : (\n    <ErrorBoundary onCatch={setError}>\n      <ConfirmDeleteDialog {...props} />\n    </ErrorBoundary>\n  )\n}\n\nexport {ConfirmDeleteDialogContainer as ConfirmDeleteDialog}\n","import {CheckmarkIcon} from '@sanity/icons'\nimport {Box, Label, MenuDivider, MenuGroup, MenuItem, PopoverProps, Text} from '@sanity/ui'\nimport React, {useCallback, MouseEvent} from 'react'\nimport {Intent} from '../../structureBuilder'\nimport {_PaneMenuItem, _PaneMenuNode} from './types'\nimport {TooltipOfDisabled} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\n\nconst MENU_GROUP_POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'left-start',\n  portal: true,\n}\n\nexport function PaneMenuButtonItem(props: {\n  disabled?: boolean\n  isAfterGroup: boolean\n  node: _PaneMenuNode\n}) {\n  const {disabled, isAfterGroup, node} = props\n\n  if (node.type === 'divider') {\n    return <MenuDivider />\n  }\n\n  if (node.type === 'group') {\n    if (node.children.length === 0) {\n      return null\n    }\n\n    if (node.expanded) {\n      return (\n        <>\n          {isAfterGroup && <MenuDivider />}\n          {node.title && (\n            <Box padding={2} paddingBottom={1}>\n              <Label muted size={0}>\n                {node.title}\n              </Label>\n            </Box>\n          )}\n          {node.children.map((child, childIndex) => (\n            <PaneMenuButtonItem\n              disabled={disabled || Boolean(node.disabled)}\n              isAfterGroup={node.children[childIndex - 1]?.type === 'group'}\n              key={child.key}\n              node={child}\n            />\n          ))}\n        </>\n      )\n    }\n\n    return (\n      <>\n        {isAfterGroup && <MenuDivider />}\n        <MenuGroup\n          disabled={disabled}\n          icon={node.icon}\n          popover={MENU_GROUP_POPOVER_PROPS}\n          text={node.title}\n        >\n          {node.children.map((child, childIndex) => (\n            <PaneMenuButtonItem\n              disabled={disabled || Boolean(node.disabled)}\n              isAfterGroup={node.children[childIndex - 1]?.type === 'group'}\n              key={child.key}\n              node={child}\n            />\n          ))}\n        </MenuGroup>\n      </>\n    )\n  }\n\n  return (\n    <>\n      {isAfterGroup && <MenuDivider />}\n      <PaneContextMenuItemResolver disabled={disabled} node={node} />\n    </>\n  )\n}\n\nfunction PaneContextMenuItemResolver(props: {disabled?: boolean; node: _PaneMenuItem}) {\n  const {node} = props\n\n  if (node.intent) {\n    return <PaneContextIntentMenuItem {...props} intent={node.intent} />\n  }\n\n  return <PaneContextMenuItem {...props} />\n}\n\nfunction PaneContextMenuItem(props: {disabled?: boolean; node: _PaneMenuItem}) {\n  const {disabled, node} = props\n  const tooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n\n  return (\n    <TooltipOfDisabled content={tooltipContent} placement=\"left\">\n      <MenuItem\n        disabled={disabled || Boolean(node.disabled)}\n        hotkeys={node.hotkey?.split('+')}\n        icon={node.icon}\n        iconRight={node.iconRight || (node.selected && CheckmarkIcon)}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClick={node.onAction}\n        pressed={node.selected}\n        text={node.title}\n        tone={node.tone}\n      />\n    </TooltipOfDisabled>\n  )\n}\n\nfunction PaneContextIntentMenuItem(props: {\n  disabled?: boolean\n  intent: Intent\n  node: _PaneMenuItem\n}) {\n  const {disabled, intent, node} = props\n  const tooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n  const intentLink = useIntentLink({intent: intent.type, params: intent.params})\n\n  const handleClick = useCallback(\n    (event: MouseEvent<HTMLDivElement>) => {\n      intentLink.onClick(event)\n      node.onAction()\n    },\n    [intentLink, node]\n  )\n\n  return (\n    <TooltipOfDisabled content={tooltipContent} placement=\"left\">\n      <MenuItem\n        as=\"a\"\n        disabled={disabled || Boolean(node.disabled)}\n        hotkeys={node.hotkey?.split('+')}\n        href={intentLink.href}\n        icon={node.icon}\n        iconRight={node.selected ? CheckmarkIcon : undefined}\n        onClick={handleClick}\n        pressed={node.selected}\n        text={node.title}\n        tone={node.tone}\n      />\n    </TooltipOfDisabled>\n  )\n}\n","import {EllipsisVerticalIcon} from '@sanity/icons'\nimport {Menu, MenuButton, PopoverProps} from '@sanity/ui'\nimport React, {useId} from 'react'\nimport {_PaneMenuItem, _PaneMenuNode} from './types'\nimport {PaneMenuButtonItem} from './PaneMenuButtonItem'\nimport {StatusButton} from 'sanity'\n\ninterface PaneContextMenuButtonProps {\n  nodes: _PaneMenuNode[]\n}\n\nconst CONTEXT_MENU_POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n}\n\nfunction nodesHasTone(nodes: _PaneMenuNode[], tone: NonNullable<_PaneMenuItem['tone']>): boolean {\n  return nodes.some((node) => {\n    return (\n      (node.type === 'item' && node.tone === tone) ||\n      (node.type === 'group' && nodesHasTone(node.children, tone))\n    )\n  })\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneContextMenuButton(props: PaneContextMenuButtonProps) {\n  const {nodes} = props\n  const id = useId()\n\n  const hasCritical = nodesHasTone(nodes, 'critical')\n  const hasCaution = nodesHasTone(nodes, 'caution')\n\n  return (\n    <MenuButton\n      button={\n        <StatusButton\n          icon={EllipsisVerticalIcon}\n          mode=\"bleed\"\n          title=\"Show menu\"\n          // eslint-disable-next-line no-nested-ternary\n          tone={hasCritical ? 'critical' : hasCaution ? 'caution' : undefined}\n        />\n      }\n      id={id}\n      menu={\n        <Menu>\n          {nodes.map((node, nodeIndex) => {\n            const isAfterGroup = nodes[nodeIndex - 1]?.type === 'group'\n\n            return <PaneMenuButtonItem isAfterGroup={isAfterGroup} key={node.key} node={node} />\n          })}\n        </Menu>\n      }\n      popover={CONTEXT_MENU_POPOVER_PROPS}\n    />\n  )\n}\n","/**\n * @internal\n */\nexport const PANE_DEBUG = false\n\n/**\n * @internal\n */\nexport const PANE_COLLAPSED_WIDTH = 51\n\n/**\n * @internal\n */\nexport const PANE_DEFAULT_MIN_WIDTH = PANE_COLLAPSED_WIDTH * 4\n","import {createContext} from 'react'\nimport {PaneContextValue} from './types'\n\n/**\n * @internal\n */\nexport const PaneContext = createContext<PaneContextValue | null>(null)\n","import {createContext} from 'react'\nimport {PaneLayoutContextValue} from './types'\n\n/**\n * @internal\n */\nexport const PaneLayoutContext = createContext<PaneLayoutContextValue | null>(null)\n","import {useContext} from 'react'\nimport {PaneLayoutContext} from './PaneLayoutContext'\nimport {PaneLayoutContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePaneLayout(): PaneLayoutContextValue {\n  const pane = useContext(PaneLayoutContext)\n\n  if (!pane) {\n    throw new Error('PaneLayout: missing context value')\n  }\n\n  return pane\n}\n","import {Layer} from '@sanity/ui'\nimport React, {useCallback, useState} from 'react'\nimport styled from 'styled-components'\nimport {usePaneLayout} from './usePaneLayout'\n\nconst Root = styled(Layer)`\n  position: relative;\n  width: 1px;\n  min-width: 1px;\n\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    width: 1px;\n    background-color: var(--card-border-color);\n  }\n\n  &:not([data-disabled]) {\n    cursor: ew-resize;\n    width: 9px;\n    min-width: 9px;\n    margin: 0 -4px;\n\n    &:before {\n      left: 4px;\n    }\n\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    &[data-dragging]:after,\n    &:hover:after {\n      opacity: 0.2;\n    }\n  }\n`\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneDivider({\n  disabled,\n  element,\n}: {\n  disabled?: boolean\n  element: HTMLElement | null\n}) {\n  const {resize} = usePaneLayout()\n  const [dragging, setDragging] = useState(false)\n\n  const handleMouseDown = useCallback(\n    (event: any) => {\n      if (!element) return\n\n      setDragging(true)\n\n      event.preventDefault()\n\n      const startX = event.pageX\n\n      resize('start', element, 0)\n\n      const handleMouseMove = (e: MouseEvent) => {\n        e.preventDefault()\n\n        const deltaX = e.pageX - startX\n\n        resize('move', element, deltaX)\n      }\n\n      const handleMouseUp = (e: MouseEvent) => {\n        e.preventDefault()\n\n        setDragging(false)\n\n        window.removeEventListener('mousemove', handleMouseMove)\n        window.removeEventListener('mouseup', handleMouseUp)\n\n        resize('end', element, 0)\n      }\n\n      window.addEventListener('mousemove', handleMouseMove)\n      window.addEventListener('mouseup', handleMouseUp)\n    },\n    [element, resize]\n  )\n\n  return (\n    <Root\n      data-disabled={disabled ? '' : undefined}\n      data-dragging={dragging ? '' : undefined}\n      onMouseDown={handleMouseDown}\n    />\n  )\n}\n","import {BoundaryElementProvider, Card, CardProps, Code, Flex, useForwardedRef} from '@sanity/ui'\nimport React, {forwardRef, useMemo, useState, useCallback, useEffect} from 'react'\nimport styled from 'styled-components'\nimport {PANE_COLLAPSED_WIDTH, PANE_DEBUG, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {PaneContext} from './PaneContext'\nimport {PaneDivider} from './PaneDivider'\nimport {usePaneLayout} from './usePaneLayout'\nimport {LegacyLayerProvider} from 'sanity'\n\ninterface PaneProps {\n  children?: React.ReactNode\n  currentMinWidth?: number\n  currentMaxWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  selected?: boolean\n}\n\nconst Root = styled(Card)`\n  outline: none;\n\n  // NOTE: This will render a border to the right side of each pane\n  // without taking up physical space.\n  box-shadow: 1px 0 0 var(--card-border-color);\n`\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\n// eslint-disable-next-line complexity\nexport const Pane = forwardRef(function Pane(\n  props: PaneProps &\n    Omit<CardProps, 'as' | 'overflow'> &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'height' | 'hidden' | 'id' | 'style'>,\n  ref: React.ForwardedRef<HTMLDivElement>\n) {\n  const {\n    children,\n    currentMinWidth: currentMinWidthProp,\n    currentMaxWidth: currentMaxWidthProp,\n    flex: flexProp = 1,\n    id,\n    minWidth: minWidthProp,\n    maxWidth: maxWidthProp,\n    selected = false,\n    ...restProps\n  } = props\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const {\n    collapse,\n    collapsed: layoutCollapsed,\n    expand,\n    expandedElement,\n    mount,\n    panes,\n  } = usePaneLayout()\n  const pane = panes.find((p) => p.element === rootElement)\n  const paneIndex = pane && panes.indexOf(pane)\n  const nextPane = typeof paneIndex === 'number' ? panes[paneIndex + 1] : undefined\n  const isLast = paneIndex === panes.length - 1\n  const expanded = expandedElement === rootElement\n  const collapsed = layoutCollapsed ? false : pane?.collapsed || false\n  const nextCollapsed = nextPane?.collapsed || false\n  const forwardedRef = useForwardedRef(ref)\n  const flex = pane?.flex ?? flexProp\n  const currentMinWidth = pane?.currentMinWidth ?? currentMinWidthProp\n  const currentMaxWidth = pane?.currentMaxWidth ?? currentMaxWidthProp\n\n  const setRef = useCallback(\n    (refValue: HTMLDivElement | null) => {\n      setRootElement(refValue)\n      forwardedRef.current = refValue\n    },\n    [forwardedRef]\n  )\n\n  useEffect(() => {\n    if (!rootElement) return undefined\n    return mount(rootElement, {\n      currentMinWidth: currentMinWidthProp,\n      currentMaxWidth: currentMaxWidthProp,\n      flex: flexProp,\n      id,\n      minWidth: minWidthProp,\n      maxWidth: maxWidthProp,\n    })\n  }, [\n    currentMinWidthProp,\n    currentMaxWidthProp,\n    flexProp,\n    id,\n    minWidthProp,\n    maxWidthProp,\n    mount,\n    rootElement,\n  ])\n\n  const handleCollapse = useCallback(() => {\n    if (!rootElement) return\n    collapse(rootElement)\n  }, [collapse, rootElement])\n\n  const handleExpand = useCallback(() => {\n    if (!rootElement) return\n    expand(rootElement)\n  }, [expand, rootElement])\n\n  const contextValue = useMemo(\n    () => ({\n      collapse: handleCollapse,\n      collapsed: layoutCollapsed ? false : collapsed,\n      expand: handleExpand,\n      index: paneIndex,\n      isLast,\n      rootElement,\n    }),\n    [collapsed, handleCollapse, handleExpand, isLast, layoutCollapsed, paneIndex, rootElement]\n  )\n\n  const minWidth = useMemo(() => {\n    if (layoutCollapsed) {\n      return undefined\n    }\n\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (currentMinWidth === 0) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    if (isLast) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    return currentMinWidth || minWidthProp || PANE_DEFAULT_MIN_WIDTH\n  }, [collapsed, currentMinWidth, isLast, layoutCollapsed, minWidthProp])\n\n  const maxWidth = useMemo(() => {\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (layoutCollapsed && isLast) {\n      return undefined\n    }\n\n    if (isLast) {\n      if (maxWidthProp) {\n        return currentMaxWidth ?? maxWidthProp\n      }\n\n      return undefined\n    }\n\n    return currentMaxWidth ?? maxWidthProp\n  }, [collapsed, currentMaxWidth, isLast, layoutCollapsed, maxWidthProp])\n\n  const hidden = layoutCollapsed && !isLast\n\n  const divider = useMemo(\n    () =>\n      !isLast &&\n      !layoutCollapsed && (\n        <LegacyLayerProvider zOffset=\"paneResizer\">\n          <PaneDivider disabled={collapsed || nextCollapsed} element={rootElement} />\n        </LegacyLayerProvider>\n      ),\n    [collapsed, isLast, layoutCollapsed, nextCollapsed, rootElement]\n  )\n\n  const style = useMemo(\n    () => ({\n      flex,\n      minWidth,\n      maxWidth: maxWidth === Infinity ? undefined : maxWidth,\n    }),\n    [flex, minWidth, maxWidth]\n  )\n\n  return (\n    <>\n      <LegacyLayerProvider zOffset=\"pane\">\n        <PaneContext.Provider value={contextValue}>\n          <Root\n            data-testid=\"pane\"\n            data-ui=\"Pane\"\n            tone=\"inherit\"\n            hidden={hidden}\n            id={id}\n            overflow={layoutCollapsed ? undefined : 'hidden'}\n            {...restProps}\n            data-pane-collapsed={collapsed ? '' : undefined}\n            data-pane-index={paneIndex}\n            data-pane-selected={selected ? '' : undefined}\n            ref={setRef}\n            style={style}\n          >\n            {PANE_DEBUG && (\n              <Card padding={4} tone={expanded ? 'primary' : 'caution'}>\n                <Code size={1}>\n                  {[\n                    `#${paneIndex}`,\n                    `collapsed=${collapsed}`,\n                    `currentMinWidth=${currentMinWidth}`,\n                    `currentMaxWidth=${currentMaxWidth}`,\n                    `flex=${flex}`,\n                    `minWidth=${minWidth}`,\n                    `maxWidth=${maxWidth}`,\n                  ].join('\\n')}\n                </Code>\n              </Card>\n            )}\n\n            <BoundaryElementProvider element={rootElement}>\n              {!hidden && (\n                <Flex direction=\"column\" height=\"fill\">\n                  {children}\n                </Flex>\n              )}\n            </BoundaryElementProvider>\n          </Root>\n        </PaneContext.Provider>\n      </LegacyLayerProvider>\n\n      {divider}\n    </>\n  )\n})\n","import {useContext} from 'react'\nimport {PaneContext} from './PaneContext'\nimport {PaneContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePane(): PaneContextValue {\n  const pane = useContext(PaneContext)\n\n  if (!pane) {\n    throw new Error('Pane: missing context value')\n  }\n\n  return pane\n}\n","import {Card} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const Root = styled(Card)`\n  position: relative;\n  outline: none;\n`\n\nRoot.displayName = 'PaneContent__root'\n","import {BoxOverflow} from '@sanity/ui'\nimport React, {forwardRef} from 'react'\nimport {usePane} from './usePane'\nimport {usePaneLayout} from './usePaneLayout'\nimport {Root} from './PaneContent.styles'\n\ninterface PaneContentProps {\n  as?: React.ElementType | keyof JSX.IntrinsicElements\n  overflow?: BoxOverflow\n  padding?: number | number[]\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneContent = forwardRef(function PaneContent(\n  props: PaneContentProps & Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref'>,\n  ref: React.ForwardedRef<HTMLDivElement>\n) {\n  const {as, children, overflow, padding, ...restProps} = props\n  const {collapsed} = usePane()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n\n  return (\n    <Root\n      data-testid=\"pane-content\"\n      forwardedAs={as}\n      {...restProps}\n      flex={1}\n      hidden={collapsed}\n      overflow={layoutCollapsed ? undefined : overflow}\n      padding={padding}\n      ref={ref}\n      tone=\"inherit\"\n    >\n      {children}\n    </Root>\n  )\n})\n","import {Card, Layer} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const Root = styled(Layer)`\n  position: sticky;\n  bottom: 0;\n\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: -1px;\n    border-bottom: 1px solid var(--card-shadow-outline-color);\n  }\n`\n\nexport const RootCard = styled(Card)`\n  padding-bottom: env(safe-area-inset-bottom);\n`\n","import {Box} from '@sanity/ui'\nimport React, {forwardRef} from 'react'\nimport {usePane} from './usePane'\nimport {Root, RootCard} from './PaneFooter.styles'\nimport {LegacyLayerProvider} from 'sanity'\n\ninterface PaneFooterProps {\n  children?: React.ReactNode\n  padding?: number | number[]\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneFooter = forwardRef(function PaneFooter(\n  props: PaneFooterProps,\n  ref: React.ForwardedRef<HTMLDivElement>\n) {\n  const {children, padding} = props\n  const {collapsed} = usePane()\n\n  return (\n    <LegacyLayerProvider zOffset=\"paneFooter\">\n      <Root data-testid=\"pane-footer\" hidden={collapsed} ref={ref}>\n        <RootCard tone=\"inherit\">\n          <Box padding={padding}>{children}</Box>\n        </RootCard>\n      </Root>\n    </LegacyLayerProvider>\n  )\n})\n","import {Box, Flex, Layer, rgba, TextSkeleton, Text, Theme, Card} from '@sanity/ui'\nimport styled, {css} from 'styled-components'\n\nexport const Root = styled(Layer)`\n  line-height: 0;\n  position: sticky;\n  top: 0;\n\n  &:not([data-collapsed]):after {\n    content: '';\n    display: block;\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: -1px;\n    border-bottom: 1px solid var(--card-shadow-outline-color);\n  }\n`\n\nexport const Layout = styled(Flex)`\n  transform-origin: calc(51px / 2);\n\n  [data-collapsed] > div > & {\n    transform: rotate(90deg);\n  }\n`\n\nexport const TitleCard = styled(Card)(({theme}: {theme: Theme}) => {\n  const {fg, bg} = theme.sanity.color.card.enabled\n\n  // Disable color updates on hover\n  return css`\n    background-color: ${bg};\n\n    [data-ui='Text'] {\n      color: ${fg};\n    }\n  `\n})\n\nexport const TitleTextSkeleton = styled(TextSkeleton)`\n  width: 66%;\n  max-width: 175px;\n`\n\nexport const TitleText = styled(Text)`\n  cursor: default;\n  outline: none;\n`\n\nexport const TabsBox = styled(Box)(({theme}: {theme: Theme}) => {\n  const {color, space} = theme.sanity\n\n  return css`\n    overflow: hidden;\n    overflow: clip;\n    position: relative;\n\n    & > div {\n      white-space: nowrap;\n      overflow: auto;\n      /* Hide scrollbars */\n      scrollbar-width: none;\n      &::-webkit-scrollbar {\n        width: 0;\n        height: 0;\n      }\n    }\n\n    /* right padding */\n    & > div:after {\n      content: '';\n      display: inline-block;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      width: ${space[3]}px;\n      height: 1px;\n    }\n\n    /* Gradient that makes it look like tabs disappear into nothing (looks nicer) */\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      background: linear-gradient(to right, ${rgba(color.base.bg, 0)}, var(--card-bg-color));\n      width: ${space[3]}px;\n      pointer-events: none;\n    }\n  `\n})\n","import {useElementRect, Box, Card, Flex, LayerProvider} from '@sanity/ui'\nimport React, {useMemo, useCallback, forwardRef} from 'react'\nimport {usePane} from './usePane'\nimport {Layout, Root, TabsBox, TitleCard, TitleTextSkeleton, TitleText} from './PaneHeader.styles'\nimport {LegacyLayerProvider} from 'sanity'\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport interface PaneHeaderProps {\n  actions?: React.ReactNode\n  backButton?: React.ReactNode\n  contentAfter?: React.ReactNode\n  loading?: boolean\n  subActions?: React.ReactNode\n  tabIndex?: number\n  tabs?: React.ReactNode\n  title: React.ReactNode\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneHeader = forwardRef(function PaneHeader(\n  props: PaneHeaderProps,\n  ref: React.ForwardedRef<HTMLDivElement>\n) {\n  const {actions, backButton, contentAfter, loading, subActions, tabs, tabIndex, title} = props\n  const {collapse, collapsed, expand, rootElement: paneElement} = usePane()\n  const paneRect = useElementRect(paneElement || null)\n\n  const layoutStyle = useMemo(\n    () => ({\n      width: collapsed ? paneRect?.height || window.innerHeight : undefined,\n    }),\n    [collapsed, paneRect]\n  )\n\n  const handleTitleClick = useCallback(() => {\n    if (collapsed) return\n    collapse()\n  }, [collapse, collapsed])\n\n  const handleLayoutClick = useCallback(() => {\n    if (!collapsed) return\n    expand()\n  }, [collapsed, expand])\n\n  const showTabsOrSubActions = Boolean(!collapsed && (tabs || subActions))\n\n  return (\n    <LayerProvider zOffset={100}>\n      <Root data-collapsed={collapsed ? '' : undefined} data-testid=\"pane-header\" ref={ref}>\n        <LegacyLayerProvider zOffset=\"paneHeader\">\n          <Card data-collapsed={collapsed ? '' : undefined} tone=\"inherit\">\n            <Layout onClick={handleLayoutClick} padding={2} sizing=\"border\" style={layoutStyle}>\n              {backButton && (\n                <Box flex=\"none\" padding={1}>\n                  {backButton}\n                </Box>\n              )}\n\n              <TitleCard\n                __unstable_focusRing\n                flex={1}\n                forwardedAs=\"button\"\n                marginRight={actions ? 1 : 0}\n                onClick={handleTitleClick}\n                paddingLeft={backButton ? 1 : 3}\n                paddingY={3}\n                tabIndex={tabIndex}\n              >\n                {loading && <TitleTextSkeleton animated radius={1} />}\n                {!loading && (\n                  <TitleText textOverflow=\"ellipsis\" weight=\"semibold\">\n                    {title}\n                  </TitleText>\n                )}\n              </TitleCard>\n\n              {actions && (\n                <Box flex=\"none\" hidden={collapsed}>\n                  <LegacyLayerProvider zOffset=\"paneHeader\">{actions}</LegacyLayerProvider>\n                </Box>\n              )}\n            </Layout>\n\n            {showTabsOrSubActions && (\n              <Flex\n                align=\"center\"\n                hidden={collapsed}\n                overflow=\"auto\"\n                paddingBottom={3}\n                paddingX={3}\n                paddingTop={1}\n              >\n                <TabsBox flex={1} marginRight={subActions ? 3 : 0}>\n                  {tabs}\n                </TabsBox>\n\n                {subActions && subActions}\n              </Flex>\n            )}\n\n            {!collapsed && contentAfter && contentAfter}\n          </Card>\n        </LegacyLayerProvider>\n      </Root>\n    </LayerProvider>\n  )\n})\n","import React, {MouseEvent, useCallback, useId} from 'react'\nimport {ButtonProps, Menu, MenuButton, Text} from '@sanity/ui'\nimport {UnknownIcon} from '@sanity/icons'\nimport {Intent} from '../../structureBuilder'\nimport {_PaneMenuGroup, _PaneMenuItem} from './types'\nimport {PaneMenuButtonItem} from './PaneMenuButtonItem'\nimport {TooltipOfDisabled, StatusButton} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\n\nexport interface PaneHeaderActionButtonProps {\n  node: _PaneMenuItem | _PaneMenuGroup\n  padding?: ButtonProps['padding']\n}\n\nexport function PaneHeaderActionButton(props: PaneHeaderActionButtonProps) {\n  const {node, padding} = props\n\n  if (node.type === 'item') {\n    return <PaneHeaderMenuItemActionButton node={node} padding={padding} />\n  }\n\n  if (node.type === 'group') {\n    return <PaneHeaderMenuGroupActionButton node={node} padding={padding} />\n  }\n\n  console.warn('unknown menu node (expected `type: \"item\" | \"group\"`):', node)\n\n  return null\n}\n\nexport interface PaneHeaderMenuItemActionButtonProps {\n  node: _PaneMenuItem\n  padding?: ButtonProps['padding']\n}\n\nexport function PaneHeaderMenuItemActionButton(props: PaneHeaderMenuItemActionButtonProps) {\n  const {node, padding} = props\n\n  if (node.intent) {\n    return <PaneHeaderActionIntentButton {...props} intent={node.intent} />\n  }\n\n  const disabledTooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n\n  return (\n    <TooltipOfDisabled content={disabledTooltipContent} placement=\"bottom\">\n      <StatusButton\n        disabled={Boolean(node.disabled)}\n        hotkey={node.hotkey?.split('+')}\n        icon={node.icon}\n        label={disabledTooltipContent ? undefined : node.title}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClick={node.onAction}\n        padding={padding}\n        selected={node.selected}\n        tone={node.tone}\n      />\n    </TooltipOfDisabled>\n  )\n}\n\nfunction PaneHeaderActionIntentButton(props: {\n  intent: Intent\n  node: _PaneMenuItem\n  padding?: ButtonProps['padding']\n}) {\n  const {intent, node, padding} = props\n  const disabledTooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n  const intentLink = useIntentLink({intent: intent.type, params: intent.params})\n\n  const handleClick = useCallback(\n    (event: MouseEvent<HTMLButtonElement>) => {\n      intentLink.onClick(event)\n      node.onAction()\n    },\n    [intentLink, node]\n  )\n\n  return (\n    <TooltipOfDisabled content={disabledTooltipContent} placement=\"bottom\">\n      <StatusButton\n        as=\"a\"\n        disabled={Boolean(node.disabled)}\n        hotkey={node.hotkey?.split('+')}\n        href={intentLink.href}\n        icon={node.icon}\n        label={disabledTooltipContent ? undefined : node.title}\n        onClick={handleClick}\n        padding={padding}\n        selected={node.selected}\n        tone={node.tone}\n      />\n    </TooltipOfDisabled>\n  )\n}\n\nexport interface PaneHeaderMenuGroupActionButtonProps {\n  node: _PaneMenuGroup\n  padding?: ButtonProps['padding']\n}\n\nfunction PaneHeaderMenuGroupActionButton(props: PaneHeaderMenuGroupActionButtonProps) {\n  const {node, padding} = props\n\n  return (\n    <MenuButton\n      button={\n        <StatusButton\n          disabled={node.disabled}\n          icon={node.icon ?? UnknownIcon}\n          label={node.title}\n          padding={padding}\n        />\n      }\n      id={useId()}\n      menu={\n        <Menu>\n          {node.children.map((child, idx) => {\n            return (\n              <PaneMenuButtonItem\n                disabled={Boolean(node.disabled)}\n                isAfterGroup={node.children[idx - 1]?.type === 'group'}\n                key={child.key}\n                node={child}\n              />\n            )\n          })}\n        </Menu>\n      }\n    />\n  )\n}\n","import {Card} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const Root = styled(Card)`\n  transition: opacity 200ms;\n  position: relative;\n  z-index: 1;\n  padding-left: env(safe-area-inset-left);\n  padding-right: env(safe-area-inset-right);\n  opacity: 0;\n\n  &:not([hidden]) {\n    display: flex;\n  }\n\n  &:not([data-collapsed]) {\n    overflow: auto;\n  }\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n\n  &[data-resizing] {\n    pointer-events: none;\n  }\n`\n","/* eslint-disable camelcase */\n\nimport {negate} from 'lodash'\nimport {_PaneMenuGroup, _PaneMenuItem, _PaneMenuNode} from './components/pane/types'\nimport {PaneMenuItem, PaneMenuItemGroup} from './types'\nimport {DocumentFieldActionNode} from 'sanity'\n\nexport function isMenuNodeButton(node: _PaneMenuNode): node is _PaneMenuItem | _PaneMenuGroup {\n  return (node.type === 'item' || node.type === 'group') && node.renderAsButton\n}\n\nexport const isNotMenuNodeButton = negate(isMenuNodeButton)\n\nexport function resolveMenuNodes(params: {\n  actionHandler: (item: PaneMenuItem) => void\n  fieldActions?: DocumentFieldActionNode[]\n  menuItems: PaneMenuItem[]\n  menuItemGroups: PaneMenuItemGroup[]\n}): _PaneMenuNode[] {\n  const {fieldActions = [], menuItems, menuItemGroups} = params\n\n  const nodes: _PaneMenuNode[] = []\n\n  let keyOffset = 0\n\n  for (let i = 0; i < fieldActions.length; i += 1) {\n    const a = fieldActions[i]\n\n    nodes.push(mapFieldActionToPaneMenuNode(a, `${i}-${a.type}`))\n  }\n\n  keyOffset += nodes.length\n\n  const groups: _PaneMenuGroup[] = []\n\n  for (const itemGroup of menuItemGroups) {\n    const group = groups.find((g) => g.key === itemGroup.id)\n\n    if (!group) {\n      groups.push({\n        type: 'group',\n        key: itemGroup.id,\n\n        children: [],\n        expanded: true,\n        renderAsButton: false,\n        title: itemGroup.title,\n      })\n    }\n  }\n\n  const ungroupedItems: _PaneMenuItem[] = []\n\n  for (let i = 0; i < menuItems.length; i += 1) {\n    const item = menuItems[i]\n\n    let group = item.group && groups.find((g) => g.key === item.group)\n\n    if (item.group && !group) {\n      group = {\n        type: 'group',\n        key: item.group,\n\n        expanded: true,\n        icon: item.icon,\n        title: item.group,\n        children: [],\n        renderAsButton: false,\n      }\n      groups.push(group)\n    }\n\n    if (group) {\n      group.children.push({\n        type: 'item',\n        key: `${keyOffset + i}-item`,\n\n        hotkey: item.shortcut,\n        icon: item.icon,\n        onAction: () => params.actionHandler(item),\n        renderAsButton: item.showAsAction ?? false,\n        selected: item.selected,\n        title: item.title,\n        tone: item.tone,\n      })\n    } else {\n      ungroupedItems.push({\n        type: 'item',\n        key: `${keyOffset + i}-item`,\n\n        hotkey: item.shortcut,\n        icon: item.icon,\n        onAction: () => params.actionHandler(item),\n        renderAsButton: item.showAsAction ?? false,\n        selected: item.selected,\n        title: item.title,\n        tone: item.tone,\n      })\n    }\n  }\n\n  return [...ungroupedItems, ...groups, ...nodes]\n}\n\nfunction mapFieldActionToPaneMenuNode(a: DocumentFieldActionNode, key: string): _PaneMenuNode {\n  if (a.type === 'divider') {\n    return {\n      type: 'divider',\n      key,\n    }\n  }\n\n  if (a.type === 'group') {\n    return {\n      type: 'group',\n      key,\n\n      children: a.children.map((child, childIdx) =>\n        mapFieldActionToPaneMenuNode(child, `${key}-${childIdx}-${child.type}`)\n      ),\n      disabled: a.disabled,\n      expanded: a.expanded ?? true,\n      icon: a.icon,\n      title: a.title,\n      renderAsButton: a.renderAsButton ?? false,\n    }\n  }\n\n  return {\n    type: 'item',\n    key,\n\n    disabled: a.disabled,\n    icon: a.icon,\n    iconRight: a.iconRight,\n    onAction: a.onAction,\n    renderAsButton: a.renderAsButton ?? false,\n    selected: a.selected,\n    title: a.title,\n    tone: a.tone,\n  }\n}\n","import {Button} from '@sanity/ui'\nimport React, {forwardRef, useMemo} from 'react'\nimport {PaneMenuItem} from '../types'\nimport {IntentLink} from 'sanity/router'\n\ntype RouterIntent = NonNullable<PaneMenuItem['intent']>\n\nexport const IntentButton = forwardRef(function IntentButton(\n  props: {intent: RouterIntent} & Omit<React.ComponentProps<typeof Button>, 'as' | 'href' | 'type'>,\n  ref: React.ForwardedRef<HTMLAnchorElement>\n) {\n  const {intent, ...restProps} = props\n\n  const Link = useMemo(\n    () =>\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      forwardRef(function Link(\n        linkProps: {children: React.ReactNode},\n        linkRef: React.ForwardedRef<HTMLAnchorElement>\n      ) {\n        return (\n          <IntentLink {...linkProps} intent={intent.type} params={intent.params} ref={linkRef} />\n        )\n      }),\n    [intent]\n  )\n\n  return props.disabled ? (\n    <Button {...props} as=\"a\" role=\"link\" aria-disabled=\"true\" />\n  ) : (\n    <Button\n      {...restProps}\n      as={Link}\n      data-as=\"a\"\n      ref={ref as React.ForwardedRef<HTMLButtonElement>}\n    />\n  )\n})\n","import {Tooltip, Text, Box} from '@sanity/ui'\nimport React from 'react'\nimport {useCurrentUser, InsufficientPermissionsMessage} from 'sanity'\n\ninterface InsufficientPermissionsMessageTooltipProps {\n  reveal: boolean\n  loading: boolean\n  children: React.ReactNode\n}\n\nexport function InsufficientPermissionsMessageTooltip({\n  reveal,\n  loading,\n  children,\n}: InsufficientPermissionsMessageTooltipProps) {\n  const currentUser = useCurrentUser()\n\n  if (!reveal) {\n    return <>{children}</>\n  }\n\n  return (\n    <Tooltip\n      content={\n        loading ? (\n          <Box padding={2}>\n            <Text>Loading…</Text>\n          </Box>\n        ) : (\n          <InsufficientPermissionsMessage currentUser={currentUser} />\n        )\n      }\n      portal\n    >\n      {/* this wrapping div is to allow mouse events */}\n      {/* while the child element is disabled */}\n      <div>{children}</div>\n    </Tooltip>\n  )\n}\n","import {ComposeIcon} from '@sanity/icons'\nimport React, {useMemo, forwardRef} from 'react'\nimport {Box, Button, Label, Menu, MenuButton, MenuItem, PopoverProps} from '@sanity/ui'\nimport {Schema} from '@sanity/types'\nimport {IntentButton} from '../IntentButton'\nimport {InsufficientPermissionsMessageTooltip} from './InsufficientPermissionsMessageTooltip'\nimport {IntentLink} from 'sanity/router'\nimport {\n  useTemplatePermissions,\n  TemplatePermissionsResult,\n  Template,\n  InitialValueTemplateItem,\n  useSchema,\n  useTemplates,\n} from 'sanity'\n\nexport type PaneHeaderIntentProps = React.ComponentProps<typeof IntentButton>['intent']\n\nconst POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n}\n\nconst getIntent = (\n  schema: Schema,\n  templates: Template[],\n  item: InitialValueTemplateItem\n): PaneHeaderIntentProps | null => {\n  const typeName = templates.find((t) => t.id === item.templateId)?.schemaType\n  if (!typeName) return null\n\n  const baseParams = {\n    template: item.templateId,\n    type: typeName,\n    id: item.initialDocumentId,\n  }\n\n  return {\n    type: 'create',\n    params: item.parameters ? [baseParams, item.parameters] : baseParams,\n  }\n}\n\ninterface PaneHeaderCreateButtonProps {\n  templateItems: InitialValueTemplateItem[]\n}\n\nexport function PaneHeaderCreateButton({templateItems}: PaneHeaderCreateButtonProps) {\n  const schema = useSchema()\n  const templates = useTemplates()\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n\n  const nothingGranted = useMemo(() => {\n    return (\n      !isTemplatePermissionsLoading &&\n      templatePermissions?.every((permission) => !permission.granted)\n    )\n  }, [isTemplatePermissionsLoading, templatePermissions])\n\n  const permissionsById = useMemo(() => {\n    if (!templatePermissions) return {}\n    return templatePermissions.reduce<Record<string, TemplatePermissionsResult | undefined>>(\n      (acc, permission) => {\n        acc[permission.id] = permission\n        return acc\n      },\n      {}\n    )\n  }, [templatePermissions])\n\n  if (nothingGranted) {\n    return (\n      <InsufficientPermissionsMessageTooltip reveal loading={isTemplatePermissionsLoading}>\n        <Button\n          aria-label=\"Insufficient permissions\"\n          icon={ComposeIcon}\n          mode=\"bleed\"\n          disabled\n          data-testid=\"action-intent-button\"\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  if (templateItems.length === 1) {\n    const firstItem = templateItems[0]\n    const permissions = permissionsById[firstItem.id]\n    const disabled = !permissions?.granted\n    const intent = getIntent(schema, templates, firstItem)\n    if (!intent) return null\n\n    return (\n      <InsufficientPermissionsMessageTooltip\n        reveal={disabled}\n        loading={isTemplatePermissionsLoading}\n      >\n        <IntentButton\n          aria-label={firstItem.title}\n          icon={firstItem.icon || ComposeIcon}\n          intent={intent}\n          mode=\"bleed\"\n          disabled={disabled}\n          data-testid=\"action-intent-button\"\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  return (\n    <MenuButton\n      button={<Button icon={ComposeIcon} mode=\"bleed\" data-testid=\"multi-action-intent-button\" />}\n      id=\"create-menu\"\n      menu={\n        <Menu>\n          <Box paddingX={3} paddingTop={3} paddingBottom={2}>\n            <Label muted>Create</Label>\n          </Box>\n\n          {templateItems.map((item, itemIndex) => {\n            const permissions = permissionsById[item.id]\n            const disabled = !permissions?.granted\n            const intent = getIntent(schema, templates, item)\n            const template = templates.find((t) => t.id === item.templateId)\n            if (!template || !intent) return null\n\n            const Link = forwardRef((linkProps, linkRef: React.ForwardedRef<never>) =>\n              disabled ? (\n                <button type=\"button\" disabled {...linkProps} ref={linkRef} />\n              ) : (\n                <IntentLink\n                  {...linkProps}\n                  intent={intent.type}\n                  params={intent.params}\n                  ref={linkRef}\n                />\n              )\n            )\n\n            Link.displayName = 'Link'\n\n            return (\n              <InsufficientPermissionsMessageTooltip\n                key={item.id}\n                reveal={disabled}\n                loading={isTemplatePermissionsLoading}\n              >\n                <MenuItem\n                  as={Link}\n                  data-as={disabled ? 'button' : 'a'}\n                  text={item.title || template.title}\n                  aria-label={disabled ? 'Insufficient permissions' : item.title || template.title}\n                  disabled={disabled}\n                  data-testid={`action-intent-button-${itemIndex}`}\n                />\n              </InsufficientPermissionsMessageTooltip>\n            )\n          })}\n        </Menu>\n      }\n      popover={POPOVER_PROPS}\n    />\n  )\n}\n","import {Flex} from '@sanity/ui'\nimport {uniqBy} from 'lodash'\nimport React, {memo, useCallback, useMemo} from 'react'\nimport {isMenuNodeButton, isNotMenuNodeButton, resolveMenuNodes} from '../../menuNodes'\nimport {DeskToolPaneActionHandler, PaneMenuItem, PaneMenuItemGroup} from '../../types'\nimport {PaneContextMenuButton} from '../pane/PaneContextMenuButton'\nimport {PaneHeaderActionButton} from '../pane/PaneHeaderActionButton'\nimport {PaneHeaderCreateButton} from './PaneHeaderCreateButton'\nimport {useTemplates, InitialValueTemplateItem, EMPTY_ARRAY, EMPTY_OBJECT} from 'sanity'\n\nfunction isNonNullable<T>(value: T): value is NonNullable<T> {\n  return value !== null && value !== undefined\n}\n\n/**\n * hashes an object to a string where the order of the keys don't matter\n */\nconst hashObject = (value: unknown) => {\n  const sortObject = (v: unknown): unknown => {\n    if (typeof v !== 'object' || !v) return v\n    if (Array.isArray(v)) return v.map(sortObject)\n    return Object.entries(v).sort(([keyA], [keyB]) => keyA.localeCompare(keyB, 'en'))\n  }\n\n  const normalize = (v: unknown) => JSON.parse(JSON.stringify(v))\n\n  return JSON.stringify(sortObject(normalize(value)))\n}\n\ninterface PaneHeaderActionsProps {\n  initialValueTemplateItems?: InitialValueTemplateItem[]\n  menuItems?: PaneMenuItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  actionHandlers?: Record<string, DeskToolPaneActionHandler>\n}\n\nexport const PaneHeaderActions = memo(function PaneHeaderActions(props: PaneHeaderActionsProps) {\n  const {\n    initialValueTemplateItems: initialValueTemplateItemsFromStructure = EMPTY_ARRAY,\n    menuItems = EMPTY_ARRAY,\n    menuItemGroups = EMPTY_ARRAY,\n    actionHandlers = EMPTY_OBJECT as Record<string, DeskToolPaneActionHandler>,\n  } = props\n\n  const templates = useTemplates()\n\n  const handleAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (typeof item.action === 'string' && !(item.action in actionHandlers)) {\n        console.warn('No handler for action:', item.action)\n        return false\n      }\n\n      const handler =\n        // eslint-disable-next-line no-nested-ternary\n        typeof item.action === 'function'\n          ? item.action\n          : typeof item.action === 'string'\n          ? actionHandlers[item.action]\n          : null\n\n      if (handler) {\n        handler(item.params as Record<string, string>)\n        return true\n      }\n\n      return false\n    },\n    [actionHandlers]\n  )\n\n  const menuNodes = useMemo(\n    () =>\n      resolveMenuNodes({\n        actionHandler: handleAction,\n        menuItemGroups,\n        menuItems: menuItems\n          // remove items with `create` intents because those will get combined\n          // into one action button (see `initialValueTemplateItemFromMenuItems`)\n          .filter((item) => item.intent?.type !== 'create'),\n      }),\n    [handleAction, menuItemGroups, menuItems]\n  )\n\n  const actionNodes = useMemo(() => menuNodes.filter(isMenuNodeButton), [menuNodes])\n  const contextMenuNodes = useMemo(() => menuNodes.filter(isNotMenuNodeButton), [menuNodes])\n\n  const initialValueTemplateItemFromMenuItems = useMemo(() => {\n    return menuItems\n      .map((item, menuItemIndex) => {\n        if (item.intent?.type !== 'create') return null\n\n        const {params} = item.intent\n        if (!params) return null\n\n        const intentParams = Array.isArray(params) ? params[0] : params\n        const templateParams = Array.isArray(params) ? params[1] : undefined\n\n        // fallback to the schema type name as the template ID.\n        // by default, the initial template values are populated from every\n        // document type in the schema\n        const templateId = intentParams.template || intentParams.type\n        if (!templateId) return null\n\n        // eslint-disable-next-line max-nested-callbacks\n        const template = templates.find((t) => t.id === templateId)\n        // the template doesn't exist then the action might be disabled\n        if (!template) return null\n\n        const initialDocumentId = intentParams.id\n\n        return {\n          item,\n          template,\n          templateParams,\n          menuItemIndex,\n          initialDocumentId,\n        }\n      })\n      .filter(isNonNullable)\n      .map(({initialDocumentId, item, template, menuItemIndex, templateParams}) => {\n        const initialValueTemplateItem: InitialValueTemplateItem = {\n          id: `menuItem${menuItemIndex}`,\n          initialDocumentId,\n          templateId: template.id,\n          type: 'initialValueTemplateItem',\n          title: item.title || template.title,\n          icon: item.icon as InitialValueTemplateItem['icon'],\n          description: template.description,\n          parameters: templateParams,\n          schemaType: template.schemaType,\n        }\n\n        return initialValueTemplateItem\n      })\n  }, [menuItems, templates])\n\n  const combinedInitialValueTemplates = useMemo(() => {\n    // this de-dupes create actions\n    return uniqBy(\n      [...initialValueTemplateItemFromMenuItems, ...initialValueTemplateItemsFromStructure],\n      (item) => hashObject([item.initialDocumentId, item.templateId, item.parameters])\n    )\n  }, [initialValueTemplateItemFromMenuItems, initialValueTemplateItemsFromStructure])\n\n  return (\n    <Flex gap={1}>\n      {combinedInitialValueTemplates.length > 0 && (\n        <PaneHeaderCreateButton templateItems={combinedInitialValueTemplates} />\n      )}\n\n      {actionNodes.map((node) => (\n        <PaneHeaderActionButton key={node.key} node={node} />\n      ))}\n\n      {contextMenuNodes.length > 0 && <PaneContextMenuButton nodes={contextMenuNodes} />}\n    </Flex>\n  )\n})\n","/* eslint-disable import/no-extraneous-dependencies */\n\nimport {TrashIcon} from '@sanity/icons'\nimport React, {useCallback, useState} from 'react'\nimport {ConfirmDeleteDialog} from '../components'\nimport {\n  DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n} from 'sanity'\n\nconst DISABLED_REASON_TITLE = {\n  NOTHING_TO_DELETE: 'This document doesn’t yet exist or is already deleted',\n}\n\n/** @internal */\nexport const DeleteAction: DocumentActionComponent = ({id, type, draft, onComplete}) => {\n  const {delete: deleteOp} = useDocumentOperation(id, type)\n  const [isDeleting, setIsDeleting] = useState(false)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setIsDeleting(true)\n    setConfirmDialogOpen(false)\n    deleteOp.execute()\n    onComplete()\n  }, [deleteOp, onComplete])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'delete',\n  })\n\n  const currentUser = useCurrentUser()\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'critical',\n      icon: TrashIcon,\n      disabled: true,\n      label: 'Delete',\n      title: (\n        <InsufficientPermissionsMessage\n          operationLabel=\"delete this document\"\n          currentUser={currentUser}\n        />\n      ),\n    }\n  }\n\n  return {\n    tone: 'critical',\n    icon: TrashIcon,\n    disabled: isDeleting || Boolean(deleteOp.disabled) || isPermissionsLoading,\n    title:\n      (deleteOp.disabled &&\n        DISABLED_REASON_TITLE[deleteOp.disabled as keyof typeof DISABLED_REASON_TITLE]) ||\n      '',\n    label: isDeleting ? 'Deleting…' : 'Delete',\n    shortcut: 'Ctrl+Alt+D',\n    onHandle: handle,\n    dialog: isConfirmDialogOpen && {\n      type: 'custom',\n      component: (\n        <ConfirmDeleteDialog\n          action=\"delete\"\n          id={draft?._id || id}\n          type={type}\n          onCancel={handleCancel}\n          onConfirm={handleConfirm}\n        />\n      ),\n    },\n  }\n}\n\nDeleteAction.action = 'delete'\n","/* eslint-disable import/no-extraneous-dependencies */\n\nimport {ResetIcon} from '@sanity/icons'\nimport React, {useCallback, useMemo, useState} from 'react'\nimport {\n  DocumentActionComponent,\n  DocumentActionDialogProps,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n} from 'sanity'\n\nconst DISABLED_REASON_TITLE = {\n  NO_CHANGES: 'This document has no unpublished changes',\n  NOT_PUBLISHED: 'This document is not published',\n}\n\n/** @internal */\nexport const DiscardChangesAction: DocumentActionComponent = ({\n  id,\n  type,\n  published,\n  liveEdit,\n  onComplete,\n}) => {\n  const {discardChanges} = useDocumentOperation(id, type)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'discardDraft',\n  })\n  const currentUser = useCurrentUser()\n\n  const handleConfirm = useCallback(() => {\n    discardChanges.execute()\n    onComplete()\n  }, [discardChanges, onComplete])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | false = useMemo(\n    () =>\n      isConfirmDialogOpen && {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: <>Are you sure you want to discard all changes since last published?</>,\n      },\n    [handleConfirm, isConfirmDialogOpen, onComplete]\n  )\n\n  if (!published || liveEdit) {\n    return null\n  }\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'critical',\n      icon: ResetIcon,\n      disabled: true,\n      label: 'Discard changes',\n      title: (\n        <InsufficientPermissionsMessage\n          operationLabel=\"discard changes in this document\"\n          currentUser={currentUser}\n        />\n      ),\n    }\n  }\n\n  return {\n    tone: 'critical',\n    icon: ResetIcon,\n    disabled: Boolean(discardChanges.disabled) || isPermissionsLoading,\n    title:\n      (discardChanges.disabled &&\n        DISABLED_REASON_TITLE[discardChanges.disabled as keyof typeof DISABLED_REASON_TITLE]) ||\n      '',\n    label: 'Discard changes',\n    onHandle: handle,\n    dialog,\n  }\n}\n\nDiscardChangesAction.action = 'discardChanges'\n","import {CopyIcon} from '@sanity/icons'\nimport {uuid} from '@sanity/uuid'\nimport React, {useCallback, useState} from 'react'\nimport {useRouter} from 'sanity/router'\nimport {\n  DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useDocumentPairPermissions,\n  useDocumentOperation,\n  useCurrentUser,\n} from 'sanity'\n\nconst DISABLED_REASON_TITLE = {\n  NOTHING_TO_DUPLICATE: 'This document doesn’t yet exist so there‘s nothing to duplicate',\n}\n\n/** @internal */\nexport const DuplicateAction: DocumentActionComponent = ({id, type, onComplete}) => {\n  const {duplicate} = useDocumentOperation(id, type)\n  const {navigateIntent} = useRouter()\n  const [isDuplicating, setDuplicating] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'duplicate',\n  })\n\n  const currentUser = useCurrentUser()\n\n  const handle = useCallback(() => {\n    const dupeId = uuid()\n\n    setDuplicating(true)\n    duplicate.execute(dupeId)\n    navigateIntent('edit', {id: dupeId, type})\n    onComplete()\n  }, [duplicate, navigateIntent, onComplete, type])\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      icon: CopyIcon,\n      disabled: true,\n      label: 'Duplicate',\n      title: (\n        <InsufficientPermissionsMessage\n          operationLabel=\"duplicate this document\"\n          currentUser={currentUser}\n        />\n      ),\n    }\n  }\n\n  return {\n    icon: CopyIcon,\n    disabled: isDuplicating || Boolean(duplicate.disabled) || isPermissionsLoading,\n    label: isDuplicating ? 'Duplicating…' : 'Duplicate',\n    title:\n      (duplicate.disabled &&\n        DISABLED_REASON_TITLE[duplicate.disabled as keyof typeof DISABLED_REASON_TITLE]) ||\n      '',\n    onHandle: handle,\n  }\n}\n\nDuplicateAction.action = 'duplicate'\n","import {RestoreIcon} from '@sanity/icons'\nimport React, {useCallback, useMemo, useState} from 'react'\nimport {DocumentActionComponent, DocumentActionDialogProps, useDocumentOperation} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\n/** @internal */\nexport const HistoryRestoreAction: DocumentActionComponent = ({id, type, revision, onComplete}) => {\n  const {restore} = useDocumentOperation(id, type)\n  const {navigateIntent} = useRouter()\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n\n  const handleConfirm = useCallback(() => {\n    restore.execute(revision!)\n    navigateIntent('edit', {id, type})\n    onComplete()\n  }, [restore, revision, navigateIntent, id, type, onComplete])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: <>Are you sure you want to restore this document?</>,\n      }\n    }\n\n    return null\n  }, [handleConfirm, isConfirmDialogOpen, onComplete])\n\n  const isRevisionInitialVersion = revision === '@initial'\n  const isRevisionLatestVersion = revision === undefined // undefined means latest version\n\n  if (isRevisionLatestVersion) {\n    return null\n  }\n\n  return {\n    label: 'Restore',\n    color: 'primary',\n    onHandle: handle,\n    title: isRevisionInitialVersion\n      ? \"You can't restore to the initial version\"\n      : 'Restore to this version',\n    icon: RestoreIcon,\n    dialog,\n    disabled: isRevisionInitialVersion,\n  }\n}\n\nHistoryRestoreAction.action = 'restore'\n","import {\n  ValidationMarker,\n  Path,\n  SanityDocument,\n  ObjectSchemaType,\n  SanityDocumentLike,\n} from '@sanity/types'\nimport {createContext} from 'react'\nimport {View} from '../../structureBuilder'\nimport {PaneMenuItem, PaneMenuItemGroup} from '../../types'\nimport {TimelineMode} from './types'\nimport {\n  DocumentActionComponent,\n  DocumentBadgeComponent,\n  DocumentFieldAction,\n  DocumentFormNode,\n  DocumentInspector,\n  DocumentLanguageFilterComponent,\n  DocumentPermission,\n  EditStateFor,\n  PatchEvent,\n  PermissionCheckResult,\n  StateTree,\n  TimelineStore,\n} from 'sanity'\n\n/** @internal */\nexport interface DocumentPaneContextValue {\n  actions: DocumentActionComponent[] | null\n  activeViewId: string | null\n  badges: DocumentBadgeComponent[] | null\n  changesOpen: boolean\n  closeInspector: (inspectorName?: string) => void\n  collapsedFieldSets: StateTree<boolean> | undefined\n  collapsedPaths: StateTree<boolean> | undefined\n  compareValue: Partial<SanityDocument> | null\n  connectionState: 'connecting' | 'reconnecting' | 'connected'\n  displayed: Partial<SanityDocument> | null\n  documentId: string\n  documentIdRaw: string\n  documentType: string\n  editState: EditStateFor | null\n  fieldActions: DocumentFieldAction[]\n  focusPath: Path\n  index: number\n  inspectOpen: boolean\n  inspector: DocumentInspector | null\n  inspectors: DocumentInspector[]\n  menuItemGroups: PaneMenuItemGroup[]\n  menuItems: PaneMenuItem[]\n  onBlur: (blurredPath: Path) => void\n  onChange: (event: PatchEvent) => void\n  onFocus: (pathOrEvent: Path) => void\n  onHistoryClose: () => void\n  onHistoryOpen: () => void\n  onInspectClose: () => void\n  onKeyUp: (event: React.KeyboardEvent<HTMLDivElement>) => void\n  onMenuAction: (item: PaneMenuItem) => void\n  onPaneClose: () => void\n  onPaneSplit?: () => void\n  onPathOpen: (path: Path) => void\n  onSetActiveFieldGroup: (path: Path, groupName: string) => void\n  onSetCollapsedPath: (path: Path, expanded: boolean) => void\n  onSetCollapsedFieldSet: (path: Path, expanded: boolean) => void\n  openInspector: (inspectorName: string, paneParams?: Record<string, string>) => void\n  paneKey: string\n  previewUrl?: string | null\n  ready: boolean\n  schemaType: ObjectSchemaType\n  setTimelineMode: (mode: TimelineMode) => void\n  setTimelineRange(since: string | null, rev: string | null): void\n  source?: string\n  timelineError: Error | null\n  timelineMode: TimelineMode\n  timelineStore: TimelineStore\n  title: string | null\n  validation: ValidationMarker[]\n  value: SanityDocumentLike\n  views: View[]\n  formState: DocumentFormNode | null\n  permissions?: PermissionCheckResult | null\n  isPermissionsLoading: boolean\n  unstable_languageFilter: DocumentLanguageFilterComponent[]\n}\n\n/** @internal */\nexport const DocumentPaneContext = createContext<DocumentPaneContextValue | null>(null)\n","import {useContext} from 'react'\nimport {DocumentPaneContext, DocumentPaneContextValue} from './DocumentPaneContext'\n\n/** @internal */\nexport function useDocumentPane(): DocumentPaneContextValue {\n  const documentPane = useContext(DocumentPaneContext)\n\n  if (!documentPane) {\n    throw new Error('DocumentPane: missing context value')\n  }\n\n  return documentPane\n}\n","import {CheckmarkIcon, PublishIcon} from '@sanity/icons'\nimport {isValidationErrorMarker} from '@sanity/types'\nimport React, {useCallback, useEffect, useState} from 'react'\nimport {TimeAgo} from '../components'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\nimport {\n  DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useEditState,\n  useSyncState,\n  useValidationStatus,\n} from 'sanity'\n\nconst DISABLED_REASON_TITLE = {\n  LIVE_EDIT_ENABLED: 'Cannot publish since liveEdit is enabled for this document type',\n  ALREADY_PUBLISHED: 'Already published',\n  NO_CHANGES: 'No unpublished changes',\n  NOT_READY: 'Operation not ready',\n}\n\nfunction getDisabledReason(\n  reason: keyof typeof DISABLED_REASON_TITLE,\n  publishedAt: string | undefined\n) {\n  if (reason === 'ALREADY_PUBLISHED' && publishedAt) {\n    return (\n      <>\n        <span>\n          Published <TimeAgo time={publishedAt} />\n        </span>\n      </>\n    )\n  }\n  return DISABLED_REASON_TITLE[reason]\n}\n\n/** @internal */\n// eslint-disable-next-line complexity\nexport const PublishAction: DocumentActionComponent = (props) => {\n  const {id, type, liveEdit, draft, published} = props\n  const [publishState, setPublishState] = useState<'publishing' | 'published' | null>(null)\n  const {publish} = useDocumentOperation(id, type)\n  const validationStatus = useValidationStatus(id, type)\n  const syncState = useSyncState(id, type)\n  const {changesOpen, onHistoryOpen, documentId, documentType} = useDocumentPane()\n  const editState = useEditState(documentId, documentType)\n\n  const revision = (editState?.draft || editState?.published || {})._rev\n\n  const hasValidationErrors = validationStatus.validation.some(isValidationErrorMarker)\n  // we use this to \"schedule\" publish after pending tasks (e.g. validation and sync) has completed\n  const [publishScheduled, setPublishScheduled] = useState<boolean>(false)\n  const isSyncing = syncState.isSyncing\n  const isValidating = validationStatus.isValidating\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'publish',\n  })\n\n  const currentUser = useCurrentUser()\n\n  // eslint-disable-next-line no-nested-ternary\n  const title = publish.disabled\n    ? getDisabledReason(publish.disabled, (published || {})._updatedAt) || ''\n    : hasValidationErrors\n    ? 'There are validation errors that need to be fixed before this document can be published'\n    : ''\n\n  const hasDraft = Boolean(draft)\n\n  const doPublish = useCallback(() => {\n    publish.execute()\n    setPublishState('publishing')\n  }, [publish])\n\n  useEffect(() => {\n    // make sure the validation status is about the current revision and not an earlier one\n    const validationComplete =\n      validationStatus.isValidating === false && validationStatus.revision !== revision\n\n    if (!publishScheduled || isSyncing || !validationComplete) {\n      return\n    }\n\n    if (!hasValidationErrors) {\n      doPublish()\n    }\n    setPublishScheduled(false)\n  }, [\n    isSyncing,\n    doPublish,\n    hasValidationErrors,\n    publishScheduled,\n    validationStatus.revision,\n    revision,\n    isValidating,\n    validationStatus.isValidating,\n  ])\n\n  useEffect(() => {\n    const didPublish = publishState === 'publishing' && !hasDraft\n    if (didPublish) {\n      if (changesOpen) {\n        // Re-open the panel\n        onHistoryOpen()\n      }\n    }\n    const nextState = didPublish ? 'published' : null\n    const delay = didPublish ? 200 : 4000\n    const timer = setTimeout(() => {\n      setPublishState(nextState)\n    }, delay)\n    return () => clearTimeout(timer)\n  }, [changesOpen, publishState, hasDraft, onHistoryOpen])\n\n  const handle = useCallback(() => {\n    if (\n      syncState.isSyncing ||\n      validationStatus.isValidating ||\n      validationStatus.revision !== revision\n    ) {\n      setPublishScheduled(true)\n    } else {\n      doPublish()\n    }\n  }, [\n    syncState.isSyncing,\n    validationStatus.isValidating,\n    validationStatus.revision,\n    revision,\n    doPublish,\n  ])\n\n  if (liveEdit) {\n    return {\n      tone: 'positive',\n      label: 'Publish',\n      title:\n        'Live Edit is enabled for this content type and publishing happens automatically as you make changes',\n      disabled: true,\n    }\n  }\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'positive',\n      label: 'Publish',\n      title: (\n        <InsufficientPermissionsMessage\n          operationLabel=\"publish this document\"\n          currentUser={currentUser}\n        />\n      ),\n      disabled: true,\n    }\n  }\n\n  const disabled = Boolean(\n    publishScheduled ||\n      editState?.transactionSyncLock?.enabled ||\n      publishState === 'publishing' ||\n      publishState === 'published' ||\n      hasValidationErrors ||\n      publish.disabled\n  )\n\n  return {\n    disabled: disabled || isPermissionsLoading,\n    tone: 'positive',\n    label:\n      // eslint-disable-next-line no-nested-ternary\n      publishState === 'published'\n        ? 'Published'\n        : publishScheduled || publishState === 'publishing'\n        ? 'Publishing…'\n        : 'Publish',\n    // @todo: Implement loading state, to show a `<Button loading />` state\n    // loading: publishScheduled || publishState === 'publishing',\n    icon: publishState === 'published' ? CheckmarkIcon : PublishIcon,\n    // eslint-disable-next-line no-nested-ternary\n    title: publishScheduled\n      ? 'Waiting for tasks to finish before publishing'\n      : publishState === 'published' || publishState === 'publishing'\n      ? null\n      : title,\n    shortcut: disabled || publishScheduled ? null : 'Ctrl+Alt+P',\n    onHandle: handle,\n  }\n}\n\nPublishAction.action = 'publish'\n","import {UnpublishIcon} from '@sanity/icons'\nimport React, {useCallback, useMemo, useState} from 'react'\nimport {ConfirmDeleteDialog} from '../components'\nimport {\n  DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useDocumentPairPermissions,\n  useCurrentUser,\n  useDocumentOperation,\n  DocumentActionModalDialogProps,\n} from 'sanity'\n\nconst DISABLED_REASON_TITLE = {\n  NOT_PUBLISHED: 'This document is not published',\n}\n\n/** @internal */\nexport const UnpublishAction: DocumentActionComponent = ({\n  id,\n  type,\n  draft,\n  onComplete,\n  liveEdit,\n}) => {\n  const {unpublish} = useDocumentOperation(id, type)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'unpublish',\n  })\n  const currentUser = useCurrentUser()\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setConfirmDialogOpen(false)\n    unpublish.execute()\n    onComplete()\n  }, [onComplete, unpublish])\n\n  const dialog: DocumentActionModalDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'dialog',\n        onClose: onComplete,\n        content: (\n          <ConfirmDeleteDialog\n            id={draft?._id || id}\n            type={type}\n            action=\"unpublish\"\n            onCancel={handleCancel}\n            onConfirm={handleConfirm}\n          />\n        ),\n      }\n    }\n\n    return null\n  }, [draft, id, handleCancel, handleConfirm, isConfirmDialogOpen, onComplete, type])\n\n  if (liveEdit) {\n    return null\n  }\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'critical',\n      icon: UnpublishIcon,\n      label: 'Unpublish',\n      title: (\n        <InsufficientPermissionsMessage\n          operationLabel=\"unpublish this document\"\n          currentUser={currentUser}\n        />\n      ),\n      disabled: true,\n    }\n  }\n\n  return {\n    tone: 'critical',\n    icon: UnpublishIcon,\n    disabled: Boolean(unpublish.disabled) || isPermissionsLoading,\n    label: 'Unpublish',\n    title: unpublish.disabled\n      ? DISABLED_REASON_TITLE[unpublish.disabled as keyof typeof DISABLED_REASON_TITLE]\n      : '',\n    onHandle: () => setConfirmDialogOpen(true),\n    dialog,\n  }\n}\n\nUnpublishAction.action = 'unpublish'\n","import {DocumentBadgeComponent} from 'sanity'\n\n/** @internal */\nexport const LiveEditBadge: DocumentBadgeComponent = (props) => {\n  const {liveEdit} = props\n\n  if (liveEdit) {\n    return {\n      label: 'Live',\n      color: 'danger',\n    }\n  }\n\n  return null\n}\n","/**\n * @internal\n */\nexport const _DEBUG = false\n\nexport const EMPTY_PARAMS = {}\nexport const LOADING_PANE = Symbol('LOADING_PANE')\n\nexport const DOCUMENT_PANEL_PORTAL_ELEMENT = 'documentPanelPortalElement'\n","import {uuid} from '@sanity/uuid'\nimport {PaneNode, RouterPanes} from './types'\nimport {EMPTY_PARAMS, LOADING_PANE} from './constants'\n\nconst state: {\n  activePanes: Array<PaneNode | typeof LOADING_PANE>\n} = {activePanes: []}\n\nexport function setActivePanes(panes: Array<PaneNode | typeof LOADING_PANE>): void {\n  state.activePanes = panes\n}\n\n/**\n * This function looks at the _active panes_ to resolve an intent. this type of\n * intent resolution is faster and does not cause the panes to reset\n *\n * @internal\n */\nexport function getIntentState(\n  intent: string,\n  params: Record<string, string>,\n  routerState: {panes?: RouterPanes} | undefined,\n  payload: unknown\n): {panes: RouterPanes} | {intent: string; params: Record<string, string>; payload: unknown} {\n  const panes = routerState?.panes || []\n  const activePanes = state.activePanes || []\n  const editDocumentId = params.id || uuid()\n  const isTemplate = intent === 'create' && params.template\n\n  // Loop through open panes and see if any of them can handle the intent\n  for (let i = activePanes.length - 1; i >= 0; i--) {\n    const pane = activePanes[i]\n\n    if (typeof pane !== 'object') continue\n\n    // NOTE: if you update this logic, please also update the similar handler in\n    // `resolveIntent.ts`\n    if (\n      pane.canHandleIntent?.(intent, params, {\n        pane,\n        index: i,\n      }) ||\n      // see `resolveIntent.ts` for more info\n      (pane.type === 'documentList' &&\n        pane.schemaTypeName === params.type &&\n        pane.options.filter === '_type == $type')\n    ) {\n      const paneParams = isTemplate ? {template: params.template} : EMPTY_PARAMS\n\n      return {\n        panes: panes\n          .slice(0, i)\n          .concat([[{id: editDocumentId, params: paneParams, payload}]]) as RouterPanes,\n      }\n    }\n  }\n\n  return {intent: intent, params, payload}\n}\n","import {omit} from 'lodash'\nimport {RouterPanes, RouterPaneGroup, RouterPaneSibling} from './types'\nimport {route} from 'sanity/router'\n\nconst EMPTY_PARAMS = {}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToState(params: string): Record<string, unknown> {\n  try {\n    return JSON.parse(decodeURIComponent(params))\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn('Failed to parse JSON parameters')\n    return {}\n  }\n}\n\nexport function encodePanesSegment(panes: RouterPanes): string {\n  return (panes || [])\n    .map((group) => group.map(encodeChunks).join('|'))\n    .map(encodeURIComponent)\n    .join(';')\n}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToPath(params: Record<string, unknown>): string {\n  return JSON.stringify(params)\n}\n\n// http://localhost:3333/intent/create/template=book-by-author;type=book/eyJhdXRob3JJZCI6Imdycm0ifQ==\n\n/**\n * @internal\n */\nexport function toState(pathSegment: string): RouterPaneGroup[] {\n  return parsePanesSegment(decodeURIComponent(pathSegment))\n}\n\n/**\n * @internal\n */\nexport function toPath(panes: RouterPaneGroup[]): string {\n  return encodePanesSegment(panes)\n}\n\nexport const router = route.create('/', [\n  // \"Asynchronous intent resolving\" route\n  route.intents('/intent'),\n\n  // Legacy fallback route, will be redirected to new format\n  route.create('/edit/:type/:editDocumentId', [\n    route.create({\n      path: '/:params',\n      transform: {params: {toState: legacyEditParamsToState, toPath: legacyEditParamsToPath}},\n    }),\n  ]),\n\n  // The regular path - when the intent can be resolved to a specific pane\n  route.create({\n    path: '/:panes',\n    // Legacy URLs, used to handle redirects\n    children: [route.create('/:action', route.create('/:legacyEditDocumentId'))],\n    transform: {\n      panes: {toState, toPath},\n    },\n  }),\n])\n\n// old: authors;knut,{\"template\":\"diaryEntry\"}\n// new: authors;knut,view=diff,eyJyZXYxIjoiYWJjMTIzIiwicmV2MiI6ImRlZjQ1NiJ9|latest-posts\n\nconst panePattern = /^([.a-z0-9_-]+),?({.*?})?(?:(;|$))/i\nconst isParam = (str: string) => /^[a-z0-9]+=[^=]+/i.test(str)\nconst isPayload = (str: string) =>\n  /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(str)\nconst exclusiveParams = ['view', 'since', 'rev', 'inspect']\n\ntype Truthy<T> = T extends false\n  ? never\n  : T extends ''\n  ? never\n  : T extends 0\n  ? never\n  : T extends 0n\n  ? never\n  : T extends null | undefined\n  ? NonNullable<T>\n  : T\nconst isTruthy = Boolean as (t: unknown) => boolean as <T>(t: T) => t is Truthy<T>\n\nfunction parseChunks(chunks: string[], initial: RouterPaneSibling): RouterPaneSibling {\n  return chunks.reduce(\n    (pane, chunk) => {\n      if (isParam(chunk)) {\n        const key = chunk.slice(0, chunk.indexOf('='))\n        const value = chunk.slice(key.length + 1)\n        pane.params = {...pane.params, [decodeURIComponent(key)]: decodeURIComponent(value)}\n      } else if (isPayload(chunk)) {\n        pane.payload = tryParseBase64Payload(chunk)\n      } else {\n        // eslint-disable-next-line no-console\n        console.warn('Unknown pane segment: %s - skipping', chunk)\n      }\n\n      return pane\n    },\n    {...initial, params: EMPTY_PARAMS, payload: undefined}\n  )\n}\n\nfunction encodeChunks(pane: RouterPaneSibling, index: number, group: RouterPaneGroup): string {\n  const {payload, params = {}, id} = pane\n  const [firstSibling] = group\n  const paneIsFirstSibling = pane === firstSibling\n  const sameAsFirst = index !== 0 && id === firstSibling.id\n  const encodedPayload = typeof payload === 'undefined' ? undefined : btoa(JSON.stringify(payload))\n\n  const encodedParams = Object.entries(params)\n    .filter((entry): entry is [string, string] => {\n      const [key, value] = entry\n      if (!value) return false\n      if (paneIsFirstSibling) return true\n\n      // omit the value if it's the same as the value from the first sibling\n      const valueFromFirstSibling = firstSibling.params?.[key]\n      if (value === valueFromFirstSibling && !exclusiveParams.includes(key)) return false\n      return true\n    })\n    .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\n\n  return (\n    [sameAsFirst ? '' : id]\n      .concat([encodedParams.length > 0 && encodedParams, encodedPayload].filter(isTruthy).flat())\n      .join(',') || ','\n  )\n}\n\nexport function parsePanesSegment(str: string): RouterPanes {\n  if (str.indexOf(',{') !== -1) {\n    return parseOldPanesSegment(str)\n  }\n\n  return str\n    .split(';')\n    .map((group) => {\n      const [firstSibling, ...restOfSiblings] = group.split('|').map((segment) => {\n        const [id, ...chunks] = segment.split(',')\n        return parseChunks(chunks, {id})\n      })\n\n      return [\n        firstSibling,\n        ...restOfSiblings.map((sibling) => ({\n          ...firstSibling,\n          ...sibling,\n          id: sibling.id || firstSibling.id,\n          params: {...omit(firstSibling.params, exclusiveParams), ...sibling.params},\n          payload: sibling.payload || firstSibling.payload,\n        })),\n      ]\n    })\n    .filter((group) => group.length > 0)\n}\n\nfunction parseOldPanesSegment(str: string): RouterPanes {\n  const chunks: RouterPaneGroup = []\n\n  let buffer = str\n  while (buffer.length) {\n    const [match, id, payloadChunk] = buffer.match(panePattern) || []\n    if (!match) {\n      buffer = buffer.slice(1)\n      continue\n    }\n\n    const payload = payloadChunk && tryParsePayload(payloadChunk)\n    chunks.push({id, payload})\n\n    buffer = buffer.slice(match.length)\n  }\n\n  return [chunks]\n}\n\nfunction tryParsePayload(json: string) {\n  try {\n    return JSON.parse(json)\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn(`Failed to parse parameters: ${err.message}`)\n    return undefined\n  }\n}\n\nfunction tryParseBase64Payload(data: string) {\n  return data ? tryParsePayload(atob(data)) : undefined\n}\n","import {PaneRouterContextValue} from '../../components'\nimport {PaneMenuItemGroup} from '../../types'\n\nexport const DOCUMENT_PANEL_MIN_WIDTH = 320\nexport const DOCUMENT_PANEL_INITIAL_MIN_WIDTH = 600\n\nexport const DOCUMENT_INSPECTOR_MIN_WIDTH = 320\nexport const DOCUMENT_INSPECTOR_MAX_WIDTH = 540\n\nexport const EMPTY_PARAMS: NonNullable<PaneRouterContextValue['params']> = {}\n\nexport const INSPECT_ACTION_PREFIX = 'inspect:'\n\nexport const DEFAULT_MENU_ITEM_GROUPS: PaneMenuItemGroup[] = [{id: 'inspectors'}, {id: 'links'}]\n\n// inspectors\nexport const HISTORY_INSPECTOR_NAME = 'sanity/desk/history'\nexport const VALIDATION_INSPECTOR_NAME = 'sanity/desk/validation'\n","import {CloseIcon} from '@sanity/icons'\nimport {Box, Button, Card, CardProps, Flex, Text} from '@sanity/ui'\nimport React, {HTMLProps, ReactNode} from 'react'\nimport styled from 'styled-components'\n\nexport interface DocumentInspectorHeaderProps {\n  as?: CardProps['as']\n  closeButtonLabel: string\n  flex?: CardProps['flex']\n  onClose: () => void\n  title: ReactNode\n}\n\nconst Root = styled(Card)({\n  position: 'relative',\n  zIndex: 1,\n  lineHeight: 0,\n\n  '&:after': {\n    content: '\"\"',\n    display: 'block',\n    position: 'absolute',\n    left: 0,\n    bottom: -1,\n    right: 0,\n    borderBottom: '1px solid var(--card-border-color)',\n    opacity: 0.5,\n  },\n})\n\n/** @internal */\nexport function DocumentInspectorHeader(\n  props: DocumentInspectorHeaderProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref'>\n) {\n  const {as: forwardedAs, children, closeButtonLabel, onClose, title, ...restProps} = props\n\n  return (\n    <Root {...restProps} as={forwardedAs}>\n      <Flex padding={2}>\n        <Box flex={1} padding={3}>\n          <Text as=\"h1\" size={1} weight=\"semibold\">\n            {title}\n          </Text>\n        </Box>\n        <Box flex=\"none\" padding={1}>\n          <Button\n            aria-label={closeButtonLabel}\n            fontSize={1}\n            icon={CloseIcon}\n            mode=\"bleed\"\n            onClick={onClose}\n            padding={2}\n          />\n        </Box>\n      </Flex>\n      {children}\n    </Root>\n  )\n}\n","import {createContext} from 'react'\nimport {DeskToolContextValue} from './types'\n\nexport const DeskToolContext = createContext<DeskToolContextValue | null>(null)\n","import {useContext} from 'react'\nimport {DeskToolContext} from './DeskToolContext'\nimport {DeskToolContextValue} from './types'\n\n/** @internal */\nexport function useDeskTool(): DeskToolContextValue {\n  const deskTool = useContext(DeskToolContext)\n\n  if (!deskTool) throw new Error(`DeskTool: missing context value`)\n\n  return deskTool\n}\n","import React, {useCallback, useRef} from 'react'\nimport styled from 'styled-components'\n\nconst Root = styled.div`\n  position: absolute;\n  top: 0;\n  left: -4px;\n  bottom: 0;\n  width: 9px;\n  z-index: 201;\n  cursor: ew-resize;\n\n  /* Border */\n  & > span:nth-child(1) {\n    display: block;\n    border-left: 1px solid var(--card-border-color);\n    position: absolute;\n    top: 0;\n    left: 4px;\n    bottom: 0;\n    transition: opacity 200ms;\n    opacity: 0.5;\n  }\n\n  /* Hover effect */\n  & > span:nth-child(2) {\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 9px;\n    bottom: 0;\n    background-color: var(--card-border-color);\n    opacity: 0;\n    transition: opacity 150ms;\n  }\n\n  @media (hover: hover) {\n    &:hover > span:nth-child(2) {\n      opacity: 0.2;\n    }\n  }\n`\n\nexport function Resizer(props: {onResize: (delta: number) => void; onResizeStart: () => void}) {\n  const {onResize, onResizeStart} = props\n\n  const mouseXRef = useRef(0)\n\n  const handleMouseDown = useCallback(\n    (event: React.MouseEvent) => {\n      event.preventDefault()\n\n      mouseXRef.current = event.pageX\n\n      onResizeStart()\n\n      const handleMouseMove = (e: MouseEvent) => {\n        e.preventDefault()\n        onResize(e.pageX - mouseXRef.current)\n      }\n\n      const handleMouseUp = () => {\n        window.removeEventListener('mousemove', handleMouseMove)\n        window.removeEventListener('mouseup', handleMouseUp)\n      }\n\n      window.addEventListener('mousemove', handleMouseMove)\n      window.addEventListener('mouseup', handleMouseUp)\n    },\n    [onResize, onResizeStart]\n  )\n\n  return (\n    <Root onMouseDown={handleMouseDown}>\n      {/* Hover effect */}\n      <span />\n\n      {/* Border */}\n      <span />\n    </Root>\n  )\n}\n","import React, {HTMLProps, useCallback, useMemo, useRef, useState} from 'react'\nimport styled from 'styled-components'\nimport {Box, BoxProps} from '@sanity/ui'\nimport {Resizer} from './Resizer'\n\nexport interface ResizableProps {\n  minWidth: number\n  maxWidth: number\n}\n\nconst Root = styled(Box)`\n  position: relative;\n  flex: 1;\n  padding-left: 1px;\n`\n\nexport function Resizable(\n  props: ResizableProps & BoxProps & Omit<HTMLProps<HTMLDivElement>, 'as'>\n) {\n  const {as: forwardedAs, children, minWidth, maxWidth, ...restProps} = props\n  const [element, setElement] = useState<HTMLDivElement | null>(null)\n  const elementWidthRef = useRef<number>()\n  const [targetWidth, setTargetWidth] = useState<number>()\n\n  const handleResizeStart = useCallback(() => {\n    elementWidthRef.current = element?.offsetWidth\n  }, [element])\n\n  const handleResize = useCallback(\n    (deltaX: number) => {\n      const w = elementWidthRef.current\n\n      if (!w) return\n\n      setTargetWidth(Math.min(Math.max(w - deltaX, minWidth), maxWidth))\n    },\n    [minWidth, maxWidth]\n  )\n\n  const style = useMemo(\n    () => (targetWidth ? {flex: 'none', width: targetWidth} : {minWidth, maxWidth}),\n    [minWidth, maxWidth, targetWidth]\n  )\n\n  return (\n    <Root as={forwardedAs} {...restProps} ref={setElement} style={style}>\n      {children}\n      <Resizer onResize={handleResize} onResizeStart={handleResizeStart} />\n    </Root>\n  )\n}\n","/* eslint-disable no-loop-func */\n\nimport {Path, SanityDocument, SchemaType} from '@sanity/types'\nimport {isArray, isRecord} from 'sanity'\n\nexport function getPathTypes(options: {\n  path: Path\n  schemaType: SchemaType\n  value: Partial<SanityDocument> | null\n}): SchemaType[] {\n  const {path, schemaType, value} = options\n  const result: SchemaType[] = []\n\n  let s = schemaType\n  let v: unknown = value\n\n  for (const segment of path) {\n    // field name\n    if (typeof segment === 'string') {\n      if (!isRecord(v) && v !== undefined) {\n        throw new Error(`Parent value is not an object, cannot get path segment: .${segment}`)\n      }\n\n      if (s.jsonType !== 'object') {\n        throw new Error(\n          `Parent type is not an object schema type, cannot get path segment: .${segment}`\n        )\n      }\n\n      v = v?.[segment]\n\n      const field = s.fields.find((f) => f.name === segment)\n\n      if (!field) {\n        throw new Error(`Field type not found: .${segment}`)\n      }\n\n      s = field.type\n\n      result.push(s)\n\n      continue\n    }\n\n    // array item index\n    if (typeof segment === 'number') {\n      if (!isArray(v) && v !== undefined) {\n        throw new Error(`Parent value is not an array, cannot get path segment: [${segment}]`)\n      }\n\n      if (s.jsonType !== 'array') {\n        throw new Error(\n          `Parent type is not an array schema type, cannot get path segment: [${segment}]`\n        )\n      }\n\n      v = v?.[segment]\n\n      const itemType = s.of.find((ofType) => {\n        if (typeof v === 'string') {\n          return ofType.jsonType === 'string'\n        }\n\n        if (typeof v === 'number') {\n          return ofType.jsonType === 'number'\n        }\n\n        if (typeof v === 'boolean') {\n          return ofType.jsonType === 'boolean'\n        }\n\n        if (isRecord(v)) {\n          return ofType.name === v?._type\n        }\n\n        return false\n      })\n\n      if (!itemType) {\n        throw new Error(`Item type not found: [${segment}]`)\n      }\n\n      s = itemType\n\n      result.push(s)\n\n      continue\n    }\n\n    // array item key\n    if (isRecord(segment) && segment._key) {\n      if (!isArray(v)) {\n        throw new Error(\n          `Parent value is not an anrray, cannot get path segment: [_key == ${segment}]`\n        )\n      }\n\n      if (s.jsonType !== 'array') {\n        throw new Error(\n          `Parent type is not an array schema type, cannot get path segment: .${segment}`\n        )\n      }\n\n      const values = v ?? []\n\n      v = values.find((i) => isRecord(i) && i._key === segment._key)\n\n      if (!isRecord(v)) {\n        throw new Error(`Array item not found: [_key == ${segment._key}]`)\n      }\n\n      const ofType = s.of.find((i) => isRecord(v) && i.name === v?._type)\n\n      if (!ofType) {\n        throw new Error(`Array item type not found: .${v?._type}`)\n      }\n\n      s = ofType\n\n      result.push(s)\n\n      continue\n    }\n\n    throw new Error(`Invalid path segment: ${JSON.stringify(segment)}`)\n  }\n\n  return result\n}\n","import {ErrorOutlineIcon, IconComponent, InfoOutlineIcon, WarningOutlineIcon} from '@sanity/icons'\nimport {Box, Card, CardTone, ErrorBoundary, Flex, Stack, Text} from '@sanity/ui'\nimport {ObjectSchemaType, Path, SanityDocument, SchemaType, ValidationMarker} from '@sanity/types'\nimport React, {ErrorInfo, Fragment, createElement, useCallback, useMemo, useState} from 'react'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentInspectorHeader} from '../../documentInspector'\nimport {getPathTypes} from './getPathTypes'\nimport {DocumentInspectorProps, pathToString} from 'sanity'\n\nconst MARKER_ICON: Record<'error' | 'warning' | 'info', IconComponent> = {\n  error: ErrorOutlineIcon,\n  warning: WarningOutlineIcon,\n  info: InfoOutlineIcon,\n}\n\nconst MARKER_TONE: Record<'error' | 'warning' | 'info', CardTone> = {\n  error: 'critical',\n  warning: 'caution',\n  info: 'primary',\n}\n\nexport function ValidationInspector(props: DocumentInspectorProps) {\n  const {onClose} = props\n  const {onFocus, onPathOpen, schemaType, validation, value} = useDocumentPane()\n\n  const handleOpen = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onFocus, onPathOpen]\n  )\n\n  return (\n    <Flex direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <DocumentInspectorHeader\n        as=\"header\"\n        closeButtonLabel=\"Close validation\"\n        flex=\"none\"\n        onClose={onClose}\n        title=\"Validation\"\n      />\n\n      <Card flex={1} overflow=\"auto\" padding={3}>\n        {validation.length === 0 && (\n          <Box padding={2}>\n            <Text muted size={1}>\n              No validation errors\n            </Text>\n          </Box>\n        )}\n\n        {validation.length > 0 && (\n          <Stack space={2}>\n            {validation.map((marker) => (\n              <ValidationCard\n                key={pathToString(marker.path)}\n                marker={marker}\n                onOpen={handleOpen}\n                schemaType={schemaType}\n                value={value}\n              />\n            ))}\n          </Stack>\n        )}\n      </Card>\n    </Flex>\n  )\n}\n\nfunction ValidationCard(props: {\n  marker: ValidationMarker\n  onOpen: (path: Path) => void\n  schemaType: ObjectSchemaType\n  value: Partial<SanityDocument> | null\n}) {\n  const {marker, onOpen, schemaType, value} = props\n  const handleOpen = useCallback(() => onOpen(marker.path), [marker, onOpen])\n  const [errorInfo, setErrorInfo] = useState<{error: Error; info: ErrorInfo} | null>(null)\n\n  return (\n    <ErrorBoundary onCatch={setErrorInfo}>\n      {errorInfo && (\n        <Card padding={3} radius={2} tone=\"critical\">\n          <Text size={1}>ERROR: {errorInfo.error.message}</Text>\n        </Card>\n      )}\n\n      {!errorInfo && (\n        <Card\n          __unstable_focusRing\n          as=\"button\"\n          onClick={handleOpen}\n          padding={3}\n          radius={2}\n          tone={MARKER_TONE[marker.level]}\n        >\n          <Flex align=\"flex-start\" gap={3}>\n            <Box flex=\"none\">\n              <Text size={1}>{createElement(MARKER_ICON[marker.level])}</Text>\n            </Box>\n\n            <Stack flex={1} space={2}>\n              <DocumentNodePathBreadcrumbs\n                path={marker.path}\n                schemaType={schemaType}\n                value={value}\n              />\n\n              <Text muted size={1}>\n                {marker.item.message}\n              </Text>\n            </Stack>\n          </Flex>\n        </Card>\n      )}\n    </ErrorBoundary>\n  )\n}\n\nfunction DocumentNodePathBreadcrumbs(props: {\n  path: Path\n  schemaType: SchemaType\n  value: Partial<SanityDocument> | null\n}) {\n  const {path, schemaType, value} = props\n\n  const pathTypes = useMemo(\n    () => getPathTypes({path, schemaType, value}),\n    [path, schemaType, value]\n  )\n\n  return (\n    <Text size={1}>\n      {pathTypes.map((t, i) => (\n        <Fragment key={i}>\n          {i > 0 && <span style={{color: 'var(--card-muted-fg-color)', opacity: 0.5}}> / </span>}\n          <span style={{fontWeight: 500}}>{t.title || t.name}</span>\n        </Fragment>\n      ))}\n    </Text>\n  )\n}\n","import {CheckmarkCircleIcon, ErrorOutlineIcon, WarningOutlineIcon} from '@sanity/icons'\nimport {useMemo} from 'react'\nimport {VALIDATION_INSPECTOR_NAME} from '../../constants'\nimport {ValidationInspector} from './ValidationInspector'\nimport {\n  DocumentInspector,\n  DocumentInspectorMenuItem,\n  DocumentInspectorUseMenuItemProps,\n  FormNodeValidation,\n  isValidationError,\n  isValidationWarning,\n  useValidationStatus,\n} from 'sanity'\n\nfunction useMenuItem(props: DocumentInspectorUseMenuItemProps): DocumentInspectorMenuItem {\n  const {documentId, documentType} = props\n  const {validation: validationMarkers} = useValidationStatus(documentId, documentType)\n\n  const validation: FormNodeValidation[] = useMemo(\n    () =>\n      validationMarkers.map((item) => ({\n        level: item.level,\n        message: item.item.message,\n        path: item.path,\n      })),\n    [validationMarkers]\n  )\n\n  const hasErrors = validation.some(isValidationError)\n  const hasWarnings = validation.some(isValidationWarning)\n\n  const icon = useMemo(() => {\n    if (hasErrors) return ErrorOutlineIcon\n    if (hasWarnings) return WarningOutlineIcon\n    return CheckmarkCircleIcon\n  }, [hasErrors, hasWarnings])\n\n  const tone = useMemo(() => {\n    if (hasErrors) return 'critical'\n    if (hasWarnings) return 'caution'\n    return 'positive'\n  }, [hasErrors, hasWarnings])\n\n  return {\n    hidden: validation.length === 0,\n    icon,\n    title: 'Validation',\n    tone,\n    showAsAction: true,\n  }\n}\n\nexport const validationInspector: DocumentInspector = {\n  name: VALIDATION_INSPECTOR_NAME,\n  component: ValidationInspector,\n  useMenuItem,\n}\n","import {\n  TrashIcon,\n  EditIcon,\n  IconComponent,\n  PublishIcon,\n  UnpublishIcon,\n  CloseIcon,\n  AddCircleIcon,\n} from '@sanity/icons'\n\nexport const TIMELINE_LABELS: {[key: string]: string | undefined} = {\n  create: 'created',\n  delete: 'deleted',\n  discardDraft: 'discarded draft',\n  initial: 'created',\n  editDraft: 'edited',\n  editLive: 'live edited',\n  publish: 'published',\n  unpublish: 'unpublished',\n}\n\nexport const TIMELINE_ICON_COMPONENTS: {[key: string]: IconComponent | undefined} = {\n  create: AddCircleIcon,\n  delete: TrashIcon,\n  discardDraft: CloseIcon,\n  initial: AddCircleIcon,\n  editDraft: EditIcon,\n  editLive: EditIcon,\n  publish: PublishIcon,\n  unpublish: UnpublishIcon,\n}\n","import {IconComponent} from '@sanity/icons'\nimport {TIMELINE_ICON_COMPONENTS, TIMELINE_LABELS} from './constants'\nimport {ChunkType} from 'sanity'\n\nexport function formatTimelineEventLabel(type: ChunkType): string | undefined {\n  return TIMELINE_LABELS[type]\n}\n\nexport function getTimelineEventIconComponent(type: ChunkType): IconComponent | undefined {\n  return TIMELINE_ICON_COMPONENTS[type]\n}\n","import React from 'react'\nimport {AvatarStack} from '@sanity/ui'\nimport {UserAvatar} from 'sanity'\n\ninterface UserAvatarStackProps {\n  maxLength?: number\n  userIds: string[]\n}\n\nexport function UserAvatarStack({maxLength, userIds}: UserAvatarStackProps) {\n  return (\n    <AvatarStack maxLength={maxLength}>\n      {userIds.map((userId) => (\n        <UserAvatar key={userId} user={userId} withTooltip />\n      ))}\n    </AvatarStack>\n  )\n}\n","import {Text, Box, Button, Theme, Flex, rem} from '@sanity/ui'\nimport styled, {css} from 'styled-components'\n\nexport interface IconWrapperProps {\n  theme: Theme\n}\n\nexport const IconWrapper = styled(Flex)(({theme}: IconWrapperProps) => {\n  const borderColor = theme.sanity.color.base.skeleton?.from\n\n  return css`\n    --timeline-hairline-width: 1px;\n    position: relative;\n    z-index: 2;\n    margin: 0;\n    padding: 0;\n\n    &::before {\n      position: absolute;\n      content: '';\n      height: 100%;\n      width: var(--timeline-hairline-width);\n      background: ${borderColor};\n      top: 0;\n      left: calc((100% - var(--timeline-hairline-width)) / 2);\n      z-index: 1;\n    }\n  `\n})\n\nexport const Root = styled(Button)(({$selected}: {$selected: boolean}) => {\n  return css`\n    position: relative;\n    width: 100%;\n\n    /* Line styling */\n    &[data-first] ${IconWrapper}::before {\n      height: 50%;\n      top: unset;\n      bottom: 0;\n    }\n\n    &[data-last] ${IconWrapper}::before {\n      height: 50%;\n    }\n\n    ${$selected &&\n    css`\n      ${IconWrapper}::before {\n        background: transparent;\n      }\n    `}\n  `\n})\n\nexport const IconBox = styled(Box)`\n  background: var(--card-bg-color);\n  border-radius: 50px;\n  position: relative;\n  z-index: 2;\n`\n\nexport const EventLabel = styled(Text)`\n  text-transform: capitalize;\n`\n\nexport const TimestampBox = styled(Box)`\n  min-width: 1rem;\n  margin-left: ${({theme}) => `-${rem(theme.sanity.space[1])}`};\n`\n","import React, {useCallback, createElement, useMemo} from 'react'\nimport {Box, ButtonTone, Card, Flex, Label, Stack, Text} from '@sanity/ui'\nimport {format} from 'date-fns'\nimport {formatTimelineEventLabel, getTimelineEventIconComponent} from './helpers'\nimport {UserAvatarStack} from './userAvatarStack'\nimport {EventLabel, IconBox, IconWrapper, Root, TimestampBox} from './timelineItem.styled'\nimport {ChunkType, Chunk} from 'sanity'\n\nconst TIMELINE_ITEM_EVENT_TONE: Record<ChunkType | 'withinSelection', ButtonTone> = {\n  initial: 'primary',\n  create: 'primary',\n  publish: 'positive',\n  editLive: 'caution',\n  editDraft: 'caution',\n  unpublish: 'critical',\n  discardDraft: 'critical',\n  delete: 'critical',\n  withinSelection: 'primary',\n}\n\ninterface TimelineItemProps {\n  chunk: Chunk\n  isFirst: boolean\n  isLast: boolean\n  isLatest: boolean\n  isSelected: boolean\n  onSelect: (chunk: Chunk) => void\n  timestamp: string\n  type: ChunkType\n}\n\nexport function TimelineItem({\n  chunk,\n  isFirst,\n  isLast,\n  isLatest,\n  isSelected,\n  onSelect,\n  timestamp,\n  type,\n}: TimelineItemProps) {\n  const iconComponent = getTimelineEventIconComponent(type)\n  const authorUserIds = Array.from(chunk.authors)\n  const formattedTimestamp = useMemo(() => {\n    const parsedDate = new Date(timestamp)\n    const formattedDate = format(parsedDate, 'MMM d, yyyy, hh:mm a')\n\n    return formattedDate\n  }, [timestamp])\n\n  const handleClick = useCallback(\n    (evt: React.MouseEvent<HTMLButtonElement>) => {\n      evt.preventDefault()\n      evt.stopPropagation()\n      onSelect(chunk)\n    },\n    [onSelect, chunk]\n  )\n\n  return (\n    <Root\n      $selected={isSelected}\n      data-chunk-id={chunk.id}\n      data-first={isFirst ? true : undefined}\n      data-last={isLast ? true : undefined}\n      data-ui=\"timelineItem\"\n      mode={isSelected ? 'default' : 'bleed'}\n      onClick={handleClick}\n      padding={0}\n      radius={2}\n      tone={isSelected ? 'primary' : TIMELINE_ITEM_EVENT_TONE[chunk.type]}\n    >\n      <Box paddingX={2}>\n        <Flex align=\"stretch\">\n          <IconWrapper align=\"center\">\n            <IconBox padding={2}>\n              <Text size={2}>{iconComponent && createElement(iconComponent)}</Text>\n            </IconBox>\n          </IconWrapper>\n\n          <Stack space={2} margin={2}>\n            {isLatest && (\n              <Flex>\n                <Card\n                  padding={1}\n                  radius={2}\n                  shadow={1}\n                  tone={isSelected ? 'primary' : TIMELINE_ITEM_EVENT_TONE[chunk.type]}\n                >\n                  <Label muted size={0}>\n                    Latest\n                  </Label>\n                </Card>\n              </Flex>\n            )}\n            <Box>\n              <EventLabel size={1} weight=\"medium\">\n                {formatTimelineEventLabel(type) || <code>{type}</code>}\n              </EventLabel>\n            </Box>\n            <TimestampBox paddingX={1}>\n              <Text size={0} muted>\n                {formattedTimestamp}\n              </Text>\n            </TimestampBox>\n          </Stack>\n          <Flex flex={1} justify=\"flex-end\" align=\"center\">\n            <UserAvatarStack maxLength={3} userIds={authorUserIds} />\n          </Flex>\n        </Flex>\n      </Box>\n    </Root>\n  )\n}\n","import {Box, Flex, Stack} from '@sanity/ui'\nimport styled, {css} from 'styled-components'\n\nexport const StackWrapper = styled(Stack)`\n  max-width: 200px;\n`\n\nexport const ListWrapper = styled(Flex)`\n  max-height: calc(100vh - 198px);\n  min-width: 244px;\n`\n\nexport const Root = styled(Box)(({$visible}: {$visible?: boolean}) => {\n  return css`\n    opacity: 0;\n    pointer-events: none;\n\n    ${$visible &&\n    css`\n      opacity: 1;\n      pointer-events: auto;\n    `}\n  `\n})\n","import React, {useCallback, useEffect, useMemo, useState} from 'react'\nimport {Box, Flex, Spinner, Text} from '@sanity/ui'\nimport {TimelineItem} from './timelineItem'\nimport {ListWrapper, Root, StackWrapper} from './timeline.styled'\nimport {Chunk, CommandList, CommandListRenderItemCallback} from 'sanity'\n\ninterface TimelineProps {\n  chunks: Chunk[]\n  disabledBeforeFirstChunk?: boolean\n  firstChunk?: Chunk | null\n  hasMoreChunks: boolean\n  lastChunk?: Chunk | null\n  onLoadMore: () => void\n  onSelect: (chunk: Chunk) => void\n}\n\nexport const Timeline = ({\n  chunks,\n  disabledBeforeFirstChunk,\n  hasMoreChunks,\n  lastChunk,\n  onLoadMore,\n  onSelect,\n  firstChunk,\n}: TimelineProps) => {\n  const [mounted, setMounted] = useState(false)\n\n  const filteredChunks = useMemo(() => {\n    return chunks.filter((c) => {\n      if (disabledBeforeFirstChunk && firstChunk) {\n        return c.index < firstChunk.index\n      }\n      return true\n    })\n  }, [chunks, disabledBeforeFirstChunk, firstChunk])\n\n  const selectedIndex = useMemo(\n    () => (lastChunk?.id ? filteredChunks.findIndex((c) => c.id === lastChunk.id) : -1),\n    [lastChunk?.id, filteredChunks]\n  )\n\n  const renderItem = useCallback<CommandListRenderItemCallback<Chunk>>(\n    (chunk, {activeIndex}) => {\n      const isFirst = activeIndex === 0\n      const isLast = (filteredChunks && activeIndex === filteredChunks.length - 1) || false\n      return (\n        <Box paddingBottom={isLast ? 1 : 0} paddingTop={isFirst ? 1 : 0} paddingX={1}>\n          <TimelineItem\n            chunk={chunk}\n            isFirst={isFirst}\n            isLast={isLast}\n            isLatest={activeIndex === 0 && !disabledBeforeFirstChunk}\n            isSelected={activeIndex === selectedIndex}\n            onSelect={onSelect}\n            timestamp={chunk.endTimestamp}\n            type={chunk.type}\n          />\n          {activeIndex === filteredChunks.length - 1 && hasMoreChunks && (\n            <Flex align=\"center\" justify=\"center\" padding={4}>\n              <Spinner muted />\n            </Flex>\n          )}\n        </Box>\n      )\n    },\n    [disabledBeforeFirstChunk, filteredChunks, hasMoreChunks, onSelect, selectedIndex]\n  )\n\n  useEffect(() => setMounted(true), [])\n\n  return (\n    <Root\n      /**\n       * We delay initial rendering if `selectedIndex` is present.\n       * This is a _temporary_ workaround to allow the virtual <CommandList>\n       * to scroll to a specific index prior to being displayed.\n       *\n       * Without this, there'll be a noticeable 'flash' where the virtual list\n       * will render with its child items at the top and then scroll into position.\n       */\n      $visible={!selectedIndex || mounted}\n      data-ui=\"timeline\"\n    >\n      {filteredChunks.length === 0 && (\n        <StackWrapper padding={3} space={3}>\n          <Text size={1} weight=\"semibold\">\n            No document history\n          </Text>\n          <Text muted size={1}>\n            When changing the content of the document, the document versions will appear in this\n            menu.\n          </Text>\n        </StackWrapper>\n      )}\n\n      {filteredChunks.length > 0 && (\n        <ListWrapper direction=\"column\">\n          <CommandList\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel=\"Document revisions\"\n            autoFocus=\"list\"\n            initialIndex={selectedIndex}\n            initialScrollAlign=\"center\"\n            itemHeight={40}\n            items={filteredChunks}\n            onEndReached={onLoadMore}\n            onEndReachedIndexOffset={20}\n            overscan={5}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </ListWrapper>\n      )}\n    </Root>\n  )\n}\n\nTimeline.displayName = 'Timeline'\n","import {ErrorOutlineIcon} from '@sanity/icons'\nimport {Flex, Stack} from '@sanity/ui'\nimport React from 'react'\nimport {TextWithTone} from 'sanity'\n\nexport function TimelineError() {\n  return (\n    <Flex align=\"flex-start\" gap={3} padding={4}>\n      <TextWithTone tone=\"critical\">\n        <ErrorOutlineIcon />\n      </TextWithTone>\n      <Stack space={4}>\n        <TextWithTone size={1} tone=\"critical\" weight=\"semibold\">\n          An error occurred whilst retrieving document changes.\n        </TextWithTone>\n        <TextWithTone size={1} tone=\"critical\">\n          Document history transactions have not been affected.\n        </TextWithTone>\n      </Stack>\n    </Flex>\n  )\n}\n","import {SelectIcon} from '@sanity/icons'\nimport {Button, Placement, Popover, useClickOutside, useGlobalKeyDown, useToast} from '@sanity/ui'\nimport {format} from 'date-fns'\nimport {upperFirst} from 'lodash'\nimport React, {useCallback, useMemo, useState} from 'react'\nimport styled from 'styled-components'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {TimelineError} from './TimelineError'\nimport {formatTimelineEventLabel} from './helpers'\nimport {Timeline} from './timeline'\nimport {Chunk, useTimelineSelector} from 'sanity'\n\ninterface TimelineMenuProps {\n  chunk: Chunk | null\n  mode: 'rev' | 'since'\n  placement?: Placement\n}\n\nconst Root = styled(Popover)`\n  overflow: hidden;\n  overflow: clip;\n`\n\nexport function TimelineMenu({chunk, mode, placement}: TimelineMenuProps) {\n  const {setTimelineRange, setTimelineMode, timelineError, ready, timelineStore} = useDocumentPane()\n  const [open, setOpen] = useState(false)\n  const [button, setButton] = useState<HTMLButtonElement | null>(null)\n  const [popover, setPopover] = useState<HTMLElement | null>(null)\n  const toast = useToast()\n\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n  const hasMoreChunks = useTimelineSelector(timelineStore, (state) => state.hasMoreChunks)\n  const realRevChunk = useTimelineSelector(timelineStore, (state) => state.realRevChunk)\n  const sinceTime = useTimelineSelector(timelineStore, (state) => state.sinceTime)\n\n  const handleOpen = useCallback(() => {\n    setTimelineMode(mode)\n    setOpen(true)\n  }, [mode, setTimelineMode])\n\n  const handleClose = useCallback(() => {\n    setTimelineMode('closed')\n    setOpen(false)\n  }, [setTimelineMode])\n\n  const handleClickOutside = useCallback(() => {\n    if (open) {\n      handleClose()\n    }\n  }, [handleClose, open])\n\n  const handleGlobalKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (open && (event.key === 'Escape' || event.key === 'Tab')) {\n        handleClose()\n        button?.focus()\n      }\n    },\n    [button, handleClose, open]\n  )\n\n  useClickOutside(handleClickOutside, [button, popover])\n  useGlobalKeyDown(handleGlobalKeyDown)\n\n  const selectRev = useCallback(\n    (revChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore.findRangeForRev(revChunk)\n        setTimelineMode('closed')\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: 'Unable to load revision',\n        })\n      }\n    },\n    [setTimelineMode, setTimelineRange, timelineStore, toast]\n  )\n\n  const selectSince = useCallback(\n    (sinceChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore.findRangeForSince(sinceChunk)\n        setTimelineMode('closed')\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: 'Unable to load revision',\n        })\n      }\n    },\n    [setTimelineMode, setTimelineRange, timelineStore, toast]\n  )\n\n  const handleLoadMore = useCallback(() => {\n    if (!loading) {\n      timelineStore.loadMore()\n    }\n  }, [loading, timelineStore])\n\n  const content = timelineError ? (\n    <TimelineError />\n  ) : (\n    <>\n      {mode === 'rev' && (\n        <Timeline\n          chunks={chunks}\n          firstChunk={realRevChunk}\n          hasMoreChunks={hasMoreChunks}\n          lastChunk={realRevChunk}\n          onLoadMore={handleLoadMore}\n          onSelect={selectRev}\n        />\n      )}\n      {mode === 'since' && (\n        <Timeline\n          chunks={chunks}\n          disabledBeforeFirstChunk\n          firstChunk={realRevChunk}\n          hasMoreChunks={hasMoreChunks}\n          lastChunk={sinceTime}\n          onLoadMore={handleLoadMore}\n          onSelect={selectSince}\n        />\n      )}\n    </>\n  )\n\n  const timeLabel = useFormattedTimestamp(chunk?.endTimestamp || '')\n\n  const revLabel = chunk\n    ? `${upperFirst(formatTimelineEventLabel(chunk.type))}: ${timeLabel}`\n    : 'Latest version'\n\n  const sinceLabel = chunk ? `Since: ${timeLabel}` : 'Since: unknown version'\n\n  const buttonLabel = mode === 'rev' ? revLabel : sinceLabel\n\n  return (\n    <Root\n      constrainSize\n      content={open && content}\n      data-ui=\"versionMenu\"\n      open={open}\n      placement={placement}\n      portal\n      ref={setPopover}\n    >\n      <Button\n        disabled={!ready}\n        mode=\"bleed\"\n        fontSize={1}\n        padding={2}\n        iconRight={SelectIcon}\n        onClick={open ? handleClose : handleOpen}\n        ref={setButton}\n        selected={open}\n        style={{maxWidth: '100%'}}\n        text={ready ? buttonLabel : 'Loading history'}\n      />\n    </Root>\n  )\n}\n\nexport function useFormattedTimestamp(time: string): string {\n  const formatted = useMemo(() => {\n    const parsedDate = time ? new Date(time) : new Date()\n    const formattedDate = format(parsedDate, 'MMM d, yyyy, hh:mm a')\n    return formattedDate\n  }, [time])\n\n  return formatted\n}\n","import React from 'react'\nimport {Box, Flex, Spinner, Text} from '@sanity/ui'\nimport {Delay} from '../../../../components'\n\nexport function LoadingContent() {\n  return (\n    <Delay ms={300}>\n      <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\" paddingTop={3}>\n        <Spinner muted />\n        <Box marginTop={3}>\n          <Text align=\"center\" muted size={1}>\n            Loading changes\n          </Text>\n        </Box>\n      </Flex>\n    </Delay>\n  )\n}\n","import {AnnotationDetails, visitDiff, Diff} from 'sanity'\n\nexport function collectLatestAuthorAnnotations(diff: Diff): AnnotationDetails[] {\n  const authorMap = new Map<string, AnnotationDetails>()\n  visitDiff(diff, (child) => {\n    if (child.action === 'unchanged' || !('annotation' in child) || !child.annotation) {\n      return true\n    }\n\n    const {author, timestamp} = child.annotation\n    const previous = authorMap.get(author)\n    if (!previous || previous.timestamp < timestamp) {\n      authorMap.set(author, child.annotation)\n    }\n\n    return true\n  })\n\n  return Array.from(authorMap.values()).sort((a, b) => (a.timestamp < b.timestamp ? 1 : -1))\n}\n","import {ObjectDiff} from '@sanity/diff'\nimport {AvatarStack, BoundaryElementProvider, Box, Card, Flex} from '@sanity/ui'\nimport React, {ReactElement, useRef} from 'react'\nimport styled from 'styled-components'\nimport {TimelineMenu} from '../../timeline'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentInspectorHeader} from '../../documentInspector'\nimport {LoadingContent} from './LoadingContent'\nimport {collectLatestAuthorAnnotations} from './helpers'\nimport {\n  ChangeFieldWrapper,\n  ChangeList,\n  DiffTooltip,\n  DocumentChangeContext,\n  DocumentChangeContextInstance,\n  DocumentInspectorProps,\n  NoChanges,\n  ObjectSchemaType,\n  ScrollContainer,\n  UserAvatar,\n  useTimelineSelector,\n} from 'sanity'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nexport function ChangesInspector(props: DocumentInspectorProps): ReactElement {\n  const {onClose} = props\n  const {documentId, schemaType, timelineError, timelineStore, value} = useDocumentPane()\n  const scrollRef = useRef<HTMLDivElement | null>(null)\n\n  // Subscribe to external timeline state changes\n  const diff = useTimelineSelector(timelineStore, (state) => state.diff)\n  const onOlderRevision = useTimelineSelector(timelineStore, (state) => state.onOlderRevision)\n  const selectionState = useTimelineSelector(timelineStore, (state) => state.selectionState)\n  const sinceTime = useTimelineSelector(timelineStore, (state) => state.sinceTime)\n  const loading = selectionState === 'loading'\n  const isComparingCurrent = !onOlderRevision\n\n  const documentContext: DocumentChangeContextInstance = React.useMemo(\n    () => ({\n      documentId,\n      schemaType,\n      FieldWrapper: ChangeFieldWrapper,\n      rootDiff: diff,\n      isComparingCurrent,\n      value,\n    }),\n    [documentId, diff, isComparingCurrent, schemaType, value]\n  )\n\n  const changeAnnotations = React.useMemo(\n    () => (diff ? collectLatestAuthorAnnotations(diff) : []),\n    [diff]\n  )\n\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <DocumentInspectorHeader\n        as=\"header\"\n        closeButtonLabel=\"Close review changes\"\n        flex=\"none\"\n        onClose={onClose}\n        title=\"Review changes\"\n      >\n        <Flex gap={1} padding={3} paddingTop={0} paddingBottom={2}>\n          <Box flex={1}>\n            <TimelineMenu mode=\"since\" chunk={sinceTime} placement=\"bottom-start\" />\n          </Box>\n\n          <Box flex=\"none\">\n            <DiffTooltip annotations={changeAnnotations} description=\"Changes by\" portal>\n              <AvatarStack maxLength={4}>\n                {changeAnnotations.map(({author}) => (\n                  <UserAvatar key={author} user={author} />\n                ))}\n              </AvatarStack>\n            </DiffTooltip>\n          </Box>\n        </Flex>\n      </DocumentInspectorHeader>\n\n      <Card flex={1}>\n        <BoundaryElementProvider element={scrollRef.current}>\n          <Scroller data-ui=\"Scroller\" ref={scrollRef}>\n            <Box flex={1} padding={4}>\n              <Content\n                diff={diff}\n                documentContext={documentContext}\n                error={timelineError}\n                loading={loading}\n                schemaType={schemaType}\n              />\n            </Box>\n          </Scroller>\n        </BoundaryElementProvider>\n      </Card>\n    </Flex>\n  )\n}\n\nfunction Content({\n  error,\n  diff,\n  documentContext,\n  loading,\n  schemaType,\n}: {\n  error?: Error | null\n  diff: ObjectDiff<any> | null\n  documentContext: DocumentChangeContextInstance\n  loading: boolean\n  schemaType: ObjectSchemaType\n}) {\n  if (error) {\n    return <NoChanges />\n  }\n\n  if (loading) {\n    return <LoadingContent />\n  }\n\n  if (!diff) {\n    return <NoChanges />\n  }\n\n  return (\n    <DocumentChangeContext.Provider value={documentContext}>\n      <ChangeList diff={diff} schemaType={schemaType} />\n    </DocumentChangeContext.Provider>\n  )\n}\n","import {RestoreIcon} from '@sanity/icons'\nimport {HISTORY_INSPECTOR_NAME} from '../../constants'\nimport {useDeskTool} from '../../../../useDeskTool'\nimport {ChangesInspector} from './ChangesInspector'\nimport {DocumentInspector} from 'sanity'\n\nexport const changesInspector: DocumentInspector = {\n  name: HISTORY_INSPECTOR_NAME,\n  useMenuItem: () => {\n    const {features} = useDeskTool()\n\n    return {\n      hidden: !features.reviewChanges,\n      icon: RestoreIcon,\n      title: 'Review changes',\n    }\n  },\n  component: ChangesInspector,\n  onClose: ({params}) => ({params: {...params, since: undefined}}),\n  onOpen: ({params}) => ({params: {...params, since: '@lastPublished'}}),\n}\n","import {MasterDetailIcon} from '@sanity/icons'\nimport {lazy} from 'react'\nimport {\n  DeleteAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  HistoryRestoreAction,\n  PublishAction,\n  UnpublishAction,\n} from './documentActions'\nimport {LiveEditBadge} from './documentBadges'\nimport {getIntentState} from './getIntentState'\nimport {router} from './router'\nimport {DeskToolOptions} from './types'\nimport {validationInspector} from './panes/document/inspectors/validation'\nimport {changesInspector} from './panes/document/inspectors/changes'\nimport {definePlugin} from 'sanity'\n\nconst documentActions = [\n  PublishAction,\n  UnpublishAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  DeleteAction,\n  HistoryRestoreAction,\n]\n\nconst documentBadges = [LiveEditBadge]\n\n/**\n * @hidden\n * @beta */\nexport const deskTool = definePlugin<DeskToolOptions | void>((options) => ({\n  name: '@sanity/desk-tool',\n  document: {\n    actions: (prevActions) => {\n      // NOTE: since it's possible to have several desk tools in one Studio,\n      // we need to check whether the document actions already exist in the Studio config\n      const actions = prevActions.slice(0)\n      for (const action of documentActions) {\n        if (!actions.includes(action)) actions.push(action)\n      }\n      return actions\n    },\n    badges: (prevBadges) => {\n      // NOTE: since it's possible to have several desk tools in one Studio,\n      // we need to check whether the document badges already exist in the Studio config\n      const badges = prevBadges.slice(0)\n      for (const badge of documentBadges) {\n        if (!badges.includes(badge)) badges.push(badge)\n      }\n      return badges\n    },\n    inspectors: [validationInspector, changesInspector],\n  },\n  tools: [\n    {\n      name: options?.name || 'desk',\n      title: options?.title || 'Desk',\n      icon: options?.icon || MasterDetailIcon,\n      component: lazy(() => import('./components/deskTool')),\n      canHandleIntent: (intent, params) => {\n        return Boolean(\n          (intent === 'edit' && params.id) ||\n            (intent === 'create' && params.type) ||\n            (intent === 'create' && params.template)\n        )\n      },\n      getIntentState,\n      options,\n      router,\n    },\n  ],\n}))\n","import {BinaryDocumentIcon, EarthAmericasIcon} from '@sanity/icons'\nimport {DeskToolFeatures, PaneMenuItem} from '../../types'\nimport {INSPECT_ACTION_PREFIX} from './constants'\nimport {DocumentInspector, DocumentInspectorMenuItem, ValidationMarker} from 'sanity'\n\ninterface GetMenuItemsParams {\n  currentInspector?: DocumentInspector\n  features: DeskToolFeatures\n  hasValue: boolean\n  inspectors: DocumentInspector[]\n  previewUrl?: string | null\n  inspectorMenuItems: DocumentInspectorMenuItem[]\n}\n\nfunction getInspectorItems({\n  currentInspector,\n  hasValue,\n  inspectors,\n  inspectorMenuItems,\n}: GetMenuItemsParams): PaneMenuItem[] {\n  return inspectors\n    .map((inspector, index) => {\n      const menuItem = inspectorMenuItems[index]\n\n      if (!menuItem || menuItem.hidden) return null\n\n      return {\n        action: `${INSPECT_ACTION_PREFIX}${inspector.name}`,\n        group: menuItem.showAsAction ? undefined : 'inspectors',\n        icon: menuItem.icon,\n        isDisabled: !hasValue,\n        selected: currentInspector?.name === inspector.name,\n        shortcut: menuItem.hotkeys?.join('+'),\n        showAsAction: menuItem.showAsAction,\n        title: menuItem.title,\n        tone: menuItem.tone,\n      }\n    })\n    .filter(Boolean) as PaneMenuItem[]\n}\n\nfunction getInspectItem({hasValue}: GetMenuItemsParams): PaneMenuItem {\n  return {\n    action: 'inspect',\n    group: 'inspectors',\n    title: 'Inspect',\n    icon: BinaryDocumentIcon,\n    isDisabled: !hasValue,\n    shortcut: 'Ctrl+Alt+I',\n  }\n}\n\nexport function getProductionPreviewItem({previewUrl}: GetMenuItemsParams): PaneMenuItem | null {\n  if (!previewUrl) return null\n\n  return {\n    action: 'production-preview',\n    group: 'links',\n    title: 'Open preview',\n    icon: EarthAmericasIcon,\n    shortcut: 'Ctrl+Alt+O',\n  }\n}\n\nexport function getMenuItems(params: GetMenuItemsParams): PaneMenuItem[] {\n  const inspectorItems = getInspectorItems(params)\n  const items = [\n    // Get production preview item\n    getProductionPreviewItem(params),\n  ].filter(Boolean) as PaneMenuItem[]\n\n  return [\n    ...inspectorItems,\n\n    // TODO: convert to inspector or document view?\n    getInspectItem(params),\n\n    ...items,\n  ]\n}\n","import {useEffect, useState} from 'react'\nimport {SanityDocument} from '@sanity/types'\nimport {useAsObservable} from 'react-rx'\nimport {debounceTime, switchMap, catchError} from 'rxjs/operators'\nimport {from, of} from 'rxjs'\nimport {useSource, isRecord} from 'sanity'\n\nconst isSanityDocument = (value: unknown): value is SanityDocument =>\n  isRecord(value) && typeof value._id === 'string' && typeof value._type === 'string'\n\nexport function usePreviewUrl(value: Partial<SanityDocument> | undefined): string | undefined {\n  const [previewUrl, setPreviewUrl] = useState<string | undefined>(undefined)\n  const [error, setError] = useState<unknown>(null)\n  const {resolveProductionUrl} = useSource().document\n  // @todo refactor out of useAsObservable, and instead use `of() + useMemoObservable` like we did for `useLoadableFromCreateLoadable`\n  const value$ = useAsObservable(value)\n\n  if (error) throw error\n\n  useEffect(() => {\n    value$\n      .pipe(\n        // this so that the preview URL isn't fetched on every keystroke\n        debounceTime(500),\n        switchMap((document) =>\n          isSanityDocument(document) ? from(resolveProductionUrl({document})) : of(undefined)\n        ),\n        catchError((e) => {\n          const message = isRecord(e) && typeof e.message === 'string' ? e.message : 'Unknown error'\n          throw new Error(`An error was thrown while trying to get your preview url: ${message}`)\n        })\n      )\n      .subscribe({\n        next: setPreviewUrl,\n        error: setError,\n      })\n  }, [resolveProductionUrl, value$])\n\n  return previewUrl\n}\n","import {Template} from 'sanity'\n\ninterface InitialValueOptions {\n  documentType: string\n  panePayload?: unknown\n  templateName?: string\n  templateParams?: Record<string, unknown>\n  urlTemplate?: string\n}\n\n/**\n * @internal\n */\nexport function getInitialValueTemplateOpts(\n  templates: Template[],\n  opts: InitialValueOptions\n): {templateName: string; templateParams: Record<string, unknown>} {\n  const payload = opts.panePayload || {}\n  const structureNodeTemplate = opts.templateName\n\n  if (opts.urlTemplate && structureNodeTemplate && structureNodeTemplate !== opts.urlTemplate) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Conflicting templates: URL says \"${opts.urlTemplate}\", structure node says \"${structureNodeTemplate}\". Using \"${structureNodeTemplate}\".`\n    )\n  }\n\n  const template = structureNodeTemplate || opts.urlTemplate\n  const typeTemplates = templates.filter((t) => t.schemaType === opts.documentType)\n\n  const templateParams = {\n    ...opts.templateParams,\n    ...(typeof payload === 'object' ? payload || {} : {}),\n  }\n\n  let templateName = template\n\n  // If we have not specified a specific template, and we only have a single\n  // template available for a schema type, use it\n  if (!template && typeTemplates.length === 1) {\n    templateName = typeTemplates[0].id\n  }\n\n  return {templateName: templateName!, templateParams}\n}\n","import React, {memo, useCallback, useEffect, useRef, useState} from 'react'\nimport {DocumentInspector, DocumentInspectorMenuItem, useUnique} from 'sanity'\n\ninterface InspectorMenuItemProps {\n  documentId: string\n  documentType: string\n  index: number\n  setMenuItem: (index: number, node: DocumentInspectorMenuItem) => void\n  useMenuItem: NonNullable<DocumentInspector['useMenuItem']>\n}\n\nconst InspectorMenuItem = memo(function InspectorMenuItem(props: InspectorMenuItemProps) {\n  const {documentId, documentType, index, setMenuItem, useMenuItem} = props\n\n  const node = useUnique(\n    useMenuItem({\n      documentId,\n      documentType,\n    })\n  )\n\n  useEffect(() => {\n    setMenuItem(index, node)\n  }, [index, node, setMenuItem])\n\n  return <></>\n})\n\ninterface DocumentInspectorMenuItemsResolverProps {\n  documentId: string\n  documentType: string\n  inspectors: DocumentInspector[]\n  onMenuItems: (items: DocumentInspectorMenuItem[]) => void\n}\n\n// The menu item in a document inspector are resolved in a React hook (`useMenuItem`).\n// This means that the menu item needs to be resolved in a React component (in accordance with the rules of hooks).\n// In this component, we map over the configured inspectors and render a `InspectorMenuItem` for each.\n// The `InspectorMenuItem` will resolve the menu item in a React hook and call the `setMenuItem` callback\n// with the resolved menu item and the index of the inspector.\n// Finally, we call the `onMenuItems` callback with the resolved menu items.\nexport function DocumentInspectorMenuItemsResolver(props: DocumentInspectorMenuItemsResolverProps) {\n  const {documentId, documentType, inspectors, onMenuItems} = props\n\n  const len = inspectors.length\n  const lenRef = useRef(len)\n\n  const [menuItems, setMenuItems] = useState<DocumentInspectorMenuItem[]>(() =>\n    Array.from(new Array(len))\n  )\n\n  const menuItemsRef = useRef(menuItems)\n\n  useEffect(() => {\n    if (lenRef.current !== len) {\n      const newFieldActions = Array.from(new Array(len))\n\n      for (let i = 0; i < len; i++) {\n        newFieldActions[i] = menuItemsRef.current[i]\n      }\n\n      lenRef.current = len\n\n      setMenuItems(() => {\n        menuItemsRef.current = newFieldActions\n        return newFieldActions\n      })\n    }\n  }, [len])\n\n  const setMenuItem = useCallback((index: number, node: DocumentInspectorMenuItem) => {\n    setMenuItems((prev) => {\n      const next = [...prev]\n      next[index] = node\n      menuItemsRef.current = next\n      return next\n    })\n  }, [])\n\n  useEffect(() => {\n    onMenuItems(menuItems.filter(Boolean))\n  }, [menuItems, onMenuItems])\n\n  return (\n    <>\n      {inspectors.map(\n        (inspector, inspectorIndex) =>\n          inspector.useMenuItem && (\n            <InspectorMenuItem\n              documentId={documentId}\n              documentType={documentType}\n              index={inspectorIndex}\n              key={inspector.name}\n              setMenuItem={setMenuItem}\n              useMenuItem={inspector.useMenuItem}\n            />\n          )\n      )}\n    </>\n  )\n}\n","import React, {memo, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {ObjectSchemaType, Path, SanityDocument, SanityDocumentLike} from '@sanity/types'\nimport {omit, set} from 'lodash'\nimport {useToast} from '@sanity/ui'\nimport {fromString as pathFromString, resolveKeyedPath} from '@sanity/util/paths'\nimport isHotkey from 'is-hotkey'\nimport {isActionEnabled} from '@sanity/schema/_internal'\nimport {usePaneRouter} from '../../components'\nimport {PaneMenuItem} from '../../types'\nimport {useDeskTool} from '../../useDeskTool'\nimport {DocumentPaneContext, DocumentPaneContextValue} from './DocumentPaneContext'\nimport {getMenuItems} from './menuItems'\nimport {DocumentPaneProviderProps} from './types'\nimport {usePreviewUrl} from './usePreviewUrl'\nimport {getInitialValueTemplateOpts} from './getInitialValueTemplateOpts'\nimport {\n  DEFAULT_MENU_ITEM_GROUPS,\n  EMPTY_PARAMS,\n  HISTORY_INSPECTOR_NAME,\n  INSPECT_ACTION_PREFIX,\n} from './constants'\nimport {DocumentInspectorMenuItemsResolver} from './DocumentInspectorMenuItemsResolver'\nimport {\n  DocumentInspector,\n  DocumentPresence,\n  PatchEvent,\n  StateTree,\n  toMutationPatches,\n  getExpandOperations,\n  getPublishedId,\n  setAtPath,\n  useConnectionState,\n  useDocumentOperation,\n  useEditState,\n  useFormState,\n  useInitialValue,\n  usePresenceStore,\n  useSchema,\n  useSource,\n  useTemplates,\n  useUnique,\n  useValidationStatus,\n  getDraftId,\n  useDocumentValuePermissions,\n  useTimelineStore,\n  useTimelineSelector,\n  DocumentFieldAction,\n  DocumentInspectorMenuItem,\n  FieldActionsResolver,\n  EMPTY_ARRAY,\n  DocumentFieldActionNode,\n  FieldActionsProvider,\n} from 'sanity'\n\n/**\n * @internal\n */\n// eslint-disable-next-line complexity, max-statements\nexport const DocumentPaneProvider = memo((props: DocumentPaneProviderProps) => {\n  const {children, index, pane, paneKey} = props\n  const schema = useSchema()\n  const templates = useTemplates()\n  const {\n    actions: documentActions,\n    badges: documentBadges,\n    unstable_fieldActions: fieldActionsResolver,\n    unstable_languageFilter: languageFilterResolver,\n    inspectors: inspectorsResolver,\n  } = useSource().document\n  const presenceStore = usePresenceStore()\n  const paneRouter = usePaneRouter()\n  const setPaneParams = paneRouter.setParams\n  const {features} = useDeskTool()\n  const {push: pushToast} = useToast()\n  const {\n    options,\n    menuItemGroups = DEFAULT_MENU_ITEM_GROUPS,\n    title = null,\n    views: viewsProp = [],\n  } = pane\n  const paneOptions = useUnique(options)\n  const documentIdRaw = paneOptions.id\n  const documentId = getPublishedId(documentIdRaw)\n  const documentType = options.type\n  const params = useUnique(paneRouter.params) || EMPTY_PARAMS\n  const panePayload = useUnique(paneRouter.payload)\n  const {templateName, templateParams} = useMemo(\n    () =>\n      getInitialValueTemplateOpts(templates, {\n        documentType,\n        templateName: paneOptions.template,\n        templateParams: paneOptions.templateParameters,\n        panePayload,\n        urlTemplate: params.template,\n      }),\n    [documentType, paneOptions, params, panePayload, templates]\n  )\n  const initialValueRaw = useInitialValue({\n    documentId,\n    documentType,\n    templateName,\n    templateParams,\n  })\n  const initialValue = useUnique(initialValueRaw)\n  const {patch} = useDocumentOperation(documentId, documentType)\n  const editState = useEditState(documentId, documentType)\n  const {validation: validationRaw} = useValidationStatus(documentId, documentType)\n  const connectionState = useConnectionState(documentId, documentType)\n  const schemaType = schema.get(documentType) as ObjectSchemaType | undefined\n  const value: SanityDocumentLike = editState?.draft || editState?.published || initialValue.value\n\n  const [inspectorMenuItems, setInspectorMenuItems] = useState<DocumentInspectorMenuItem[]>([])\n\n  // Resolve document actions\n  const actions = useMemo(\n    () => documentActions({schemaType: documentType, documentId}),\n    [documentActions, documentId, documentType]\n  )\n\n  // Resolve document badges\n  const badges = useMemo(\n    () => documentBadges({schemaType: documentType, documentId}),\n    [documentBadges, documentId, documentType]\n  )\n\n  // Resolve document language filter\n  const languageFilter = useMemo(\n    () => languageFilterResolver({schemaType: documentType, documentId}),\n    [documentId, documentType, languageFilterResolver]\n  )\n\n  const validation = useUnique(validationRaw)\n  const views = useUnique(viewsProp)\n\n  const [focusPath, setFocusPath] = useState<Path>(() =>\n    params.path ? pathFromString(params.path) : []\n  )\n  const activeViewId = params.view || (views[0] && views[0].id) || null\n  const [timelineMode, setTimelineMode] = useState<'since' | 'rev' | 'closed'>('closed')\n\n  const [timelineError, setTimelineError] = useState<Error | null>(null)\n  /**\n   * Create an intermediate store which handles document Timeline + TimelineController\n   * creation, and also fetches pre-requsite document snapshots. Compatible with `useSyncExternalStore`\n   * and made available to child components via DocumentPaneContext.\n   */\n  const timelineStore = useTimelineStore({\n    documentId,\n    documentType,\n    onError: setTimelineError,\n    rev: params.rev,\n    since: params.since,\n  })\n\n  // Subscribe to external timeline state changes\n  const onOlderRevision = useTimelineSelector(timelineStore, (state) => state.onOlderRevision)\n  const revTime = useTimelineSelector(timelineStore, (state) => state.revTime)\n  const sinceAttributes = useTimelineSelector(timelineStore, (state) => state.sinceAttributes)\n  const timelineDisplayed = useTimelineSelector(timelineStore, (state) => state.timelineDisplayed)\n  const timelineReady = useTimelineSelector(timelineStore, (state) => state.timelineReady)\n\n  // TODO: this may cause a lot of churn. May be a good idea to prevent these\n  // requests unless the menu is open somehow\n  const previewUrl = usePreviewUrl(value)\n\n  const [presence, setPresence] = useState<DocumentPresence[]>([])\n  useEffect(() => {\n    const subscription = presenceStore.documentPresence(documentId).subscribe((nextPresence) => {\n      setPresence(nextPresence)\n    })\n    return () => {\n      subscription.unsubscribe()\n    }\n  }, [documentId, presenceStore])\n\n  const inspectors: DocumentInspector[] = useMemo(\n    () => inspectorsResolver({documentId, documentType}),\n    [documentId, documentType, inspectorsResolver]\n  )\n\n  const [inspectorName, setInspectorName] = useState<string | null>(() => params.inspect || null)\n\n  // Handle inspector name changes from URL\n  const inspectParamRef = useRef<string | undefined>(params.inspect)\n  useEffect(() => {\n    if (inspectParamRef.current !== params.inspect) {\n      inspectParamRef.current = params.inspect\n      setInspectorName(params.inspect || null)\n    }\n  }, [params.inspect])\n\n  const currentInspector = inspectors?.find((i) => i.name === inspectorName)\n  const resolvedChangesInspector = inspectors.find((i) => i.name === HISTORY_INSPECTOR_NAME)\n\n  const changesOpen = currentInspector?.name === HISTORY_INSPECTOR_NAME\n\n  const hasValue = Boolean(value)\n  const menuItems = useMemo(\n    () =>\n      getMenuItems({\n        currentInspector,\n        features,\n        hasValue,\n        inspectorMenuItems,\n        inspectors,\n        previewUrl,\n      }),\n    [currentInspector, features, hasValue, inspectorMenuItems, inspectors, previewUrl]\n  )\n  const inspectOpen = params.inspect === 'on'\n  const compareValue: Partial<SanityDocument> | null = changesOpen\n    ? sinceAttributes\n    : editState?.published || null\n\n  const fieldActions: DocumentFieldAction[] = useMemo(\n    () => (schemaType ? fieldActionsResolver({documentId, documentType, schemaType}) : []),\n    [documentId, documentType, fieldActionsResolver, schemaType]\n  )\n\n  /**\n   * Note that in addition to connection and edit state, we also wait for a valid document timeline\n   * range to be loaded. This means if we're loading an older revision, the full transaction range must\n   * be loaded in full prior to the document being displayed.\n   *\n   * Previously, visiting studio URLs with timeline params would display the 'current' document and then\n   * 'snap' in the older revision, which was disorienting and could happen mid-edit.\n   *\n   * In the event that the timeline cannot be loaded due to TimelineController errors or blocked requests,\n   * we skip this readiness check to ensure that users aren't locked out of editing. Trying to select\n   * a timeline revision in this instance will display an error localized to the popover itself.\n   */\n  const ready =\n    connectionState === 'connected' && editState.ready && (timelineReady || !!timelineError)\n\n  const displayed: Partial<SanityDocument> | undefined = useMemo(\n    () => (onOlderRevision ? timelineDisplayed || {_id: value._id, _type: value._type} : value),\n    [onOlderRevision, timelineDisplayed, value]\n  )\n\n  const setTimelineRange = useCallback(\n    (newSince: string, newRev: string | null) => {\n      setPaneParams({\n        ...params,\n        since: newSince,\n        rev: newRev || undefined,\n      })\n    },\n    [params, setPaneParams]\n  )\n\n  const handleFocus = useCallback(\n    (nextFocusPath: Path) => {\n      setFocusPath(nextFocusPath)\n      presenceStore.setLocation([\n        {\n          type: 'document',\n          documentId,\n          path: nextFocusPath,\n          lastActiveAt: new Date().toISOString(),\n        },\n      ])\n    },\n    [documentId, presenceStore, setFocusPath]\n  )\n\n  const handleBlur = useCallback(\n    (blurredPath: Path) => {\n      setFocusPath([])\n      // note: we're deliberately not syncing presence here since it would make the user avatar disappear when a\n      // user clicks outside a field without focusing another one\n    },\n    [setFocusPath]\n  )\n\n  const patchRef = useRef<(event: PatchEvent) => void>(() => {\n    throw new Error('Nope')\n  })\n\n  patchRef.current = (event: PatchEvent) => {\n    patch.execute(toMutationPatches(event.patches), initialValue.value)\n  }\n\n  const handleChange = useCallback((event: PatchEvent) => patchRef.current(event), [])\n\n  const closeInspector = useCallback(\n    (closeInspectorName?: string) => {\n      // inspector?: DocumentInspector\n      const inspector = closeInspectorName && inspectors.find((i) => i.name === closeInspectorName)\n\n      if (closeInspectorName && !inspector) {\n        console.warn(`No inspector named \"${closeInspectorName}\"`)\n        return\n      }\n\n      if (!currentInspector) {\n        return\n      }\n\n      if (inspector) {\n        const result = inspector.onClose?.({params}) ?? {params}\n\n        setInspectorName(null)\n        inspectParamRef.current = undefined\n\n        setPaneParams({...result.params, inspect: undefined})\n\n        return\n      }\n\n      if (currentInspector) {\n        const result = currentInspector.onClose?.({params}) ?? {params}\n\n        setInspectorName(null)\n        inspectParamRef.current = undefined\n\n        setPaneParams({...result.params, inspect: undefined})\n      }\n    },\n    [currentInspector, inspectors, params, setPaneParams]\n  )\n\n  const openInspector = useCallback(\n    (nextInspectorName: string, paneParams?: Record<string, string>) => {\n      const nextInspector = inspectors.find((i) => i.name === nextInspectorName)\n\n      if (!nextInspector) {\n        console.warn(`No inspector named \"${nextInspectorName}\"`)\n        return\n      }\n\n      // if the inspector is already open, only update params\n      if (currentInspector?.name === nextInspector.name) {\n        setPaneParams({...params, ...paneParams, inspect: nextInspector.name})\n        return\n      }\n\n      let currentParams = params\n\n      if (currentInspector) {\n        const closeResult = nextInspector.onClose?.({params: currentParams}) ?? {\n          params: currentParams,\n        }\n\n        currentParams = closeResult.params\n      }\n\n      const result = nextInspector.onOpen?.({params: currentParams}) ?? {params: currentParams}\n\n      setInspectorName(nextInspector.name)\n      inspectParamRef.current = nextInspector.name\n\n      setPaneParams({...result.params, ...paneParams, inspect: nextInspector.name})\n    },\n    [currentInspector, inspectors, params, setPaneParams]\n  )\n\n  const handleHistoryClose = useCallback(() => {\n    if (resolvedChangesInspector) {\n      closeInspector(resolvedChangesInspector.name)\n    }\n  }, [closeInspector, resolvedChangesInspector])\n\n  const handleHistoryOpen = useCallback(() => {\n    if (!features.reviewChanges) {\n      return\n    }\n\n    if (resolvedChangesInspector) {\n      openInspector(resolvedChangesInspector.name)\n    }\n  }, [features.reviewChanges, openInspector, resolvedChangesInspector])\n\n  const handlePaneClose = useCallback(() => paneRouter.closeCurrent(), [paneRouter])\n\n  const handlePaneSplit = useCallback(() => paneRouter.duplicateCurrent(), [paneRouter])\n\n  const toggleLegacyInspect = useCallback(\n    (toggle = !inspectOpen) => {\n      if (toggle) {\n        setPaneParams({...params, inspect: 'on'})\n      } else {\n        setPaneParams(omit(params, 'inspect'))\n      }\n    },\n    [inspectOpen, params, setPaneParams]\n  )\n\n  const handleMenuAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (item.action === 'production-preview' && previewUrl) {\n        window.open(previewUrl)\n        return true\n      }\n\n      if (item.action === 'inspect') {\n        toggleLegacyInspect(true)\n        return true\n      }\n\n      if (item.action === 'reviewChanges') {\n        handleHistoryOpen()\n        return true\n      }\n\n      if (typeof item.action === 'string' && item.action.startsWith(INSPECT_ACTION_PREFIX)) {\n        const nextInspectorName = item.action.slice(INSPECT_ACTION_PREFIX.length)\n        const nextInspector = inspectors.find((i) => i.name === nextInspectorName)\n\n        if (nextInspector) {\n          if (nextInspector.name === inspectorName) {\n            closeInspector(nextInspector.name)\n          } else {\n            openInspector(nextInspector.name)\n          }\n          return true\n        }\n      }\n\n      return false\n    },\n    [\n      closeInspector,\n      handleHistoryOpen,\n      inspectorName,\n      inspectors,\n      openInspector,\n      previewUrl,\n      toggleLegacyInspect,\n    ]\n  )\n\n  const handleKeyUp = useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      for (const item of menuItems) {\n        if (item.shortcut) {\n          if (isHotkey(item.shortcut, event)) {\n            event.preventDefault()\n            event.stopPropagation()\n            handleMenuAction(item)\n            return\n          }\n        }\n      }\n    },\n    [handleMenuAction, menuItems]\n  )\n\n  const handleLegacyInspectClose = useCallback(\n    () => toggleLegacyInspect(false),\n    [toggleLegacyInspect]\n  )\n\n  const [openPath, onSetOpenPath] = useState<Path>([])\n  const [fieldGroupState, onSetFieldGroupState] = useState<StateTree<string>>()\n  const [collapsedPaths, onSetCollapsedPath] = useState<StateTree<boolean>>()\n  const [collapsedFieldSets, onSetCollapsedFieldSets] = useState<StateTree<boolean>>()\n\n  const handleOnSetCollapsedPath = useCallback((path: Path, collapsed: boolean) => {\n    onSetCollapsedPath((prevState) => setAtPath(prevState, path, collapsed))\n  }, [])\n\n  const handleOnSetCollapsedFieldSet = useCallback((path: Path, collapsed: boolean) => {\n    onSetCollapsedFieldSets((prevState) => setAtPath(prevState, path, collapsed))\n  }, [])\n\n  const handleSetActiveFieldGroup = useCallback(\n    (path: Path, groupName: string) =>\n      onSetFieldGroupState((prevState) => setAtPath(prevState, path, groupName)),\n    []\n  )\n\n  const requiredPermission = value._createdAt ? 'update' : 'create'\n  const liveEdit = Boolean(schemaType?.liveEdit)\n  const docId = value._id ? value._id : 'dummy-id'\n  const docPermissionsInput = useMemo(() => {\n    return {\n      ...value,\n      _id: liveEdit ? getPublishedId(docId) : getDraftId(docId),\n    }\n  }, [liveEdit, value, docId])\n\n  const [permissions, isPermissionsLoading] = useDocumentValuePermissions({\n    document: docPermissionsInput,\n    permission: requiredPermission,\n  })\n\n  const isNonExistent = !value?._id\n\n  const readOnly = useMemo(() => {\n    const hasNoPermission = !isPermissionsLoading && !permissions?.granted\n    const updateActionDisabled = !isActionEnabled(schemaType!, 'update')\n    const createActionDisabled = isNonExistent && !isActionEnabled(schemaType!, 'create')\n    const reconnecting = connectionState === 'reconnecting'\n    const isLocked = editState.transactionSyncLock?.enabled\n\n    return (\n      !ready ||\n      revTime !== null ||\n      hasNoPermission ||\n      updateActionDisabled ||\n      createActionDisabled ||\n      reconnecting ||\n      isLocked\n    )\n  }, [\n    connectionState,\n    isNonExistent,\n    isPermissionsLoading,\n    permissions?.granted,\n    ready,\n    revTime,\n    schemaType,\n    editState.transactionSyncLock,\n  ])\n\n  const formState = useFormState(schemaType!, {\n    value: displayed,\n    readOnly,\n    comparisonValue: compareValue,\n    focusPath,\n    openPath,\n    collapsedPaths,\n    presence,\n    validation,\n    collapsedFieldSets,\n    fieldGroupState,\n    changesOpen,\n  })\n\n  const formStateRef = useRef(formState)\n  formStateRef.current = formState\n\n  const setOpenPath = useCallback(\n    (path: Path) => {\n      const ops = getExpandOperations(formStateRef.current!, path)\n      ops.forEach((op) => {\n        if (op.type === 'expandPath') {\n          onSetCollapsedPath((prevState) => setAtPath(prevState, op.path, false))\n        }\n        if (op.type === 'expandFieldSet') {\n          onSetCollapsedFieldSets((prevState) => setAtPath(prevState, op.path, false))\n        }\n        if (op.type === 'setSelectedGroup') {\n          onSetFieldGroupState((prevState) => setAtPath(prevState, op.path, op.groupName))\n        }\n      })\n      onSetOpenPath(path)\n    },\n    [formStateRef]\n  )\n\n  const documentPane: DocumentPaneContextValue = {\n    actions,\n    activeViewId,\n    badges,\n    changesOpen,\n    closeInspector,\n    collapsedFieldSets,\n    collapsedPaths,\n    compareValue,\n    connectionState,\n    displayed,\n    documentId,\n    documentIdRaw,\n    documentType,\n    editState,\n    fieldActions,\n    focusPath,\n    inspector: currentInspector || null,\n    inspectors,\n    menuItems,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    onFocus: handleFocus,\n    onPathOpen: setOpenPath,\n    onHistoryClose: handleHistoryClose,\n    onHistoryOpen: handleHistoryOpen,\n    onInspectClose: handleLegacyInspectClose,\n    onKeyUp: handleKeyUp,\n    onMenuAction: handleMenuAction,\n    onPaneClose: handlePaneClose,\n    onPaneSplit: handlePaneSplit,\n    onSetActiveFieldGroup: handleSetActiveFieldGroup,\n    onSetCollapsedPath: handleOnSetCollapsedPath,\n    onSetCollapsedFieldSet: handleOnSetCollapsedFieldSet,\n    openInspector,\n    index,\n    inspectOpen,\n    validation,\n    menuItemGroups: menuItemGroups || [],\n    paneKey,\n    previewUrl,\n    ready,\n    schemaType: schemaType!,\n    isPermissionsLoading,\n    permissions,\n    setTimelineMode,\n    setTimelineRange,\n    timelineError,\n    timelineMode,\n    timelineStore,\n    title,\n    value,\n    views,\n    formState,\n    unstable_languageFilter: languageFilter,\n  }\n\n  useEffect(() => {\n    if (connectionState === 'reconnecting') {\n      pushToast({\n        id: 'sanity/desk/reconnecting',\n        status: 'warning',\n        title: <>Connection lost. Reconnecting…</>,\n      })\n    }\n  }, [connectionState, pushToast])\n\n  // Reset `focusPath` when `documentId` or `params.path` changes\n  useEffect(() => {\n    if (ready && params.path) {\n      const {path, ...restParams} = params\n      const pathFromUrl = resolveKeyedPath(formStateRef.current?.value, pathFromString(path))\n      // Reset focus path when url params path changes\n      setFocusPath(pathFromUrl)\n      setOpenPath(pathFromUrl)\n      // remove the `path`-param from url after we have consumed it as the initial focus path\n      paneRouter.setParams(restParams)\n    }\n  }, [params, documentId, setOpenPath, ready, paneRouter])\n\n  const [rootFieldActionNodes, setRootFieldActionNodes] = useState<DocumentFieldActionNode[]>([])\n\n  return (\n    <DocumentPaneContext.Provider value={documentPane}>\n      {inspectors.length > 0 && (\n        <DocumentInspectorMenuItemsResolver\n          documentId={documentId}\n          documentType={documentType}\n          inspectors={inspectors}\n          onMenuItems={setInspectorMenuItems}\n        />\n      )}\n\n      {/* Resolve root-level field actions */}\n      {fieldActions.length > 0 && schemaType && (\n        <FieldActionsResolver\n          actions={fieldActions}\n          documentId={documentId}\n          documentType={documentType}\n          onActions={setRootFieldActionNodes}\n          path={EMPTY_ARRAY}\n          schemaType={schemaType}\n        />\n      )}\n\n      <FieldActionsProvider actions={rootFieldActionNodes} path={EMPTY_ARRAY}>\n        {children}\n      </FieldActionsProvider>\n    </DocumentPaneContext.Provider>\n  )\n})\n\nDocumentPaneProvider.displayName = 'DocumentPaneProvider'\n","import {SerializePath} from './StructureNodes'\n\n/** @internal */\nexport class SerializeError extends Error {\n  public readonly path: SerializePath\n  public helpId?: HELP_URL\n\n  constructor(\n    message: string,\n    parentPath: SerializePath,\n    pathSegment: string | number | undefined,\n    hint?: string\n  ) {\n    super(message)\n    const segment = typeof pathSegment === 'undefined' ? '<unknown>' : `${pathSegment}`\n    this.path = (parentPath || []).concat(hint ? `${segment} (${hint})` : segment)\n  }\n\n  withHelpUrl(id: HELP_URL): SerializeError {\n    this.helpId = id\n    return this\n  }\n}\n\n/** @internal */\nexport enum HELP_URL {\n  ID_REQUIRED = 'structure-node-id-required',\n  TITLE_REQUIRED = 'structure-title-required',\n  FILTER_REQUIRED = 'structure-filter-required',\n  INVALID_LIST_ITEM = 'structure-invalid-list-item',\n  COMPONENT_REQUIRED = 'structure-view-component-required',\n  DOCUMENT_ID_REQUIRED = 'structure-document-id-required',\n  DOCUMENT_TYPE_REQUIRED = 'structure-document-type-required',\n  SCHEMA_TYPE_REQUIRED = 'structure-schema-type-required',\n  SCHEMA_TYPE_NOT_FOUND = 'structure-schema-type-not-found',\n  LIST_ITEMS_MUST_BE_ARRAY = 'structure-list-items-must-be-array',\n  QUERY_PROVIDED_FOR_FILTER = 'structure-query-provided-for-filter',\n  ACTION_OR_INTENT_REQUIRED = 'structure-action-or-intent-required',\n  LIST_ITEM_IDS_MUST_BE_UNIQUE = 'structure-list-item-ids-must-be-unique',\n  ACTION_AND_INTENT_MUTUALLY_EXCLUSIVE = 'structure-action-and-intent-mutually-exclusive',\n}\n","import {SchemaType, SortOrderingItem} from '@sanity/types'\n\nconst IMPLICIT_FIELDS = ['_id', '_type', '_createdAt', '_updatedAt', '_rev']\n\n// Takes a path array and a schema type and builds a GROQ join every time it enters a reference field\nfunction joinReferences(schemaType: SchemaType, path: string[]): string {\n  const [head, ...tail] = path\n\n  if (!('fields' in schemaType)) {\n    return ''\n  }\n\n  const schemaField = schemaType.fields.find((field) => field.name === head)\n  if (!schemaField) {\n    if (!IMPLICIT_FIELDS.includes(head)) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'The current ordering config targeted the nonexistent field \"%s\" on schema type \"%s\". It should be one of %o',\n        head,\n        schemaType.name,\n        schemaType.fields.map((field) => field.name)\n      )\n    }\n    return ''\n  }\n\n  if ('to' in schemaField.type && schemaField.type.name === 'reference') {\n    const refTypes = schemaField.type.to\n    return `${head}->{${refTypes.map((refType) => joinReferences(refType, tail)).join(',')}}`\n  }\n\n  const tailFields = tail.length > 0 && joinReferences(schemaField.type, tail)\n  const tailWrapper = tailFields ? `{${tailFields}}` : ''\n  return tail.length > 0 ? `${head}${tailWrapper}` : head\n}\n\nexport function getExtendedProjection(schemaType: SchemaType, orderBy: SortOrderingItem[]): string {\n  return orderBy.map((ordering) => joinReferences(schemaType, ordering.field.split('.'))).join(', ')\n}\n","import {SortOrdering} from '@sanity/types'\n\nexport const ORDER_BY_UPDATED_AT: SortOrdering = {\n  title: 'Last edited',\n  name: 'lastEditedDesc',\n  by: [{field: '_updatedAt', direction: 'desc'}],\n}\n\nexport const ORDER_BY_CREATED_AT: SortOrdering = {\n  title: 'Created',\n  name: 'lastCreatedDesc',\n  by: [{field: '_createdAt', direction: 'desc'}],\n}\n\nexport const DEFAULT_SELECTED_ORDERING_OPTION = ORDER_BY_UPDATED_AT\n\nexport const DEFAULT_ORDERING_OPTIONS: SortOrdering[] = [\n  ORDER_BY_UPDATED_AT, // _updatedAt\n  ORDER_BY_CREATED_AT, // _createdAt\n]\n","import {SchemaType, SortOrdering, SortOrderingItem} from '@sanity/types'\nimport {SortIcon} from '@sanity/icons'\nimport {getExtendedProjection} from './util/getExtendedProjection'\nimport {Intent} from './Intent'\nimport {DEFAULT_ORDERING_OPTIONS} from './Sort'\nimport {SerializeOptions, Serializable, SerializePath} from './StructureNodes'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {StructureContext} from './types'\n\n/** @internal */\nexport function maybeSerializeMenuItem(\n  item: MenuItem | MenuItemBuilder,\n  index: number,\n  path: SerializePath\n): MenuItem {\n  return item instanceof MenuItemBuilder ? item.serialize({path, index}) : item\n}\n\n/**\n * @hidden\n * @beta */\nexport type MenuItemActionType =\n  | string\n  | ((params: Record<string, string> | undefined, scope?: any) => void)\n\n/**\n * @hidden\n * @beta */\nexport type MenuItemParamsType = Record<string, string | unknown | undefined>\n\n/**\n * @hidden\n * @beta */\nexport interface MenuItem {\n  title: string\n  action?: MenuItemActionType\n  intent?: Intent\n  group?: string\n  // TODO: align these with TemplateResponse['icon']\n  icon?: React.ComponentType | React.ReactNode\n  params?: MenuItemParamsType\n  showAsAction?: boolean\n}\n\n/**\n * @hidden\n * @beta */\nexport type PartialMenuItem = Partial<MenuItem>\n\n/**\n * @hidden\n * @beta */\nexport class MenuItemBuilder implements Serializable<MenuItem> {\n  protected spec: PartialMenuItem\n\n  constructor(protected _context: StructureContext, spec?: MenuItem) {\n    this.spec = spec ? spec : {}\n  }\n\n  action(action: MenuItemActionType): MenuItemBuilder {\n    return this.clone({action})\n  }\n\n  getAction(): PartialMenuItem['action'] {\n    return this.spec.action\n  }\n\n  intent(intent: Intent): MenuItemBuilder {\n    return this.clone({intent})\n  }\n\n  getIntent(): PartialMenuItem['intent'] {\n    return this.spec.intent\n  }\n\n  title(title: string): MenuItemBuilder {\n    return this.clone({title})\n  }\n\n  getTitle(): string | undefined {\n    return this.spec.title\n  }\n\n  group(group: string): MenuItemBuilder {\n    return this.clone({group})\n  }\n\n  getGroup(): PartialMenuItem['group'] {\n    return this.spec.group\n  }\n\n  icon(icon: React.ComponentType | React.ReactNode): MenuItemBuilder {\n    return this.clone({icon})\n  }\n\n  getIcon(): PartialMenuItem['icon'] {\n    return this.spec.icon\n  }\n\n  params(params: MenuItemParamsType): MenuItemBuilder {\n    return this.clone({params})\n  }\n\n  getParams(): PartialMenuItem['params'] {\n    return this.spec.params\n  }\n\n  showAsAction(showAsAction = true): MenuItemBuilder {\n    return this.clone({showAsAction: Boolean(showAsAction)})\n  }\n\n  getShowAsAction(): PartialMenuItem['showAsAction'] {\n    return this.spec.showAsAction\n  }\n\n  serialize(options: SerializeOptions = {path: []}): MenuItem {\n    const {title, action, intent} = this.spec\n    if (!title) {\n      const hint = typeof action === 'string' ? `action: \"${action}\"` : undefined\n      throw new SerializeError(\n        '`title` is required for menu item',\n        options.path,\n        options.index,\n        hint\n      ).withHelpUrl(HELP_URL.TITLE_REQUIRED)\n    }\n\n    if (!action && !intent) {\n      throw new SerializeError(\n        `\\`action\\` or \\`intent\\` required for menu item with title ${this.spec.title}`,\n        options.path,\n        options.index,\n        `\"${title}\"`\n      ).withHelpUrl(HELP_URL.ACTION_OR_INTENT_REQUIRED)\n    }\n\n    if (intent && action) {\n      throw new SerializeError(\n        'cannot set both `action` AND `intent`',\n        options.path,\n        options.index,\n        `\"${title}\"`\n      ).withHelpUrl(HELP_URL.ACTION_AND_INTENT_MUTUALLY_EXCLUSIVE)\n    }\n\n    return {...this.spec, title}\n  }\n\n  clone(withSpec?: PartialMenuItem): MenuItemBuilder {\n    const builder = new MenuItemBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n\n/** @internal */\nexport interface SortMenuItem extends MenuItem {\n  params: {\n    by: SortOrderingItem[]\n  }\n}\n\n/** @internal */\nexport function getOrderingMenuItem(\n  context: StructureContext,\n  ordering: SortOrdering,\n  extendedProjection?: string\n): MenuItemBuilder {\n  return new MenuItemBuilder(context)\n    .group('sorting')\n    .title(`Sort by ${ordering.title}`)\n    .icon(SortIcon)\n    .action('setSortOrder')\n    .params({by: ordering.by, extendedProjection})\n}\n\n/** @internal */\nexport function getOrderingMenuItemsForSchemaType(\n  context: StructureContext,\n  typeName: SchemaType | string\n): MenuItemBuilder[] {\n  const {schema} = context\n  const type = typeof typeName === 'string' ? schema.get(typeName) : typeName\n  if (!type || !('orderings' in type)) {\n    return []\n  }\n\n  return (\n    type.orderings ? type.orderings.concat(DEFAULT_ORDERING_OPTIONS) : DEFAULT_ORDERING_OPTIONS\n  ).map((ordering: SortOrdering) =>\n    getOrderingMenuItem(context, ordering, getExtendedProjection(type, ordering.by))\n  )\n}\n","import {SerializeOptions, Serializable, SerializePath} from './StructureNodes'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {StructureContext} from './types'\n\n/** @internal */\nexport function maybeSerializeMenuItemGroup(\n  item: MenuItemGroup | MenuItemGroupBuilder,\n  index: number,\n  path: SerializePath\n): MenuItemGroup {\n  return item instanceof MenuItemGroupBuilder ? item.serialize({path, index}) : item\n}\n\n/**\n * @hidden\n * @beta */\nexport interface MenuItemGroup {\n  id: string\n  title: string\n}\n\n/**\n * @hidden\n * @beta */\nexport class MenuItemGroupBuilder implements Serializable<MenuItemGroup> {\n  protected _id: string\n  protected _title: string\n\n  constructor(protected _context: StructureContext, spec?: MenuItemGroup) {\n    this._id = spec ? spec.id : ''\n    this._title = spec ? spec.title : ''\n  }\n\n  id(id: string): MenuItemGroupBuilder {\n    return new MenuItemGroupBuilder(this._context, {id, title: this._title})\n  }\n\n  getId(): string {\n    return this._id\n  }\n\n  title(title: string): MenuItemGroupBuilder {\n    return new MenuItemGroupBuilder(this._context, {id: this._id, title})\n  }\n\n  getTitle(): string {\n    return this._title\n  }\n\n  serialize(options: SerializeOptions = {path: []}): MenuItemGroup {\n    const {_id, _title} = this\n    if (!_id) {\n      throw new SerializeError(\n        '`id` is required for a menu item group',\n        options.path,\n        options.index,\n        _title\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!_title) {\n      throw new SerializeError(\n        '`title` is required for a menu item group',\n        options.path,\n        _id\n      ).withHelpUrl(HELP_URL.TITLE_REQUIRED)\n    }\n\n    return {\n      id: _id,\n      title: _title,\n    }\n  }\n}\n","import {SerializeError} from '../SerializeError'\nimport {SerializePath} from '../StructureNodes'\n\nexport const disallowedPattern = /([^A-Za-z0-9-_.])/\n\nexport function validateId(\n  id: string,\n  parentPath: SerializePath,\n  pathSegment: string | number | undefined\n): string {\n  if (typeof id !== 'string') {\n    throw new SerializeError(\n      `Structure node id must be of type string, got ${typeof id}`,\n      parentPath,\n      pathSegment\n    )\n  }\n\n  const [disallowedChar] = id.match(disallowedPattern) || []\n  if (disallowedChar) {\n    throw new SerializeError(\n      `Structure node id cannot contain character \"${disallowedChar}\"`,\n      parentPath,\n      pathSegment\n    )\n  }\n\n  if (id.startsWith('__edit__')) {\n    throw new SerializeError(\n      `Structure node id cannot start with __edit__`,\n      parentPath,\n      pathSegment\n    )\n  }\n\n  return id\n}\n","import {camelCase} from 'lodash'\nimport getSlug from 'speakingurl'\nimport {disallowedPattern} from './validateId'\n\nexport function getStructureNodeId(title: string, id?: string): string {\n  if (id) {\n    return id\n  }\n\n  const camelCased = camelCase(title)\n\n  return disallowedPattern.test(camelCased) ? camelCase(getSlug(title)) : camelCased\n}\n","import {SerializeOptions, StructureNode, Serializable, Child} from './StructureNodes'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {MenuItem, MenuItemBuilder, maybeSerializeMenuItem} from './MenuItem'\nimport {MenuItemGroup, MenuItemGroupBuilder, maybeSerializeMenuItemGroup} from './MenuItemGroup'\nimport {validateId} from './util/validateId'\nimport {UserComponent} from './types'\nimport {getStructureNodeId} from './util/getStructureNodeId'\n\n/**\n * @hidden\n * @beta */\n// TODO: rename to `StructureComponent` since it clashes with React?\nexport interface Component extends StructureNode {\n  component: UserComponent\n  child?: Child\n  menuItems: MenuItem[]\n  menuItemGroups: MenuItemGroup[]\n  options: {[key: string]: unknown}\n}\n\n/**\n * @hidden\n * @beta */\nexport interface ComponentInput extends StructureNode {\n  component: UserComponent\n  child?: Child\n  options?: {[key: string]: unknown}\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n}\n\n/**\n * @hidden\n * @beta */\nexport interface BuildableComponent extends Partial<StructureNode> {\n  component?: UserComponent\n  child?: Child\n  options?: {[key: string]: unknown}\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n}\n\n/**\n * @hidden\n * @beta */\nexport class ComponentBuilder implements Serializable<Component> {\n  protected spec: BuildableComponent\n\n  constructor(spec?: ComponentInput) {\n    this.spec = {options: {}, ...(spec ? spec : {})}\n  }\n\n  id(id: string): ComponentBuilder {\n    return this.clone({id})\n  }\n\n  getId(): BuildableComponent['id'] {\n    return this.spec.id\n  }\n\n  title(title: string): ComponentBuilder {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  getTitle(): BuildableComponent['title'] {\n    return this.spec.title\n  }\n\n  child(child: Child): ComponentBuilder {\n    return this.clone({child})\n  }\n\n  getChild(): BuildableComponent['child'] {\n    return this.spec.child\n  }\n\n  component(component: UserComponent): ComponentBuilder {\n    return this.clone({component})\n  }\n\n  getComponent(): BuildableComponent['component'] {\n    return this.spec.component\n  }\n\n  options(options: {[key: string]: unknown}): ComponentBuilder {\n    return this.clone({options})\n  }\n\n  getOptions(): NonNullable<BuildableComponent['options']> {\n    return this.spec.options || {}\n  }\n\n  menuItems(menuItems: (MenuItem | MenuItemBuilder)[]): ComponentBuilder {\n    return this.clone({menuItems})\n  }\n\n  getMenuItems(): BuildableComponent['menuItems'] {\n    return this.spec.menuItems\n  }\n\n  menuItemGroups(menuItemGroups: (MenuItemGroup | MenuItemGroupBuilder)[]): ComponentBuilder {\n    return this.clone({menuItemGroups})\n  }\n\n  getMenuItemGroups(): BuildableComponent['menuItemGroups'] {\n    return this.spec.menuItemGroups\n  }\n\n  serialize(options: SerializeOptions = {path: []}): Component {\n    const {id, title, child, options: componentOptions, component} = this.spec\n    if (!id) {\n      throw new SerializeError(\n        '`id` is required for `component` structure item',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!component) {\n      throw new SerializeError(\n        '`component` is required for `component` structure item',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    return {\n      id: validateId(id, options.path, options.index),\n      title,\n      type: 'component',\n      child,\n      component,\n      options: componentOptions || {},\n      menuItems: (this.spec.menuItems || []).map((item, i) =>\n        maybeSerializeMenuItem(item, i, options.path)\n      ),\n      menuItemGroups: (this.spec.menuItemGroups || []).map((item, i) =>\n        maybeSerializeMenuItemGroup(item, i, options.path)\n      ),\n    }\n  }\n\n  clone(withSpec?: BuildableComponent): ComponentBuilder {\n    const builder = new ComponentBuilder()\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n","import type {SanityClient} from '@sanity/client'\nimport {\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  getDraftId,\n  getPublishedId,\n  type SourceClientOptions,\n} from 'sanity'\n\nexport async function resolveTypeForDocument(\n  getClient: (options: SourceClientOptions) => SanityClient,\n  id: string\n): Promise<string | undefined> {\n  const query = '*[_id in [$documentId, $draftId]]._type'\n  const documentId = getPublishedId(id)\n  const draftId = getDraftId(id)\n\n  const types = await getClient(DEFAULT_STUDIO_CLIENT_OPTIONS).fetch(\n    query,\n    {documentId, draftId},\n    {tag: 'structure.resolve-type'}\n  )\n\n  return types[0]\n}\n","import {kebabCase} from 'lodash'\nimport {Serializable, SerializeOptions, SerializePath} from '../StructureNodes'\nimport {HELP_URL, SerializeError} from '../SerializeError'\nimport {validateId} from '../util/validateId'\nimport {View} from '../types'\nimport {ComponentViewBuilder} from './ComponentView'\nimport {FormViewBuilder} from './FormView'\n\n/**\n * @hidden\n * @beta */\nexport interface BaseView {\n  id: string\n  title: string\n  icon?: React.ComponentType | React.ReactNode\n}\n\n/**\n * @hidden\n * @beta */\nexport abstract class GenericViewBuilder<TView extends Partial<BaseView>, ConcreteImpl>\n  implements Serializable<BaseView>\n{\n  protected spec: TView = {} as TView\n\n  id(id: string): ConcreteImpl {\n    return this.clone({id})\n  }\n\n  getId(): TView['id'] {\n    return this.spec.id\n  }\n\n  title(title: string): ConcreteImpl {\n    return this.clone({title, id: this.spec.id || kebabCase(title)})\n  }\n\n  getTitle(): TView['title'] {\n    return this.spec.title\n  }\n\n  icon(icon: React.ComponentType | React.ReactNode): ConcreteImpl {\n    return this.clone({icon})\n  }\n\n  getIcon(): TView['icon'] {\n    return this.spec.icon\n  }\n\n  serialize(options: SerializeOptions = {path: []}): BaseView {\n    const {id, title, icon} = this.spec\n    if (!id) {\n      throw new SerializeError(\n        '`id` is required for view item',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!title) {\n      throw new SerializeError(\n        '`title` is required for view item',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.TITLE_REQUIRED)\n    }\n\n    return {\n      id: validateId(id, options.path, options.index),\n      title,\n      icon,\n    }\n  }\n\n  abstract clone(withSpec?: Partial<BaseView>): ConcreteImpl\n}\n\nfunction isSerializable(view: BaseView | Serializable<BaseView>): view is Serializable<BaseView> {\n  return typeof (view as Serializable<BaseView>).serialize === 'function'\n}\n\n/** @internal */\nexport function maybeSerializeView(\n  item: View | Serializable<View>,\n  index: number,\n  path: SerializePath\n): View {\n  return isSerializable(item) ? item.serialize({path, index}) : item\n}\n\n/**\n * @hidden\n * @beta */\nexport type ViewBuilder = ComponentViewBuilder | FormViewBuilder\n","import {SerializeOptions} from '../StructureNodes'\nimport {SerializeError, HELP_URL} from '../SerializeError'\nimport type {UserViewComponent} from '../types'\nimport {BaseView, GenericViewBuilder} from './View'\nimport {isRecord} from 'sanity'\n\n/**\n * @hidden\n * @beta */\nexport interface ComponentView<TOptions = Record<string, any>> extends BaseView {\n  type: 'component'\n  component: UserViewComponent\n  options: TOptions\n}\n\nconst isComponentSpec = (spec: unknown): spec is ComponentView =>\n  isRecord(spec) && spec.type === 'component'\n\n/**\n * @hidden\n * @beta */\nexport class ComponentViewBuilder extends GenericViewBuilder<\n  Partial<ComponentView>,\n  ComponentViewBuilder\n> {\n  protected spec: Partial<ComponentView>\n\n  constructor(componentOrSpec?: UserViewComponent | Partial<ComponentView>) {\n    const spec = isComponentSpec(componentOrSpec) ? {...componentOrSpec} : {options: {}}\n\n    super()\n    this.spec = spec\n\n    const userComponent =\n      typeof componentOrSpec === 'function' ? componentOrSpec : this.spec.component\n\n    if (userComponent) {\n      // Because we're cloning, this'll return a new instance, so grab the spec from it\n      this.spec = this.component(userComponent).spec\n    }\n  }\n\n  component(component: UserViewComponent): ComponentViewBuilder {\n    return this.clone({component})\n  }\n\n  getComponent(): Partial<ComponentView>['component'] {\n    return this.spec.component\n  }\n\n  options(options: {[key: string]: any}): ComponentViewBuilder {\n    return this.clone({options})\n  }\n\n  getOptions(): ComponentView['options'] {\n    return this.spec.options || {}\n  }\n\n  serialize(options: SerializeOptions = {path: []}): ComponentView {\n    const base = super.serialize(options)\n\n    const component = this.spec.component\n    if (typeof component !== 'function') {\n      throw new SerializeError(\n        '`component` is required and must be a function for `component()` view item',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.COMPONENT_REQUIRED)\n    }\n\n    return {\n      ...base,\n      component,\n      options: this.spec.options || {},\n      type: 'component',\n    }\n  }\n\n  clone(withSpec?: Partial<ComponentView>): ComponentViewBuilder {\n    const builder = new ComponentViewBuilder()\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n","import {SerializeOptions} from '../StructureNodes'\nimport {BaseView, GenericViewBuilder} from './View'\n\n/**\n * @hidden\n * @beta */\nexport interface FormView extends BaseView {\n  type: 'form'\n}\n\n/**\n * @hidden\n * @beta */\nexport class FormViewBuilder extends GenericViewBuilder<Partial<BaseView>, FormViewBuilder> {\n  protected spec: Partial<FormView>\n\n  constructor(spec?: Partial<FormView>) {\n    super()\n    this.spec = {id: 'editor', title: 'Editor', ...(spec ? spec : {})}\n  }\n\n  serialize(options: SerializeOptions = {path: []}): FormView {\n    return {\n      ...super.serialize(options),\n      type: 'form',\n    }\n  }\n\n  clone(withSpec?: Partial<FormView>): FormViewBuilder {\n    const builder = new FormViewBuilder()\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n","import type {UserViewComponent} from '../types'\nimport {ComponentView, ComponentViewBuilder} from './ComponentView'\nimport {FormView, FormViewBuilder} from './FormView'\n\nexport * from './FormView'\nexport * from './ComponentView'\nexport * from './View'\n\n/** @internal */\nexport const form = (spec?: Partial<FormView>): FormViewBuilder => new FormViewBuilder(spec)\n\n/** @internal */\nexport const component = (\n  componentOrSpec?: UserViewComponent | Partial<ComponentView>\n): ComponentViewBuilder => new ComponentViewBuilder(componentOrSpec)\n","import {uniq} from 'lodash'\nimport {SchemaType} from '@sanity/types'\nimport {resolveTypeForDocument} from './util/resolveTypeForDocument'\nimport {ChildResolver} from './ChildResolver'\nimport {SerializeOptions, Serializable, Child, DocumentNode, EditorNode} from './StructureNodes'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {validateId} from './util/validateId'\nimport {ViewBuilder, maybeSerializeView} from './views/View'\nimport {form} from './views'\nimport type {StructureContext, View} from './types'\nimport {getStructureNodeId} from './util/getStructureNodeId'\n\nconst createDocumentChildResolver =\n  ({resolveDocumentNode, getClient}: StructureContext): ChildResolver =>\n  async (itemId, {params, path}) => {\n    let type = params.type\n\n    const parentPath = path.slice(0, path.length - 1)\n    const currentSegment = path[path.length - 1]\n\n    if (!type) {\n      type = await resolveTypeForDocument(getClient, itemId)\n    }\n\n    if (!type) {\n      throw new SerializeError(\n        `Failed to resolve document, and no type provided in parameters.`,\n        parentPath,\n        currentSegment\n      )\n    }\n\n    return resolveDocumentNode({documentId: itemId, schemaType: type})\n  }\n\n/**\n * @hidden\n * @beta */\nexport interface DocumentOptions {\n  id: string\n  type: string\n  template?: string\n  templateParameters?: Record<string, unknown>\n}\n\n/**\n * @hidden\n * @beta */\nexport type PartialDocumentNode = {\n  id?: string\n  title?: string\n  child?: Child\n  views?: (View | ViewBuilder)[]\n  options?: Partial<DocumentOptions>\n}\n\n/**\n * @hidden\n * @beta */\nexport class DocumentBuilder implements Serializable<DocumentNode> {\n  protected spec: PartialDocumentNode\n\n  constructor(protected _context: StructureContext, spec?: PartialDocumentNode) {\n    this.spec = spec ? spec : {}\n  }\n\n  id(id: string): DocumentBuilder {\n    return this.clone({id})\n  }\n\n  getId(): PartialDocumentNode['id'] {\n    return this.spec.id\n  }\n\n  title(title: string): DocumentBuilder {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  getTitle(): PartialDocumentNode['title'] {\n    return this.spec.title\n  }\n\n  child(child: Child): DocumentBuilder {\n    return this.clone({child})\n  }\n\n  getChild(): PartialDocumentNode['child'] {\n    return this.spec.child\n  }\n\n  documentId(documentId: string): DocumentBuilder {\n    // Let's try to be a bit helpful and assign an ID from document ID if none is specified\n    const paneId = this.spec.id || documentId\n    return this.clone({\n      id: paneId,\n      options: {\n        ...(this.spec.options || {}),\n        id: documentId,\n      },\n    })\n  }\n\n  getDocumentId(): Partial<DocumentOptions>['id'] {\n    return this.spec.options?.id\n  }\n\n  schemaType(documentType: SchemaType | string): DocumentBuilder {\n    return this.clone({\n      options: {\n        ...(this.spec.options || {}),\n        type: typeof documentType === 'string' ? documentType : documentType.name,\n      },\n    })\n  }\n\n  getSchemaType(): Partial<DocumentOptions>['type'] {\n    return this.spec.options?.type\n  }\n\n  initialValueTemplate(templateId: string, parameters?: Record<string, unknown>): DocumentBuilder {\n    return this.clone({\n      options: {\n        ...(this.spec.options || {}),\n        template: templateId,\n        templateParameters: parameters,\n      },\n    })\n  }\n\n  getInitialValueTemplate(): Partial<DocumentOptions>['template'] {\n    return this.spec.options?.template\n  }\n\n  getInitialValueTemplateParameters(): Partial<DocumentOptions>['templateParameters'] {\n    return this.spec.options?.templateParameters\n  }\n\n  views(views: (View | ViewBuilder)[]): DocumentBuilder {\n    return this.clone({views})\n  }\n\n  getViews(): (View | ViewBuilder)[] {\n    return this.spec.views || []\n  }\n\n  serialize({path = [], index, hint}: SerializeOptions = {path: []}): DocumentNode {\n    const urlId = path[index || path.length - 1]\n\n    // Try to grab document ID / editor ID from URL if not defined\n    const id = this.spec.id || (urlId && `${urlId}`) || ''\n    const options: Partial<DocumentOptions> = {\n      id,\n      type: undefined,\n      template: undefined,\n      templateParameters: undefined,\n      ...this.spec.options,\n    }\n\n    if (typeof id !== 'string' || !id) {\n      throw new SerializeError(\n        '`id` is required for document nodes',\n        path,\n        index,\n        hint\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!options || !options.id) {\n      throw new SerializeError(\n        'document id (`id`) is required for document nodes',\n        path,\n        id,\n        hint\n      ).withHelpUrl(HELP_URL.DOCUMENT_ID_REQUIRED)\n    }\n\n    if (!options || !options.type) {\n      throw new SerializeError(\n        'document type (`schemaType`) is required for document nodes',\n        path,\n        id,\n        hint\n      )\n    }\n\n    const views = (this.spec.views && this.spec.views.length > 0 ? this.spec.views : [form()]).map(\n      (item, i) => maybeSerializeView(item, i, path)\n    )\n\n    const viewIds = views.map((view) => view.id)\n    const dupes = uniq(viewIds.filter((viewId, i) => viewIds.includes(viewId, i + 1)))\n    if (dupes.length > 0) {\n      throw new SerializeError(\n        `document node has views with duplicate IDs: ${dupes.join(',  ')}`,\n        path,\n        id,\n        hint\n      )\n    }\n\n    return {\n      ...this.spec,\n      child: this.spec.child || createDocumentChildResolver(this._context),\n      id: validateId(id, path, index),\n      type: 'document',\n      options: getDocumentOptions(options),\n      views,\n    }\n  }\n\n  clone(withSpec: PartialDocumentNode = {}): DocumentBuilder {\n    const builder = new DocumentBuilder(this._context)\n    const options = {...(this.spec.options || {}), ...(withSpec.options || {})}\n    builder.spec = {...this.spec, ...withSpec, options}\n    return builder\n  }\n}\n\nfunction getDocumentOptions(spec: Partial<DocumentOptions>): DocumentOptions {\n  const opts: DocumentOptions = {\n    id: spec.id || '',\n    type: spec.type || '*',\n  }\n\n  if (spec.template) {\n    opts.template = spec.template\n  }\n\n  if (spec.templateParameters) {\n    opts.templateParameters = spec.templateParameters\n  }\n\n  return opts\n}\n\n/** @internal */\nexport function documentFromEditor(context: StructureContext, spec?: EditorNode): DocumentBuilder {\n  let doc = spec?.type\n    ? // Use user-defined document fragment as base if possible\n      context.resolveDocumentNode({schemaType: spec.type})\n    : // Fall back to plain old document builder\n      new DocumentBuilder(context)\n\n  if (!spec) return doc\n\n  const {id, type, template, templateParameters} = spec.options\n  doc = doc.id(spec.id).documentId(id)\n\n  if (type) {\n    doc = doc.schemaType(type)\n  }\n  if (template) {\n    doc = doc.initialValueTemplate(template, templateParameters)\n  }\n  if (spec.child) {\n    doc = doc.child(spec.child)\n  }\n\n  return doc\n}\n\n/** @internal */\nexport function documentFromEditorWithInitialValue(\n  {resolveDocumentNode, templates}: StructureContext,\n  templateId: string,\n  parameters?: Record<string, unknown>\n): DocumentBuilder {\n  const template = templates.find((t) => t.id === templateId)\n\n  if (!template) {\n    throw new Error(`Template with ID \"${templateId}\" not defined`)\n  }\n\n  return resolveDocumentNode({schemaType: template.schemaType}).initialValueTemplate(\n    templateId,\n    parameters\n  )\n}\n","export const layoutOptions = ['default', 'card', 'media', 'detail', 'block']\n","import {PartialDocumentList, getTypeNamesFromFilter} from './DocumentList'\nimport {StructureNode} from './StructureNodes'\n\n/**\n * @hidden\n * @beta */\nexport type IntentJsonParams = {[key: string]: any}\n\n/**\n * @hidden\n * @beta */\nexport type BaseIntentParams = {\n  type?: string\n  id?: string\n  template?: string\n}\n\n/** @internal */\nexport const DEFAULT_INTENT_HANDLER = Symbol('Document type list canHandleIntent')\n\n/**\n * @hidden\n * @beta */\nexport type IntentParams = BaseIntentParams | [BaseIntentParams, IntentJsonParams]\n\n/**\n * @hidden\n * @beta */\n// TODO: intents should be unified somewhere\nexport interface Intent {\n  type: string\n  params?: IntentParams\n}\n\n/**\n * @hidden\n * @beta */\nexport interface IntentChecker {\n  (\n    intentName: string,\n    params: {[key: string]: any},\n    context: {pane: StructureNode; index: number}\n  ): boolean\n  identity?: symbol\n}\n\n/** @internal */\nexport const defaultIntentChecker: IntentChecker = (intentName, params, {pane}): boolean => {\n  const isEdit = intentName === 'edit'\n  const isCreate = intentName === 'create'\n  const typedSpec = pane as PartialDocumentList\n  const paneFilter = typedSpec.options?.filter || ''\n  const paneParams = typedSpec.options?.params || {}\n  const typeNames = typedSpec.schemaTypeName\n    ? [typedSpec.schemaTypeName]\n    : getTypeNamesFromFilter(paneFilter, paneParams)\n\n  const initialValueTemplates = typedSpec.initialValueTemplates || []\n\n  if (isCreate && params.template) {\n    return initialValueTemplates.some((tpl) => tpl.templateId === params.template)\n  }\n\n  return (\n    (isEdit && params.id && typeNames.includes(params.type)) ||\n    (isCreate && typeNames.includes(params.type))\n  )\n}\n\ndefaultIntentChecker.identity = DEFAULT_INTENT_HANDLER\n","import {pickBy} from 'lodash'\nimport {ComposeIcon} from '@sanity/icons'\nimport {HELP_URL, SerializeError} from './SerializeError'\nimport {Serializable, SerializeOptions, SerializePath} from './StructureNodes'\nimport {MenuItemBuilder, MenuItem} from './MenuItem'\nimport {IntentParams} from './Intent'\nimport {StructureContext} from './types'\nimport {InitialValueTemplateItem} from 'sanity'\n\n/**\n * @hidden\n * @beta */\nexport class InitialValueTemplateItemBuilder implements Serializable<InitialValueTemplateItem> {\n  protected spec: Partial<InitialValueTemplateItem>\n\n  constructor(protected _context: StructureContext, spec?: Partial<InitialValueTemplateItem>) {\n    this.spec = spec ? spec : {}\n  }\n\n  id(id: string): InitialValueTemplateItemBuilder {\n    return this.clone({id})\n  }\n\n  getId(): Partial<InitialValueTemplateItem>['id'] {\n    return this.spec.id\n  }\n\n  title(title: string): InitialValueTemplateItemBuilder {\n    return this.clone({title})\n  }\n\n  getTitle(): Partial<InitialValueTemplateItem>['title'] {\n    return this.spec.title\n  }\n\n  description(description: string): InitialValueTemplateItemBuilder {\n    return this.clone({description})\n  }\n\n  getDescription(): Partial<InitialValueTemplateItem>['description'] {\n    return this.spec.description\n  }\n\n  templateId(templateId: string): InitialValueTemplateItemBuilder {\n    // Let's try to be a bit helpful and assign an ID from template ID if none is specified\n    const paneId = this.spec.id || templateId\n    return this.clone({\n      id: paneId,\n      templateId,\n    })\n  }\n\n  getTemplateId(): Partial<InitialValueTemplateItem>['templateId'] {\n    return this.spec.templateId\n  }\n\n  parameters(parameters: {[key: string]: any}): InitialValueTemplateItemBuilder {\n    return this.clone({parameters})\n  }\n\n  getParameters(): Partial<InitialValueTemplateItem>['parameters'] {\n    return this.spec.parameters\n  }\n\n  serialize({path = [], index, hint}: SerializeOptions = {path: []}): InitialValueTemplateItem {\n    const {spec, _context} = this\n    const {templates} = _context\n\n    if (typeof spec.id !== 'string' || !spec.id) {\n      throw new SerializeError(\n        '`id` is required for initial value template item nodes',\n        path,\n        index,\n        hint\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!spec.templateId) {\n      throw new SerializeError(\n        'template id (`templateId`) is required for initial value template item nodes',\n        path,\n        spec.id,\n        hint\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    const template = templates.find((t) => t.id === spec.templateId)\n\n    if (!template) {\n      throw new SerializeError(\n        'template id (`templateId`) is required for initial value template item nodes',\n        path,\n        spec.id,\n        hint\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    return {\n      id: spec.id,\n      templateId: spec.id,\n      schemaType: template.schemaType,\n      type: 'initialValueTemplateItem',\n      description: spec.description || template.description,\n      title: spec.title || template.title,\n      subtitle: spec.subtitle,\n      icon: spec.icon || template.icon,\n      initialDocumentId: spec.initialDocumentId,\n      parameters: spec.parameters,\n    }\n  }\n\n  clone(withSpec: Partial<InitialValueTemplateItem> = {}): InitialValueTemplateItemBuilder {\n    const builder = new InitialValueTemplateItemBuilder(this._context)\n    builder.spec = {...this.spec, ...withSpec}\n    return builder\n  }\n}\n\n/** @internal */\nexport function defaultInitialValueTemplateItems(\n  context: StructureContext\n): InitialValueTemplateItemBuilder[] {\n  const {schema, getStructureBuilder, templates} = context\n\n  // Sort templates by their schema type, in order or definition\n  const typeNames = schema.getTypeNames()\n  const ordered = templates\n    // Don't list templates that require parameters\n    // TODO: this should use the new-document template items instead maybe?\n    .filter((tpl) => !tpl.parameters?.length)\n    .sort((a, b) => typeNames.indexOf(a.schemaType) - typeNames.indexOf(b.schemaType))\n\n  // Create actual template items out of the templates\n  return ordered.map((tpl) => getStructureBuilder().initialValueTemplateItem(tpl.id))\n}\n\n/** @internal */\nexport function maybeSerializeInitialValueTemplateItem(\n  item: InitialValueTemplateItem | InitialValueTemplateItemBuilder,\n  index: number,\n  path: SerializePath\n): InitialValueTemplateItem {\n  return item instanceof InitialValueTemplateItemBuilder ? item.serialize({path, index}) : item\n}\n\n/** @internal */\nexport function menuItemsFromInitialValueTemplateItems(\n  context: StructureContext,\n  templateItems: InitialValueTemplateItem[]\n): MenuItem[] {\n  const {schema, templates} = context\n  return templateItems.map((item) => {\n    const template = templates.find((t) => t.id === item.templateId)\n    const title = item.title || template?.title || 'Create new'\n    const params = pickBy(\n      {type: template && template.schemaType, template: item.templateId},\n      Boolean\n    )\n    const intentParams: IntentParams = item.parameters ? [params, item.parameters] : params\n    const schemaType = template && schema.get(template.schemaType)\n\n    return new MenuItemBuilder(context)\n      .title(title)\n      .icon((template && template.icon) || schemaType?.icon || ComposeIcon)\n      .intent({type: 'create', params: intentParams})\n      .serialize()\n  })\n}\n","import {Child, Serializable, SerializeOptions, StructureNode} from './StructureNodes'\nimport {layoutOptions} from './Layout'\nimport {MenuItem, MenuItemBuilder, maybeSerializeMenuItem} from './MenuItem'\nimport {MenuItemGroup, MenuItemGroupBuilder, maybeSerializeMenuItemGroup} from './MenuItemGroup'\nimport {IntentChecker, defaultIntentChecker} from './Intent'\nimport {SerializeError} from './SerializeError'\nimport {\n  InitialValueTemplateItemBuilder,\n  maybeSerializeInitialValueTemplateItem,\n} from './InitialValueTemplateItem'\nimport {validateId} from './util/validateId'\nimport {getStructureNodeId} from './util/getStructureNodeId'\nimport {PreviewLayoutKey, InitialValueTemplateItem} from 'sanity'\n\nfunction noChildResolver() {\n  return undefined\n}\n\n/** @internal */\nexport const shallowIntentChecker: IntentChecker = (intentName, params, {pane, index}): boolean => {\n  return index <= 1 && defaultIntentChecker(intentName, params, {pane, index})\n}\n\n/**\n * @hidden\n * @beta */\nexport interface ListDisplayOptions {\n  showIcons?: boolean\n}\n\n/**\n * @hidden\n * @beta */\nexport interface BaseGenericList extends StructureNode {\n  defaultLayout?: PreviewLayoutKey\n  canHandleIntent?: IntentChecker\n  displayOptions?: ListDisplayOptions\n  child: Child\n  initialValueTemplates?: (InitialValueTemplateItem | InitialValueTemplateItemBuilder)[]\n}\n\n/**\n * @hidden\n * @beta */\n// \"POJO\"/verbatim-version - end result\nexport interface GenericList extends BaseGenericList {\n  type: string\n  menuItems: MenuItem[]\n  menuItemGroups: MenuItemGroup[]\n}\n\n/**\n * @hidden\n * @beta */\n// Used internally in builder classes to make everything optional\nexport interface BuildableGenericList extends Partial<BaseGenericList> {\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n}\n\n/**\n * @hidden\n * @beta */\n// Input version, allows builders and only requires things not inferrable\nexport interface GenericListInput extends StructureNode {\n  id: string\n  title: string\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n  initialValueTemplates?: (InitialValueTemplateItem | InitialValueTemplateItemBuilder)[]\n  defaultLayout?: PreviewLayoutKey\n  canHandleIntent?: IntentChecker\n  child?: Child\n}\n\n/**\n * @hidden\n * @beta */\nexport abstract class GenericListBuilder<TList extends BuildableGenericList, ConcreteImpl>\n  implements Serializable<GenericList>\n{\n  protected initialValueTemplatesSpecified = false\n  protected spec: TList = {} as TList\n\n  id(id: string): ConcreteImpl {\n    return this.clone({id})\n  }\n\n  getId(): TList['id'] {\n    return this.spec.id\n  }\n\n  title(title: string): ConcreteImpl {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  getTitle(): TList['title'] {\n    return this.spec.title\n  }\n\n  defaultLayout(defaultLayout: PreviewLayoutKey): ConcreteImpl {\n    return this.clone({defaultLayout})\n  }\n\n  getDefaultLayout(): TList['defaultLayout'] {\n    return this.spec.defaultLayout\n  }\n\n  menuItems(menuItems: (MenuItem | MenuItemBuilder)[] | undefined): ConcreteImpl {\n    return this.clone({menuItems})\n  }\n\n  getMenuItems(): TList['menuItems'] {\n    return this.spec.menuItems\n  }\n\n  menuItemGroups(menuItemGroups: (MenuItemGroup | MenuItemGroupBuilder)[]): ConcreteImpl {\n    return this.clone({menuItemGroups})\n  }\n\n  getMenuItemGroups(): TList['menuItemGroups'] {\n    return this.spec.menuItemGroups\n  }\n\n  child(child: Child): ConcreteImpl {\n    return this.clone({child})\n  }\n\n  getChild(): TList['child'] {\n    return this.spec.child\n  }\n\n  canHandleIntent(canHandleIntent: IntentChecker): ConcreteImpl {\n    return this.clone({canHandleIntent})\n  }\n\n  getCanHandleIntent(): TList['canHandleIntent'] {\n    return this.spec.canHandleIntent\n  }\n\n  showIcons(enabled = true): ConcreteImpl {\n    return this.clone({\n      displayOptions: {...(this.spec.displayOptions || {}), showIcons: enabled},\n    })\n  }\n\n  getShowIcons(): boolean | undefined {\n    return this.spec.displayOptions ? this.spec.displayOptions.showIcons : undefined\n  }\n\n  initialValueTemplates(\n    templates:\n      | InitialValueTemplateItem\n      | InitialValueTemplateItemBuilder\n      | Array<InitialValueTemplateItem | InitialValueTemplateItemBuilder>\n  ): ConcreteImpl {\n    this.initialValueTemplatesSpecified = true\n    return this.clone({initialValueTemplates: Array.isArray(templates) ? templates : [templates]})\n  }\n\n  getInitialValueTemplates(): TList['initialValueTemplates'] {\n    return this.spec.initialValueTemplates\n  }\n\n  serialize(options: SerializeOptions = {path: []}): GenericList {\n    const id = this.spec.id || ''\n    const path = options.path\n\n    const defaultLayout = this.spec.defaultLayout\n    if (defaultLayout && !layoutOptions.includes(defaultLayout)) {\n      throw new SerializeError(\n        `\\`layout\\` must be one of ${layoutOptions.map((item) => `\"${item}\"`).join(', ')}`,\n        path,\n        id || options.index,\n        this.spec.title\n      )\n    }\n\n    const initialValueTemplates = (this.spec.initialValueTemplates || []).map((item, i) =>\n      maybeSerializeInitialValueTemplateItem(item, i, path)\n    )\n\n    return {\n      id: validateId(id, options.path, id || options.index),\n      title: this.spec.title,\n      type: 'genericList',\n      defaultLayout,\n      child: this.spec.child || noChildResolver,\n      canHandleIntent: this.spec.canHandleIntent || shallowIntentChecker,\n      displayOptions: this.spec.displayOptions,\n      initialValueTemplates,\n      menuItems: (this.spec.menuItems || []).map((item, i) =>\n        maybeSerializeMenuItem(item, i, path)\n      ),\n      menuItemGroups: (this.spec.menuItemGroups || []).map((item, i) =>\n        maybeSerializeMenuItemGroup(item, i, path)\n      ),\n    }\n  }\n\n  abstract clone(_withSpec?: object): ConcreteImpl\n}\n","import {SchemaType, SortOrderingItem} from '@sanity/types'\nimport {ComposeIcon} from '@sanity/icons'\nimport {resolveTypeForDocument} from './util/resolveTypeForDocument'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {SerializeOptions, Child} from './StructureNodes'\nimport {ChildResolver, ChildResolverOptions, ItemChild} from './ChildResolver'\nimport {\n  GenericListBuilder,\n  BuildableGenericList,\n  GenericList,\n  GenericListInput,\n} from './GenericList'\nimport {DocumentBuilder} from './Document'\nimport {StructureContext} from './types'\nimport {InitialValueTemplateItem} from 'sanity'\n\nconst validateFilter = (spec: PartialDocumentList, options: SerializeOptions) => {\n  const filter = spec.options?.filter.trim() || ''\n\n  if (['*', '{'].includes(filter[0])) {\n    throw new SerializeError(\n      `\\`filter\\` cannot start with \\`${filter[0]}\\` - looks like you are providing a query, not a filter`,\n      options.path,\n      spec.id,\n      spec.title\n    ).withHelpUrl(HELP_URL.QUERY_PROVIDED_FOR_FILTER)\n  }\n\n  return filter\n}\n\nconst createDocumentChildResolverForItem =\n  (context: StructureContext): ChildResolver =>\n  (itemId: string, options: ChildResolverOptions): ItemChild | Promise<ItemChild> | undefined => {\n    const parentItem = options.parent as DocumentList\n    const template = options.params?.template\n      ? context.templates.find((tpl) => tpl.id === options.params.template)\n      : undefined\n    const type = template\n      ? template.schemaType\n      : parentItem.schemaTypeName || resolveTypeForDocument(context.getClient, itemId)\n\n    return Promise.resolve(type).then((schemaType) =>\n      schemaType\n        ? context.resolveDocumentNode({schemaType, documentId: itemId})\n        : new DocumentBuilder(context).id('editor').documentId(itemId).schemaType('')\n    )\n  }\n\n/**\n * @hidden\n * @beta */\nexport interface PartialDocumentList extends BuildableGenericList {\n  options?: DocumentListOptions\n  schemaTypeName?: string\n}\n\n/**\n * @hidden\n * @beta */\nexport interface DocumentListInput extends GenericListInput {\n  options: DocumentListOptions\n}\n\n/**\n * @hidden\n * @beta */\nexport interface DocumentList extends GenericList {\n  type: 'documentList'\n  options: DocumentListOptions\n  child: Child\n  schemaTypeName?: string\n}\n\n/**\n * @hidden\n * @beta */\nexport interface DocumentListOptions {\n  filter: string\n  params?: Record<string, unknown>\n  apiVersion?: string\n  defaultOrdering?: SortOrderingItem[]\n}\n\n/**\n * @hidden\n * @beta */\nexport class DocumentListBuilder extends GenericListBuilder<\n  PartialDocumentList,\n  DocumentListBuilder\n> {\n  protected spec: PartialDocumentList\n\n  constructor(protected _context: StructureContext, spec?: DocumentListInput) {\n    super()\n    this.spec = spec || {}\n    this.initialValueTemplatesSpecified = Boolean(spec?.initialValueTemplates)\n  }\n\n  apiVersion(apiVersion: string): DocumentListBuilder {\n    return this.clone({options: {...(this.spec.options || {filter: ''}), apiVersion}})\n  }\n\n  getApiVersion(): string | undefined {\n    return this.spec.options?.apiVersion\n  }\n\n  filter(filter: string): DocumentListBuilder {\n    return this.clone({options: {...(this.spec.options || {}), filter}})\n  }\n\n  getFilter(): string | undefined {\n    return this.spec.options?.filter\n  }\n\n  schemaType(type: SchemaType | string): DocumentListBuilder {\n    const schemaTypeName = typeof type === 'string' ? type : type.name\n    return this.clone({schemaTypeName})\n  }\n\n  getSchemaType(): string | undefined {\n    return this.spec.schemaTypeName\n  }\n\n  params(params: Record<string, unknown>): DocumentListBuilder {\n    return this.clone({\n      options: {...(this.spec.options || {filter: ''}), params},\n    })\n  }\n\n  getParams(): Record<string, unknown> | undefined {\n    return this.spec.options?.params\n  }\n\n  defaultOrdering(ordering: SortOrderingItem[]): DocumentListBuilder {\n    if (!Array.isArray(ordering)) {\n      throw new Error('`defaultOrdering` must be an array of order clauses')\n    }\n\n    return this.clone({\n      options: {...(this.spec.options || {filter: ''}), defaultOrdering: ordering},\n    })\n  }\n\n  getDefaultOrdering(): SortOrderingItem[] | undefined {\n    return this.spec.options?.defaultOrdering\n  }\n\n  serialize(options: SerializeOptions = {path: []}): DocumentList {\n    if (typeof this.spec.id !== 'string' || !this.spec.id) {\n      throw new SerializeError(\n        '`id` is required for document lists',\n        options.path,\n        options.index,\n        this.spec.title\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!this.spec.options || !this.spec.options.filter) {\n      throw new SerializeError(\n        '`filter` is required for document lists',\n        options.path,\n        this.spec.id,\n        this.spec.title\n      ).withHelpUrl(HELP_URL.FILTER_REQUIRED)\n    }\n\n    return {\n      ...super.serialize(options),\n      type: 'documentList',\n      schemaTypeName: this.spec.schemaTypeName,\n      child: this.spec.child || createDocumentChildResolverForItem(this._context),\n      options: {\n        ...this.spec.options,\n        apiVersion:\n          this.spec.options.apiVersion ||\n          // If this is a simple type filter, use modern API version - otherwise default to v1\n          (this.spec.options?.filter === '_type == $type' ? '2021-06-07' : '1'),\n        filter: validateFilter(this.spec, options),\n      },\n    }\n  }\n\n  clone(withSpec?: PartialDocumentList): DocumentListBuilder {\n    const builder = new DocumentListBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n\n    if (!this.initialValueTemplatesSpecified) {\n      builder.spec.initialValueTemplates = inferInitialValueTemplates(this._context, builder.spec)\n    }\n\n    if (!builder.spec.schemaTypeName) {\n      builder.spec.schemaTypeName = inferTypeName(builder.spec)\n    }\n\n    return builder\n  }\n\n  getSpec(): PartialDocumentList {\n    return this.spec\n  }\n}\n\nfunction inferInitialValueTemplates(\n  context: StructureContext,\n  spec: PartialDocumentList\n): InitialValueTemplateItem[] | undefined {\n  const {document} = context\n  const {schemaTypeName, options} = spec\n  const {filter, params} = options || {filter: '', params: {}}\n  const typeNames = schemaTypeName\n    ? [schemaTypeName]\n    : Array.from(new Set(getTypeNamesFromFilter(filter, params)))\n\n  if (typeNames.length === 0) {\n    return undefined\n  }\n\n  return typeNames\n    .flatMap((schemaType) =>\n      document.resolveNewDocumentOptions({\n        type: 'structure',\n        schemaType,\n      })\n    )\n    .map((option) => ({...option, icon: ComposeIcon}))\n}\n\nfunction inferTypeName(spec: PartialDocumentList): string | undefined {\n  const {options} = spec\n  const {filter, params} = options || {filter: '', params: {}}\n  const typeNames = getTypeNamesFromFilter(filter, params)\n  return typeNames.length === 1 ? typeNames[0] : undefined\n}\n\n/** @internal */\nexport function getTypeNamesFromFilter(\n  filter: string,\n  params: Record<string, unknown> = {}\n): string[] {\n  let typeNames = getTypeNamesFromEqualityFilter(filter, params)\n\n  if (typeNames.length === 0) {\n    typeNames = getTypeNamesFromInTypesFilter(filter, params)\n  }\n\n  return typeNames\n}\n\n// From _type == \"movie\" || _type == $otherType\nfunction getTypeNamesFromEqualityFilter(\n  filter: string,\n  params: Record<string, unknown> = {}\n): string[] {\n  const pattern =\n    /\\b_type\\s*==\\s*(['\"].*?['\"]|\\$.*?(?:\\s|$))|\\B(['\"].*?['\"]|\\$.*?(?:\\s|$))\\s*==\\s*_type/g\n  const matches: string[] = []\n  let match\n  while ((match = pattern.exec(filter)) !== null) {\n    matches.push(match[1] || match[2])\n  }\n\n  return matches\n    .map((candidate) => {\n      const typeName = candidate[0] === '$' ? params[candidate.slice(1)] : candidate\n      const normalized = ((typeName as string) || '').trim().replace(/^[\"']|[\"']$/g, '')\n      return normalized\n    })\n    .filter(Boolean)\n}\n\n// From _type in [\"dog\", \"cat\", $otherSpecies]\nfunction getTypeNamesFromInTypesFilter(\n  filter: string,\n  params: Record<string, unknown> = {}\n): string[] {\n  const pattern = /\\b_type\\s+in\\s+\\[(.*?)\\]/\n  const matches = filter.match(pattern)\n  if (!matches) {\n    return []\n  }\n\n  return matches[1]\n    .split(/,\\s*/)\n    .map((match) => match.trim().replace(/^[\"']+|[\"']+$/g, ''))\n    .map((item) => (item[0] === '$' ? params[item.slice(1)] : item))\n    .filter(Boolean) as string[]\n}\n","import {find} from 'lodash'\nimport {SerializePath, SerializeOptions, Divider} from './StructureNodes'\nimport {ChildResolverOptions, ChildResolver} from './ChildResolver'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {ListItem, ListItemBuilder} from './ListItem'\nimport {IntentChecker} from './Intent'\nimport {isDocumentListItem} from './DocumentListItem'\nimport {\n  GenericListBuilder,\n  BuildableGenericList,\n  GenericList,\n  GenericListInput,\n  shallowIntentChecker,\n} from './GenericList'\nimport {StructureContext} from './types'\nimport {isRecord} from 'sanity'\n\nconst getArgType = (thing: ListItem) => {\n  if (thing instanceof ListBuilder) {\n    return 'ListBuilder'\n  }\n\n  if (isPromise<ListItem>(thing)) {\n    return 'Promise'\n  }\n\n  return Array.isArray(thing) ? 'array' : typeof thing\n}\n\nconst isListItem = (item: ListItem | Divider): item is ListItem => {\n  return item.type === 'listItem'\n}\n\nconst defaultCanHandleIntent: IntentChecker = (intentName: string, params, context) => {\n  const pane = context.pane as List\n  const items = pane.items || []\n  return (\n    items\n      .filter(isDocumentListItem)\n      .some((item) => item.schemaType.name === params.type && item._id === params.id) ||\n    shallowIntentChecker(intentName, params, context)\n  )\n}\n\nconst resolveChildForItem: ChildResolver = (itemId: string, options: ChildResolverOptions) => {\n  const parentItem = options.parent as List\n  const items = parentItem.items.filter(isListItem)\n  const target = (items.find((item) => item.id === itemId) || {child: undefined}).child\n\n  if (!target || typeof target !== 'function') {\n    return target\n  }\n\n  return typeof target === 'function' ? target(itemId, options) : target\n}\n\nfunction maybeSerializeListItem(\n  item: ListItem | ListItemBuilder | Divider,\n  index: number,\n  path: SerializePath\n): ListItem | Divider {\n  if (item instanceof ListItemBuilder) {\n    return item.serialize({path, index})\n  }\n\n  const listItem = item as ListItem\n  if (listItem && listItem.type === 'divider') {\n    return item as Divider\n  }\n\n  if (!listItem || listItem.type !== 'listItem') {\n    const gotWhat = (listItem && listItem.type) || getArgType(listItem)\n    const helpText = gotWhat === 'array' ? ' - did you forget to spread (...moreItems)?' : ''\n    throw new SerializeError(\n      `List items must be of type \"listItem\", got \"${gotWhat}\"${helpText}`,\n      path,\n      index\n    ).withHelpUrl(HELP_URL.INVALID_LIST_ITEM)\n  }\n\n  return item\n}\n\nfunction isPromise<T>(thing: unknown): thing is PromiseLike<T> {\n  return isRecord(thing) && typeof thing.then === 'function'\n}\n\n/**\n * @hidden\n * @beta */\nexport interface List extends GenericList {\n  type: 'list'\n  items: (ListItem | Divider)[]\n}\n\n/**\n * @hidden\n * @beta */\nexport interface ListInput extends GenericListInput {\n  items?: (ListItem | ListItemBuilder | Divider)[]\n}\n\n/**\n * @hidden\n * @beta */\nexport interface BuildableList extends BuildableGenericList {\n  items?: (ListItem | ListItemBuilder | Divider)[]\n}\n\n/**\n * @hidden\n * @beta */\nexport class ListBuilder extends GenericListBuilder<BuildableList, ListBuilder> {\n  protected spec: BuildableList\n\n  constructor(protected _context: StructureContext, spec?: ListInput) {\n    super()\n    this.spec = spec ? spec : {}\n    this.initialValueTemplatesSpecified = Boolean(spec && spec.initialValueTemplates)\n  }\n\n  items(items: (ListItemBuilder | ListItem | Divider)[]): ListBuilder {\n    return this.clone({items})\n  }\n\n  getItems(): BuildableList['items'] {\n    return this.spec.items\n  }\n\n  serialize(options: SerializeOptions = {path: []}): List {\n    const id = this.spec.id\n    if (typeof id !== 'string' || !id) {\n      throw new SerializeError(\n        '`id` is required for lists',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    const items = typeof this.spec.items === 'undefined' ? [] : this.spec.items\n    if (!Array.isArray(items)) {\n      throw new SerializeError(\n        '`items` must be an array of items',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.LIST_ITEMS_MUST_BE_ARRAY)\n    }\n\n    const path = (options.path || []).concat(id)\n    const serializedItems = items.map((item, index) => maybeSerializeListItem(item, index, path))\n    const dupes = serializedItems.filter((val, i) => find(serializedItems, {id: val.id}, i + 1))\n\n    if (dupes.length > 0) {\n      const dupeIds = dupes.map((item) => item.id).slice(0, 5)\n      const dupeDesc = dupes.length > 5 ? `${dupeIds.join(', ')}...` : dupeIds.join(', ')\n      throw new SerializeError(\n        `List items with same ID found (${dupeDesc})`,\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.LIST_ITEM_IDS_MUST_BE_UNIQUE)\n    }\n\n    return {\n      ...super.serialize(options),\n      type: 'list',\n      canHandleIntent: this.spec.canHandleIntent || defaultCanHandleIntent,\n      child: this.spec.child || resolveChildForItem,\n      items: serializedItems,\n    }\n  }\n\n  clone(withSpec?: BuildableList): ListBuilder {\n    const builder = new ListBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n","import {SchemaType} from '@sanity/types'\nimport {Observable} from 'rxjs'\nimport {SerializeOptions, Serializable, Collection, CollectionBuilder} from './StructureNodes'\nimport {ChildResolver, ItemChild} from './ChildResolver'\nimport {DocumentListBuilder} from './DocumentList'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {ListBuilder} from './List'\nimport {DocumentBuilder} from './Document'\nimport {ComponentBuilder} from './Component'\nimport {validateId} from './util/validateId'\nimport {StructureContext} from './types'\nimport {getStructureNodeId} from './util/getStructureNodeId'\n\n/**\n * @hidden\n * @beta */\nexport type UnserializedListItemChild =\n  | Collection\n  | CollectionBuilder\n  | ChildResolver\n  | Observable<ItemChild>\n\n/**\n * @hidden\n * @beta */\nexport type ListItemChild = Collection | ChildResolver | Observable<ItemChild> | undefined\n\n/**\n * @hidden\n * @beta */\nexport interface ListItemSerializeOptions extends SerializeOptions {\n  titleIsOptional?: boolean\n}\n\n/**\n * @hidden\n * @beta */\nexport interface ListItemDisplayOptions {\n  showIcon?: boolean\n}\n\n/**\n * @hidden\n * @beta */\nexport interface ListItemInput {\n  id: string\n  title?: string\n  icon?: React.ComponentType | React.ReactNode\n  child?: ListItemChild\n  displayOptions?: ListItemDisplayOptions\n  schemaType?: SchemaType | string\n}\n\n/**\n * @hidden\n * @beta */\nexport interface ListItem {\n  id: string\n  type: string\n  title?: string\n  icon?: React.ComponentType | React.ReactNode\n  child?: ListItemChild\n  displayOptions?: ListItemDisplayOptions\n  schemaType?: SchemaType\n}\n\n/**\n * @hidden\n * @beta */\nexport interface UnserializedListItem {\n  id: string\n  title: string\n  icon?: React.ComponentType | React.ReactNode\n  child?: UnserializedListItemChild\n  displayOptions?: ListItemDisplayOptions\n  schemaType?: SchemaType | string\n}\n\n/**\n * @hidden\n * @beta */\nexport type PartialListItem = Partial<UnserializedListItem>\n\n/**\n * @hidden\n * @beta */\nexport class ListItemBuilder implements Serializable<ListItem> {\n  protected spec: PartialListItem\n\n  constructor(protected _context: StructureContext, spec?: ListItemInput) {\n    this.spec = spec ? spec : {}\n  }\n\n  id(id: string): ListItemBuilder {\n    return this.clone({id})\n  }\n\n  getId(): PartialListItem['id'] {\n    return this.spec.id\n  }\n\n  title(title: string): ListItemBuilder {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  getTitle(): PartialListItem['title'] {\n    return this.spec.title\n  }\n\n  icon(icon: React.ComponentType | React.ReactNode): ListItemBuilder {\n    return this.clone({icon})\n  }\n\n  showIcon(enabled = true): ListItemBuilder {\n    return this.clone({\n      displayOptions: {...(this.spec.displayOptions || {}), showIcon: enabled},\n    })\n  }\n\n  getShowIcon(): boolean | undefined {\n    return this.spec.displayOptions ? this.spec.displayOptions.showIcon : undefined\n  }\n\n  getIcon(): PartialListItem['icon'] {\n    return this.spec.icon\n  }\n\n  child(child: UnserializedListItemChild): ListItemBuilder {\n    return this.clone({child})\n  }\n\n  getChild(): PartialListItem['child'] {\n    return this.spec.child\n  }\n\n  schemaType(schemaType: SchemaType | string): ListItemBuilder {\n    return this.clone({schemaType})\n  }\n\n  getSchemaType(): PartialListItem['schemaType'] {\n    const schemaType = this.spec.schemaType\n\n    if (typeof schemaType === 'string') {\n      return this._context.schema.get(schemaType)\n    }\n\n    return this.spec.schemaType\n  }\n\n  serialize(options: ListItemSerializeOptions = {path: []}): ListItem {\n    const {id, title, child} = this.spec\n    if (typeof id !== 'string' || !id) {\n      throw new SerializeError(\n        '`id` is required for list items',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!options.titleIsOptional && (typeof title !== 'string' || !title)) {\n      throw new SerializeError('`title` is required for list items', options.path, id).withHelpUrl(\n        HELP_URL.TITLE_REQUIRED\n      )\n    }\n\n    let schemaType = this.spec.schemaType\n    if (typeof schemaType === 'string') {\n      const type = this._context.schema.get(schemaType)\n      if (!type) {\n        throw new SerializeError(\n          `Could not find type \"${schemaType}\" in schema`,\n          options.path,\n          id\n        ).withHelpUrl(HELP_URL.SCHEMA_TYPE_NOT_FOUND)\n      }\n\n      schemaType = type\n    }\n\n    const serializeOptions = {path: options.path.concat(id), hint: 'child'}\n    let listChild =\n      child instanceof ComponentBuilder ||\n      child instanceof DocumentListBuilder ||\n      child instanceof DocumentBuilder ||\n      child instanceof ListBuilder\n        ? child.serialize(serializeOptions)\n        : child\n\n    // In the case of a function, create a bound version that will pass the correct serialize\n    // context, so we may lazily resolve it at some point in the future without losing context\n    if (typeof listChild === 'function') {\n      const originalChild = listChild\n      listChild = (itemId, childOptions) => {\n        return originalChild(itemId, {...childOptions, serializeOptions})\n      }\n    }\n\n    return {\n      ...this.spec,\n      id: validateId(id, options.path, options.index),\n      schemaType,\n      child: listChild,\n      title,\n      type: 'listItem',\n    }\n  }\n\n  clone(withSpec?: PartialListItem): ListItemBuilder {\n    const builder = new ListItemBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n","import {SchemaType} from '@sanity/types'\nimport {SerializeOptions} from './StructureNodes'\nimport {ListItemBuilder, ListItem, UnserializedListItem, ListItemInput} from './ListItem'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {DocumentBuilder} from './Document'\nimport {StructureContext} from './types'\nimport {isRecord} from 'sanity'\n\n/**\n * @hidden\n * @beta */\nexport interface DocumentListItemInput extends ListItemInput {\n  schemaType: SchemaType | string\n}\n\n/**\n * @hidden\n * @beta */\nexport interface DocumentListItem extends ListItem {\n  schemaType: SchemaType\n  _id: string\n}\n\n/**\n * @hidden\n * @beta */\nexport type PartialDocumentListItem = Partial<UnserializedListItem>\n\nconst createDefaultChildResolver =\n  (context: StructureContext, spec: PartialDocumentListItem) => (documentId: string) => {\n    const schemaType =\n      spec.schemaType &&\n      (typeof spec.schemaType === 'string' ? spec.schemaType : spec.schemaType.name)\n\n    return schemaType\n      ? context.resolveDocumentNode({schemaType, documentId})\n      : new DocumentBuilder(context).id('documentEditor').documentId(documentId)\n  }\n\n/**\n * @hidden\n * @beta */\nexport class DocumentListItemBuilder extends ListItemBuilder {\n  protected spec: PartialDocumentListItem\n\n  constructor(protected _context: StructureContext, spec?: DocumentListItemInput) {\n    super(_context, spec)\n    this.spec = spec ? spec : {}\n  }\n\n  serialize(options: SerializeOptions = {path: []}): DocumentListItem {\n    const spec = super.serialize({...options, titleIsOptional: true})\n\n    if (!spec.schemaType) {\n      throw new SerializeError(\n        '`schemaType` is required for document list items',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.SCHEMA_TYPE_REQUIRED)\n    }\n\n    const child = spec.child || createDefaultChildResolver(this._context, spec)\n    return {...spec, child, schemaType: spec.schemaType, _id: spec.id}\n  }\n\n  clone(withSpec?: PartialDocumentListItem): DocumentListItemBuilder {\n    const builder = new DocumentListItemBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n\n/** @internal */\nexport function isDocumentListItem(item: unknown): item is DocumentListItem {\n  return isRecord(item) && typeof item.schemaType !== 'undefined' && typeof item._id === 'string'\n}\n","import {SchemaType} from '@sanity/types'\nimport {DocumentListBuilder, DocumentListInput, PartialDocumentList} from './DocumentList'\nimport {Child} from './StructureNodes'\nimport {DEFAULT_INTENT_HANDLER} from './Intent'\nimport {GenericListInput} from './GenericList'\nimport {StructureContext} from './types'\n\n/**\n * @hidden\n * @beta */\nexport interface DocumentTypeListInput extends Partial<GenericListInput> {\n  schemaType: SchemaType | string\n}\n\n/**\n * @hidden\n * @beta */\nexport class DocumentTypeListBuilder extends DocumentListBuilder {\n  protected spec: PartialDocumentList\n\n  constructor(protected _context: StructureContext, spec?: DocumentListInput) {\n    super(_context)\n    this.spec = spec ? spec : {}\n  }\n\n  child(child: Child): DocumentTypeListBuilder {\n    return this.cloneWithoutDefaultIntentHandler({child})\n  }\n\n  clone(withSpec?: PartialDocumentList): DocumentTypeListBuilder {\n    const parent = super.clone(withSpec)\n    const builder = new DocumentTypeListBuilder(this._context)\n    builder.spec = {...this.spec, ...parent.getSpec(), ...(withSpec || {})}\n    return builder\n  }\n\n  cloneWithoutDefaultIntentHandler(withSpec?: PartialDocumentList): DocumentTypeListBuilder {\n    const parent = super.clone(withSpec)\n    const builder = new DocumentTypeListBuilder(this._context)\n    const canHandleIntent = this.spec.canHandleIntent\n    const shouldOverride = canHandleIntent && canHandleIntent.identity === DEFAULT_INTENT_HANDLER\n    const override = shouldOverride ? {canHandleIntent: undefined} : {}\n    builder.spec = {\n      ...parent.getSpec(),\n      ...this.spec,\n      ...(withSpec || {}),\n      ...override,\n    }\n    return builder\n  }\n}\n","import {SchemaType} from '@sanity/types'\nimport {startCase} from 'lodash'\nimport {StackCompactIcon, StackIcon} from '@sanity/icons'\nimport {MenuItemBuilder, getOrderingMenuItemsForSchemaType} from './MenuItem'\nimport {DEFAULT_SELECTED_ORDERING_OPTION} from './Sort'\nimport {DocumentListBuilder} from './DocumentList'\nimport {ListItemBuilder, ListItem} from './ListItem'\nimport {DocumentTypeListBuilder, DocumentTypeListInput} from './DocumentTypeList'\nimport {defaultIntentChecker} from './Intent'\nimport {List} from './List'\nimport {Collection} from './StructureNodes'\nimport {StructureContext} from './types'\n\nfunction shouldShowIcon(schemaType: SchemaType): boolean {\n  const preview = schemaType.preview\n  return Boolean(preview && (preview.prepare || (preview.select && preview.select.media)))\n}\n\nconst BUNDLED_DOC_TYPES = ['sanity.imageAsset', 'sanity.fileAsset']\n\nfunction isBundledDocType(typeName: string) {\n  return BUNDLED_DOC_TYPES.includes(typeName)\n}\n\nfunction isDocumentType(schemaType: SchemaType) {\n  return schemaType.type?.name === 'document'\n}\n\nfunction isList(collection: Collection): collection is List {\n  return collection.type === 'list'\n}\n\nexport function getDocumentTypes({schema}: StructureContext): string[] {\n  return schema\n    .getTypeNames()\n    .filter((n) => {\n      const schemaType = schema.get(n)\n      return schemaType && isDocumentType(schemaType)\n    })\n    .filter((n) => !isBundledDocType(n))\n}\n\nexport function getDocumentTypeListItems(context: StructureContext): ListItemBuilder[] {\n  const types = getDocumentTypes(context)\n  return types.map((typeName) => getDocumentTypeListItem(context, typeName))\n}\n\nexport function getDocumentTypeListItem(\n  context: StructureContext,\n  typeName: string\n): ListItemBuilder {\n  const {schema} = context\n\n  const type = schema.get(typeName)\n  if (!type) {\n    throw new Error(`Schema type with name \"${typeName}\" not found`)\n  }\n\n  const title = type.title || startCase(typeName)\n\n  return new ListItemBuilder(context)\n    .id(typeName)\n    .title(title)\n    .schemaType(type)\n    .child((id, childContext) => {\n      const parent = childContext.parent as Collection\n      const parentItem = isList(parent)\n        ? (parent.items.find((item) => item.id === id) as ListItem)\n        : null\n\n      let list = getDocumentTypeList(context, typeName)\n      if (parentItem && parentItem.title) {\n        list = list.title(parentItem.title)\n      }\n\n      return list\n    })\n}\n\nexport function getDocumentTypeList(\n  context: StructureContext,\n  typeNameOrSpec: string | DocumentTypeListInput\n): DocumentListBuilder {\n  const {schema, resolveDocumentNode} = context\n\n  const schemaType = typeof typeNameOrSpec === 'string' ? typeNameOrSpec : typeNameOrSpec.schemaType\n  const typeName = typeof schemaType === 'string' ? schemaType : schemaType.name\n  const spec: DocumentTypeListInput =\n    typeof typeNameOrSpec === 'string' ? {schemaType} : typeNameOrSpec\n\n  const type = schema.get(typeName)\n  if (!type) {\n    throw new Error(`Schema type with name \"${typeName}\" not found`)\n  }\n\n  const title = type.title || startCase(typeName)\n  const showIcons = shouldShowIcon(type)\n\n  return new DocumentTypeListBuilder(context)\n    .id(spec.id || typeName)\n    .title(spec.title || title)\n    .filter('_type == $type')\n    .params({type: typeName})\n    .schemaType(type)\n    .showIcons(showIcons)\n    .defaultOrdering(DEFAULT_SELECTED_ORDERING_OPTION.by)\n    .menuItemGroups(\n      spec.menuItemGroups || [\n        {id: 'sorting', title: 'Sort'},\n        {id: 'layout', title: 'Layout'},\n        {id: 'actions', title: 'Actions'},\n      ]\n    )\n    .child(\n      spec.child ||\n        ((documentId: string) => resolveDocumentNode({schemaType: typeName, documentId}))\n    )\n    .canHandleIntent(spec.canHandleIntent || defaultIntentChecker)\n    .menuItems(\n      spec.menuItems || [\n        // Create new (from action button) will be added in serialization step of GenericList\n\n        // Sort by <Y>\n        ...getOrderingMenuItemsForSchemaType(context, type),\n\n        // Display as <Z>\n        new MenuItemBuilder(context)\n          .group('layout')\n          .title('Compact view')\n          .icon(StackCompactIcon)\n          .action('setLayout')\n          .params({layout: 'default'}),\n\n        new MenuItemBuilder(context)\n          .group('layout')\n          .title('Detailed view')\n          .icon(StackIcon)\n          .action('setLayout')\n          .params({layout: 'detail'}),\n\n        // Create new (from menu) will be added in serialization step of GenericList\n      ]\n    )\n}\n","import {uniqueId} from 'lodash'\nimport type {SchemaType} from '@sanity/types'\nimport {isValidElementType} from 'react-is'\nimport {ListBuilder} from './List'\nimport {\n  getDocumentTypeListItems,\n  getDocumentTypeListItem,\n  getDocumentTypeList,\n} from './documentTypeListItems'\nimport {MenuItemBuilder, getOrderingMenuItemsForSchemaType, getOrderingMenuItem} from './MenuItem'\nimport {ListItemBuilder} from './ListItem'\nimport {MenuItemGroupBuilder} from './MenuItemGroup'\nimport {DocumentListBuilder} from './DocumentList'\nimport type {Divider} from './StructureNodes'\nimport {DocumentBuilder, documentFromEditor, documentFromEditorWithInitialValue} from './Document'\nimport {ComponentInput, ComponentBuilder} from './Component'\nimport {DocumentListItemBuilder} from './DocumentListItem'\nimport * as views from './views'\nimport {\n  InitialValueTemplateItemBuilder,\n  defaultInitialValueTemplateItems,\n  menuItemsFromInitialValueTemplateItems,\n} from './InitialValueTemplateItem'\nimport type {\n  StructureBuilder,\n  UserComponent,\n  StructureContext,\n  DefaultDocumentNodeResolver,\n} from './types'\nimport {Source, getConfigContextFromSource, getPublishedId} from 'sanity'\n\n/** @internal */\nexport interface StructureBuilderOptions {\n  source: Source\n  defaultDocumentNode?: DefaultDocumentNodeResolver\n}\n\nfunction hasIcon(schemaType?: SchemaType | string): boolean {\n  if (!schemaType || typeof schemaType === 'string') {\n    return false\n  }\n\n  return Boolean(schemaType.icon)\n}\n\nfunction getDefaultStructure(context: StructureContext): ListBuilder {\n  const items = getDocumentTypeListItems(context)\n  return new ListBuilder(context)\n    .id('__root__')\n    .title('Content')\n    .items(items)\n    .showIcons(items.some((item) => hasIcon(item.getSchemaType())))\n}\n\n/** @internal */\nexport function createStructureBuilder({\n  defaultDocumentNode,\n  source,\n}: StructureBuilderOptions): StructureBuilder {\n  const configContext = getConfigContextFromSource(source)\n  const context: StructureContext = {\n    ...source,\n    getStructureBuilder: () => structureBuilder,\n    resolveDocumentNode: (options) => {\n      let builder =\n        defaultDocumentNode?.(structureBuilder, {...options, ...configContext}) ||\n        new DocumentBuilder(context)\n\n      if (!builder.getId()) {\n        builder = builder.id('documentEditor')\n      }\n\n      if (options.documentId) {\n        builder = builder.documentId(getPublishedId(options.documentId))\n      }\n\n      return builder.schemaType(options.schemaType)\n    },\n  }\n\n  const structureBuilder: StructureBuilder = {\n    defaults: () => getDefaultStructure(context),\n    documentTypeList: (...args) => getDocumentTypeList(context, ...args),\n    documentTypeListItem: (...args) => getDocumentTypeListItem(context, ...args),\n    documentTypeListItems: (...args) => getDocumentTypeListItems(context, ...args),\n    document: (...args) => new DocumentBuilder(context, ...args),\n    documentWithInitialValueTemplate: (...args) =>\n      documentFromEditorWithInitialValue(context, ...args),\n    defaultDocument: context.resolveDocumentNode,\n\n    list: (...args) => new ListBuilder(context, ...args),\n    listItem: (...args) => new ListItemBuilder(context, ...args),\n\n    menuItem: (...args) => new MenuItemBuilder(context, ...args),\n    menuItemGroup: (...args) => new MenuItemGroupBuilder(context, ...args),\n    menuItemsFromInitialValueTemplateItems: (...args) =>\n      menuItemsFromInitialValueTemplateItems(context, ...args),\n\n    documentList: (...args) => new DocumentListBuilder(context, ...args),\n    documentListItem: (...args) => new DocumentListItemBuilder(context, ...args),\n\n    orderingMenuItem: (...args) => getOrderingMenuItem(context, ...args),\n    orderingMenuItemsForType: (...args) => getOrderingMenuItemsForSchemaType(context, ...args),\n\n    editor: (...args) => documentFromEditor(context, ...args),\n\n    defaultInitialValueTemplateItems: (...args) =>\n      defaultInitialValueTemplateItems(context, ...args),\n\n    initialValueTemplateItem: (\n      templateId: string,\n      parameters?: Record<string, unknown>\n    ): InitialValueTemplateItemBuilder =>\n      new InitialValueTemplateItemBuilder(context, {\n        id: templateId,\n        parameters,\n        templateId,\n      }),\n\n    component: (spec?: ComponentInput | UserComponent) => {\n      return isValidElementType(spec)\n        ? new ComponentBuilder().component(spec as UserComponent)\n        : new ComponentBuilder(spec as ComponentInput)\n    },\n\n    divider: (): Divider => ({id: uniqueId('__divider__'), type: 'divider'}),\n\n    view: views,\n    context,\n  }\n\n  return structureBuilder\n}\n","import React, {useMemo, useState} from 'react'\nimport {DeskToolContext} from './DeskToolContext'\nimport {createStructureBuilder, DefaultDocumentNodeResolver} from './structureBuilder'\nimport {DeskToolContextValue, StructureResolver, UnresolvedPaneNode} from './types'\nimport {useConfigContextFromSource, useDocumentStore, useSource} from 'sanity'\n\n/** @internal */\nexport interface DeskToolProviderProps {\n  structure?: StructureResolver\n  defaultDocumentNode?: DefaultDocumentNodeResolver\n  children: React.ReactNode\n}\n\n/** @internal */\nexport function DeskToolProvider({\n  defaultDocumentNode,\n  structure: resolveStructure,\n  children,\n}: DeskToolProviderProps): React.ReactElement {\n  const [layoutCollapsed, setLayoutCollapsed] = useState(false)\n  const source = useSource()\n  const configContext = useConfigContextFromSource(source)\n  const documentStore = useDocumentStore()\n\n  const S = useMemo(() => {\n    return createStructureBuilder({\n      defaultDocumentNode,\n      source,\n    })\n  }, [defaultDocumentNode, source])\n\n  const rootPaneNode = useMemo(() => {\n    // TODO: unify types and remove cast\n    if (resolveStructure)\n      return resolveStructure(S, {\n        ...configContext,\n        documentStore,\n      }) as UnresolvedPaneNode\n    return S.defaults() as UnresolvedPaneNode\n  }, [S, resolveStructure, configContext, documentStore])\n\n  const features: DeskToolContextValue['features'] = useMemo(\n    () => ({\n      backButton: layoutCollapsed,\n      resizablePanes: !layoutCollapsed,\n      reviewChanges: !layoutCollapsed,\n      splitPanes: !layoutCollapsed,\n      splitViews: !layoutCollapsed,\n    }),\n    [layoutCollapsed]\n  )\n\n  const deskTool: DeskToolContextValue = useMemo(() => {\n    return {\n      features,\n      layoutCollapsed,\n      setLayoutCollapsed,\n      rootPaneNode,\n      structureContext: S.context,\n    }\n  }, [features, layoutCollapsed, rootPaneNode, S.context])\n\n  return <DeskToolContext.Provider value={deskTool}>{children}</DeskToolContext.Provider>\n}\n"],"names":["Delay","_ref","children","ms","ready","setReady","useState","useEffect","timeoutId","setTimeout","clearTimeout","jsx","Fragment","DocTitle","props","document","documentValue","schema","useSchema","schemaType","get","_type","error","value","useValuePreview","jsxs","message","title","style","color","TimeAgo","_ref2","time","timeAgo","useTimeAgo","isClientError","e","POLL_INTERVAL","visiblePoll$","getVisiblePoll$","fromEvent","pipe","startWith","map","visibilityState","distinctUntilChanged","switchMap","visible","timer","EMPTY","shareReplay","refCount","bufferSize","getDocumentExistence","documentId","_ref3","versionedClient","draftId","getDraftId","publishedId","getPublishedId","requestOptions","uri","getDataUrl","concat","json","query","excludeContent","tag","observable","request","_ref4","omitted","nonExistant","filter","doc","reason","length","some","id","fetchCrossDatasetReferences","context","checkDocumentId","of","totalCount","references","currentDataset","config","dataset","url","catchError","statusCode","useInternalReferences","createHookFromObservableFactory","_ref5","documentStore","referencesClause","totalClause","fetchQuery","listenQuery","fetch","listen","transitions","throttleTime","useCrossDatasetReferences","_ref6","useReferringDocuments","useClient","DEFAULT_STUDIO_CLIENT_OPTIONS","useDocumentStore","internalReferences","isInternalReferencesLoading","useMemo","crossDatasetReferences","isCrossDatasetReferencesLoading","projectIds","Array","from","Set","crossDatasetReference","projectId","Boolean","sort","datasetNames","datasetName","hasUnknownDatasetNames","isLoading","PublishedStatus","updatedAt","_updatedAt","Tooltip","portal","content","Box","padding","Text","size","TextWithTone","tone","dimmed","muted","PublishIcon","DraftStatus","EditIcon","PaneItemPreview","icon","layout","presence","isRecord","isValidElement","isString","isNumber","draft","published","useMemoObservable","getPreviewStateObservable","documentPreviewStore","_id","status","Inline","space","DocumentPreviewPresence","SanityDefaultPreview","getPreviewValueWithFallback","isPlaceholder","missingContext","Error","PaneRouterContext","createContext","index","groupIndex","siblingIndex","payload","params","hasGroupSiblings","groupLength","routerPanesState","BackLink","ChildLink","ReferenceChildLink","handleEditReference","ParameterizedLink","replaceCurrent","closeCurrent","duplicateCurrent","setView","setParams","setPayload","navigateIntent","forwardRef","ref","useContext","panes","slice","state","StateLink","childId","childPayload","childParameters","rest","documentType","parentRefPath","template","type","pathToString","currentPanes","nextParams","useUnique","nextPayload","nextState","currentGroup","currentSibling","nextSibling","nextGroup","nextPanes","usePaneRouter","EMPTY_ARRAY","ReferencePreviewLink","onClick","documentPresence","useDocumentPresence","useDocumentPreviewStore","Link","useCallback","LinkComponent","linkProps","name","PreviewCard","__unstable_focusRing","as","radius","ChevronWrapper","styled","_templateObject","_taggedTemplateLiteral","CrossDatasetReferencesDetails","details","_templateObject2","CrossDatasetReferencesSummary","summary","_templateObject3","TableContainer","attrs","paddingX","paddingBottom","_templateObject4","Table","table","_templateObject5","_ref8","theme","rem","sanity","_ref9","_ref10","DocumentIdFlex","Flex","_templateObject6","ReferencesCard","Card","shadow","marginBottom","flex","_templateObject7","OtherReferenceCount","difference","placement","Container","width","InfoOutlineIcon","ConfirmDeleteDialogBody","_ref11","documentTitle","action","onReferenceLinkClick","toast","useToast","renderPreviewItem","item","UnknownIcon","subtitle","documentCount","toLocaleString","normalizedDatasetNames","datasetsCount","datasetNameList","join","WarningOutlineIcon","marginLeft","direction","height","Stack","overflow","borderTop","align","marginRight","DocumentsIcon","textOverflow","ChevronDownIcon","Label","reference","_ref12","gap","justify","CopyToClipboard","text","onCopy","push","Button","mode","ClipboardIcon","fontSize","DialogBody","_templateObject8","LoadingContainer","_templateObject9","ConfirmDeleteDialog","_ref13","onCancel","onConfirm","dialogId","useId","capitalizedAction","substring","toUpperCase","showConfirmButton","Dialog","header","footer","Grid","columns","paddingY","onClose","onClickOutside","Spinner","marginTop","ConfirmDeleteDialogContainer","setError","handleRetry","ErrorBoundary","onCatch","MENU_GROUP_POPOVER_PROPS","constrainSize","PaneMenuButtonItem","disabled","isAfterGroup","node","MenuDivider","expanded","child","childIndex","_a","key","MenuGroup","popover","PaneContextMenuItemResolver","intent","PaneContextIntentMenuItem","PaneContextMenuItem","tooltipContent","TooltipOfDisabled","MenuItem","hotkeys","hotkey","split","iconRight","selected","CheckmarkIcon","onAction","pressed","intentLink","useIntentLink","handleClick","event","href","CONTEXT_MENU_POPOVER_PROPS","nodesHasTone","nodes","PaneContextMenuButton","hasCritical","hasCaution","MenuButton","button","StatusButton","EllipsisVerticalIcon","menu","Menu","nodeIndex","PANE_DEBUG","PANE_COLLAPSED_WIDTH","PANE_DEFAULT_MIN_WIDTH","PaneContext","PaneLayoutContext","usePaneLayout","pane","Root","Layer","_templateObject10","PaneDivider","_ref14","element","resize","dragging","setDragging","handleMouseDown","preventDefault","startX","pageX","handleMouseMove","deltaX","handleMouseUp","window","removeEventListener","addEventListener","onMouseDown","_templateObject11","Pane","_b","_c","currentMinWidth","currentMinWidthProp","currentMaxWidth","currentMaxWidthProp","flexProp","minWidth","minWidthProp","maxWidth","maxWidthProp","restProps","rootElement","setRootElement","collapse","collapsed","layoutCollapsed","expand","expandedElement","mount","find","p","paneIndex","indexOf","nextPane","isLast","nextCollapsed","forwardedRef","useForwardedRef","setRef","refValue","current","handleCollapse","handleExpand","contextValue","hidden","divider","LegacyLayerProvider","zOffset","Infinity","Provider","BoundaryElementProvider","usePane","_templateObject12","displayName","PaneContent","forwardedAs","_templateObject13","RootCard","_templateObject14","PaneFooter","_templateObject15","Layout","_templateObject16","TitleCard","_ref15","fg","bg","card","enabled","css","_templateObject17","TitleTextSkeleton","TextSkeleton","_templateObject18","TitleText","_templateObject19","TabsBox","_ref16","_templateObject20","rgba","base","PaneHeader","actions","backButton","contentAfter","loading","subActions","tabs","tabIndex","paneElement","paneRect","useElementRect","layoutStyle","innerHeight","handleTitleClick","handleLayoutClick","showTabsOrSubActions","LayerProvider","sizing","paddingLeft","animated","weight","paddingTop","PaneHeaderActionButton","PaneHeaderMenuItemActionButton","PaneHeaderMenuGroupActionButton","console","warn","PaneHeaderActionIntentButton","disabledTooltipContent","label","idx","_templateObject21","isMenuNodeButton","renderAsButton","isNotMenuNodeButton","negate","resolveMenuNodes","fieldActions","menuItems","menuItemGroups","keyOffset","i","a","mapFieldActionToPaneMenuNode","groups","itemGroup","group","g","ungroupedItems","shortcut","actionHandler","showAsAction","childIdx","IntentButton","Link2","linkRef","IntentLink","role","InsufficientPermissionsMessageTooltip","_ref17","reveal","currentUser","useCurrentUser","InsufficientPermissionsMessage","POPOVER_PROPS","getIntent","templates","typeName","t","templateId","baseParams","initialDocumentId","parameters","PaneHeaderCreateButton","_ref18","templateItems","useTemplates","templatePermissions","isTemplatePermissionsLoading","useTemplatePermissions","nothingGranted","every","permission","granted","permissionsById","reduce","acc","ComposeIcon","firstItem","permissions","itemIndex","isNonNullable","hashObject","sortObject","v","isArray","Object","entries","_ref19","_ref20","keyA","keyB","localeCompare","normalize","JSON","parse","stringify","PaneHeaderActions","memo","initialValueTemplateItems","initialValueTemplateItemsFromStructure","actionHandlers","EMPTY_OBJECT","handleAction","handler","menuNodes","actionNodes","contextMenuNodes","initialValueTemplateItemFromMenuItems","menuItemIndex","intentParams","templateParams","_ref21","initialValueTemplateItem","description","combinedInitialValueTemplates","uniqBy","DISABLED_REASON_TITLE","NOTHING_TO_DELETE","DeleteAction","_ref22","onComplete","delete","deleteOp","useDocumentOperation","isDeleting","setIsDeleting","isConfirmDialogOpen","setConfirmDialogOpen","handleCancel","handleConfirm","execute","handle","isPermissionsLoading","useDocumentPairPermissions","TrashIcon","operationLabel","onHandle","dialog","component","NO_CHANGES","NOT_PUBLISHED","DiscardChangesAction","_ref23","liveEdit","discardChanges","ResetIcon","NOTHING_TO_DUPLICATE","DuplicateAction","_ref24","duplicate","useRouter","isDuplicating","setDuplicating","dupeId","uuid","CopyIcon","HistoryRestoreAction","_ref25","revision","restore","isRevisionInitialVersion","isRevisionLatestVersion","RestoreIcon","DocumentPaneContext","useDocumentPane","documentPane","LIVE_EDIT_ENABLED","ALREADY_PUBLISHED","NOT_READY","getDisabledReason","publishedAt","PublishAction","publishState","setPublishState","publish","validationStatus","useValidationStatus","syncState","useSyncState","changesOpen","onHistoryOpen","editState","useEditState","_rev","hasValidationErrors","validation","isValidationErrorMarker","publishScheduled","setPublishScheduled","isSyncing","isValidating","hasDraft","doPublish","validationComplete","didPublish","delay","transactionSyncLock","UnpublishAction","_ref26","unpublish","UnpublishIcon","LiveEditBadge","_DEBUG","EMPTY_PARAMS","LOADING_PANE","Symbol","DOCUMENT_PANEL_PORTAL_ELEMENT","activePanes","setActivePanes","getIntentState","routerState","editDocumentId","isTemplate","canHandleIntent","call","schemaTypeName","options","paneParams","legacyEditParamsToState","decodeURIComponent","err","encodePanesSegment","encodeChunks","encodeURIComponent","legacyEditParamsToPath","toState","pathSegment","parsePanesSegment","toPath","router","route","create","intents","path","transform","panePattern","isParam","str","test","isPayload","exclusiveParams","isTruthy","parseChunks","chunks","initial","chunk","tryParseBase64Payload","firstSibling","paneIsFirstSibling","sameAsFirst","encodedPayload","btoa","encodedParams","entry","valueFromFirstSibling","includes","_ref27","flat","parseOldPanesSegment","restOfSiblings","segment","sibling","omit","buffer","match","payloadChunk","tryParsePayload","data","atob","DOCUMENT_PANEL_MIN_WIDTH","DOCUMENT_PANEL_INITIAL_MIN_WIDTH","DOCUMENT_INSPECTOR_MIN_WIDTH","DOCUMENT_INSPECTOR_MAX_WIDTH","INSPECT_ACTION_PREFIX","DEFAULT_MENU_ITEM_GROUPS","HISTORY_INSPECTOR_NAME","VALIDATION_INSPECTOR_NAME","position","zIndex","lineHeight","display","left","bottom","right","borderBottom","opacity","DocumentInspectorHeader","closeButtonLabel","CloseIcon","DeskToolContext","useDeskTool","deskTool","div","_templateObject22","Resizer","onResize","onResizeStart","mouseXRef","useRef","_templateObject23","Resizable","setElement","elementWidthRef","targetWidth","setTargetWidth","handleResizeStart","offsetWidth","handleResize","w","Math","min","max","getPathTypes","result","s","jsonType","field","fields","f","itemType","ofType","_key","values","MARKER_ICON","ErrorOutlineIcon","warning","info","MARKER_TONE","ValidationInspector","onFocus","onPathOpen","handleOpen","marker","ValidationCard","onOpen","errorInfo","setErrorInfo","level","createElement","DocumentNodePathBreadcrumbs","pathTypes","fontWeight","useMenuItem","validationMarkers","hasErrors","isValidationError","hasWarnings","isValidationWarning","CheckmarkCircleIcon","validationInspector","TIMELINE_LABELS","discardDraft","editDraft","editLive","TIMELINE_ICON_COMPONENTS","AddCircleIcon","formatTimelineEventLabel","getTimelineEventIconComponent","UserAvatarStack","_ref28","maxLength","userIds","AvatarStack","userId","UserAvatar","user","withTooltip","IconWrapper","_ref29","borderColor","skeleton","_templateObject24","_ref30","$selected","_templateObject25","_templateObject26","IconBox","_templateObject27","EventLabel","_templateObject28","TimestampBox","_templateObject29","_ref31","TIMELINE_ITEM_EVENT_TONE","withinSelection","TimelineItem","_ref32","isFirst","isLatest","isSelected","onSelect","timestamp","iconComponent","authorUserIds","authors","formattedTimestamp","parsedDate","Date","formattedDate","format","evt","stopPropagation","margin","StackWrapper","_templateObject30","ListWrapper","_templateObject31","_ref33","$visible","_templateObject32","_templateObject33","Timeline","_ref34","disabledBeforeFirstChunk","hasMoreChunks","lastChunk","onLoadMore","firstChunk","mounted","setMounted","filteredChunks","c","selectedIndex","findIndex","renderItem","_ref35","activeIndex","endTimestamp","CommandList","activeItemDataAttr","ariaLabel","autoFocus","initialIndex","initialScrollAlign","itemHeight","items","onEndReached","onEndReachedIndexOffset","overscan","wrapAround","TimelineError","Popover","_templateObject34","TimelineMenu","_ref36","setTimelineRange","setTimelineMode","timelineError","timelineStore","open","setOpen","setButton","setPopover","useTimelineSelector","realRevChunk","sinceTime","handleClose","handleClickOutside","handleGlobalKeyDown","focus","useClickOutside","useGlobalKeyDown","selectRev","revChunk","sinceId","revId","findRangeForRev","closable","selectSince","sinceChunk","findRangeForSince","handleLoadMore","loadMore","timeLabel","useFormattedTimestamp","revLabel","upperFirst","sinceLabel","buttonLabel","SelectIcon","formatted","LoadingContent","collectLatestAuthorAnnotations","diff","authorMap","Map","visitDiff","annotation","author","previous","set","b","Scroller","ScrollContainer","_templateObject35","ChangesInspector","scrollRef","onOlderRevision","selectionState","isComparingCurrent","documentContext","React","FieldWrapper","ChangeFieldWrapper","rootDiff","changeAnnotations","DiffTooltip","annotations","_ref37","Content","_ref38","NoChanges","DocumentChangeContext","ChangeList","changesInspector","features","reviewChanges","_ref39","since","_ref40","documentActions","documentBadges","definePlugin","prevActions","badges","prevBadges","badge","inspectors","tools","MasterDetailIcon","lazy","getInspectorItems","_ref41","currentInspector","hasValue","inspectorMenuItems","inspector","menuItem","isDisabled","getInspectItem","_ref42","BinaryDocumentIcon","getProductionPreviewItem","_ref43","previewUrl","EarthAmericasIcon","getMenuItems","inspectorItems","isSanityDocument","usePreviewUrl","setPreviewUrl","resolveProductionUrl","useSource","value$","useAsObservable","debounceTime","subscribe","next","getInitialValueTemplateOpts","opts","panePayload","structureNodeTemplate","templateName","urlTemplate","typeTemplates","InspectorMenuItem","setMenuItem","DocumentInspectorMenuItemsResolver","onMenuItems","len","lenRef","setMenuItems","menuItemsRef","newFieldActions","prev","inspectorIndex","DocumentPaneProvider","paneKey","unstable_fieldActions","fieldActionsResolver","unstable_languageFilter","languageFilterResolver","inspectorsResolver","presenceStore","usePresenceStore","paneRouter","setPaneParams","pushToast","views","viewsProp","paneOptions","documentIdRaw","templateParameters","initialValueRaw","useInitialValue","initialValue","patch","validationRaw","connectionState","useConnectionState","setInspectorMenuItems","languageFilter","focusPath","setFocusPath","pathFromString","activeViewId","view","timelineMode","setTimelineError","useTimelineStore","onError","rev","revTime","sinceAttributes","timelineDisplayed","timelineReady","setPresence","subscription","nextPresence","unsubscribe","inspectorName","setInspectorName","inspect","inspectParamRef","resolvedChangesInspector","inspectOpen","compareValue","displayed","newSince","newRev","handleFocus","nextFocusPath","setLocation","lastActiveAt","toISOString","handleBlur","blurredPath","patchRef","toMutationPatches","patches","handleChange","closeInspector","closeInspectorName","_d","openInspector","nextInspectorName","nextInspector","currentParams","closeResult","handleHistoryClose","handleHistoryOpen","handlePaneClose","handlePaneSplit","toggleLegacyInspect","toggle","arguments","undefined","handleMenuAction","startsWith","handleKeyUp","isHotkey","handleLegacyInspectClose","openPath","onSetOpenPath","fieldGroupState","onSetFieldGroupState","collapsedPaths","onSetCollapsedPath","collapsedFieldSets","onSetCollapsedFieldSets","handleOnSetCollapsedPath","prevState","setAtPath","handleOnSetCollapsedFieldSet","handleSetActiveFieldGroup","groupName","requiredPermission","_createdAt","docId","docPermissionsInput","useDocumentValuePermissions","isNonExistent","readOnly","hasNoPermission","updateActionDisabled","isActionEnabled","createActionDisabled","reconnecting","isLocked","formState","useFormState","comparisonValue","formStateRef","setOpenPath","ops","getExpandOperations","forEach","op","onBlur","onChange","onHistoryClose","onInspectClose","onKeyUp","onMenuAction","onPaneClose","onPaneSplit","onSetActiveFieldGroup","onSetCollapsedFieldSet","restParams","pathFromUrl","resolveKeyedPath","rootFieldActionNodes","setRootFieldActionNodes","FieldActionsResolver","onActions","FieldActionsProvider","SerializeError","constructor","parentPath","hint","__publicField","withHelpUrl","helpId","HELP_URL","IMPLICIT_FIELDS","joinReferences","head","tail","schemaField","refTypes","to","refType","tailFields","tailWrapper","getExtendedProjection","orderBy","ordering","ORDER_BY_UPDATED_AT","by","ORDER_BY_CREATED_AT","DEFAULT_SELECTED_ORDERING_OPTION","DEFAULT_ORDERING_OPTIONS","maybeSerializeMenuItem","MenuItemBuilder","serialize","_context","spec","clone","getAction","getTitle","getGroup","getIcon","getParams","getShowAsAction","TITLE_REQUIRED","ACTION_OR_INTENT_REQUIRED","ACTION_AND_INTENT_MUTUALLY_EXCLUSIVE","withSpec","builder","getOrderingMenuItem","extendedProjection","SortIcon","getOrderingMenuItemsForSchemaType","orderings","maybeSerializeMenuItemGroup","MenuItemGroupBuilder","_title","getId","ID_REQUIRED","disallowedPattern","validateId","disallowedChar","getStructureNodeId","camelCased","camelCase","getSlug","ComponentBuilder","getChild","getComponent","getOptions","getMenuItemGroups","componentOptions","resolveTypeForDocument","getClient","types","GenericViewBuilder","kebabCase","isSerializable","maybeSerializeView","isComponentSpec","ComponentViewBuilder","componentOrSpec","userComponent","COMPONENT_REQUIRED","FormViewBuilder","form","createDocumentChildResolver","_ref44","resolveDocumentNode","itemId","_ref45","currentSegment","DocumentBuilder","paneId","getDocumentId","getSchemaType","initialValueTemplate","getInitialValueTemplate","getInitialValueTemplateParameters","getViews","urlId","DOCUMENT_ID_REQUIRED","viewIds","dupes","uniq","viewId","getDocumentOptions","documentFromEditor","documentFromEditorWithInitialValue","_ref46","layoutOptions","DEFAULT_INTENT_HANDLER","defaultIntentChecker","intentName","_ref47","isEdit","isCreate","typedSpec","paneFilter","typeNames","getTypeNamesFromFilter","initialValueTemplates","tpl","identity","InitialValueTemplateItemBuilder","getDescription","getTemplateId","getParameters","defaultInitialValueTemplateItems","getStructureBuilder","getTypeNames","ordered","maybeSerializeInitialValueTemplateItem","menuItemsFromInitialValueTemplateItems","pickBy","noChildResolver","shallowIntentChecker","_ref48","GenericListBuilder","defaultLayout","getDefaultLayout","getCanHandleIntent","showIcons","displayOptions","getShowIcons","initialValueTemplatesSpecified","getInitialValueTemplates","validateFilter","trim","QUERY_PROVIDED_FOR_FILTER","createDocumentChildResolverForItem","parentItem","parent","Promise","resolve","then","DocumentListBuilder","apiVersion","getApiVersion","getFilter","defaultOrdering","getDefaultOrdering","FILTER_REQUIRED","inferInitialValueTemplates","inferTypeName","getSpec","flatMap","resolveNewDocumentOptions","option","getTypeNamesFromEqualityFilter","getTypeNamesFromInTypesFilter","pattern","matches","exec","candidate","normalized","replace","getArgType","thing","ListBuilder","isPromise","isListItem","defaultCanHandleIntent","isDocumentListItem","resolveChildForItem","target","maybeSerializeListItem","ListItemBuilder","listItem","gotWhat","helpText","INVALID_LIST_ITEM","getItems","LIST_ITEMS_MUST_BE_ARRAY","serializedItems","val","dupeIds","dupeDesc","LIST_ITEM_IDS_MUST_BE_UNIQUE","showIcon","getShowIcon","titleIsOptional","SCHEMA_TYPE_NOT_FOUND","serializeOptions","listChild","originalChild","childOptions","createDefaultChildResolver","DocumentListItemBuilder","SCHEMA_TYPE_REQUIRED","DocumentTypeListBuilder","cloneWithoutDefaultIntentHandler","shouldOverride","override","shouldShowIcon","preview","prepare","select","media","BUNDLED_DOC_TYPES","isBundledDocType","isDocumentType","isList","collection","getDocumentTypes","_ref49","n","getDocumentTypeListItems","getDocumentTypeListItem","startCase","childContext","list","getDocumentTypeList","typeNameOrSpec","StackCompactIcon","StackIcon","hasIcon","getDefaultStructure","createStructureBuilder","_ref50","defaultDocumentNode","source","configContext","getConfigContextFromSource","structureBuilder","defaults","documentTypeList","_len","args","documentTypeListItem","_len2","_key2","documentTypeListItems","_len3","_key3","_len4","_key4","documentWithInitialValueTemplate","_len5","_key5","defaultDocument","_len6","_key6","_len7","_key7","_len8","_key8","menuItemGroup","_len9","_key9","_len10","_key10","documentList","_len11","_key11","documentListItem","_len12","_key12","orderingMenuItem","_len13","_key13","orderingMenuItemsForType","_len14","_key14","editor","_len15","_key15","_len16","_key16","isValidElementType","uniqueId","DeskToolProvider","_ref51","structure","resolveStructure","setLayoutCollapsed","useConfigContextFromSource","S","rootPaneNode","resizablePanes","splitPanes","splitViews","structureContext"],"mappings":"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"}